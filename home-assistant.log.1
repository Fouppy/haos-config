2025-04-17 16:34:13.252 WARNING (SyncWorker_0) [homeassistant.loader] We found a custom integration dyson_local which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2025-04-17 16:34:13.252 WARNING (SyncWorker_0) [homeassistant.loader] We found a custom integration hacs which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2025-04-17 16:34:13.252 WARNING (SyncWorker_0) [homeassistant.loader] We found a custom integration nordpool which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2025-04-17 16:34:15.151 WARNING (MainThread) [homeassistant.util.loop] Detected blocking call to load_default_certs with args (<ssl.SSLContext object at 0x7f0f4453e7b0>, <Purpose.SERVER_AUTH: _ASN1Object(nid=129, shortname='serverAuth', longname='TLS Web Server Authentication', oid='1.3.6.1.5.5.7.3.1')>) inside the event loop by integration 'freebox' at homeassistant/components/freebox/__init__.py, line 26: await api.open(entry.data[CONF_HOST], entry.data[CONF_PORT]) (offender: /usr/local/lib/python3.13/ssl.py, line 722: context.load_default_certs(purpose)), please create a bug report at https://github.com/home-assistant/core/issues?q=is%3Aopen+is%3Aissue+label%3A%22integration%3A+freebox%22
For developers, please see https://developers.home-assistant.io/docs/asyncio_blocking_operations/#load_default_certs
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/usr/src/homeassistant/homeassistant/__main__.py", line 227, in <module>
    sys.exit(main())
  File "/usr/src/homeassistant/homeassistant/__main__.py", line 213, in main
    exit_code = runner.run(runtime_conf)
  File "/usr/src/homeassistant/homeassistant/runner.py", line 154, in run
    return loop.run_until_complete(setup_and_run_hass(runtime_config))
  File "/usr/local/lib/python3.13/asyncio/base_events.py", line 712, in run_until_complete
    self.run_forever()
  File "/usr/local/lib/python3.13/asyncio/base_events.py", line 683, in run_forever
    self._run_once()
  File "/usr/local/lib/python3.13/asyncio/base_events.py", line 2040, in _run_once
    handle._run()
  File "/usr/local/lib/python3.13/asyncio/events.py", line 89, in _run
    self._context.run(self._callback, *self._args)
  File "/usr/src/homeassistant/homeassistant/setup.py", line 171, in async_setup_component
    result = await _async_setup_component(hass, domain, config)
  File "/usr/src/homeassistant/homeassistant/setup.py", line 467, in _async_setup_component
    await asyncio.gather(
  File "/usr/src/homeassistant/homeassistant/setup.py", line 469, in <genexpr>
    create_eager_task(
  File "/usr/src/homeassistant/homeassistant/util/async_.py", line 45, in create_eager_task
    return Task(coro, loop=loop, name=name, eager_start=True)
  File "/usr/src/homeassistant/homeassistant/config_entries.py", line 896, in async_setup_locked
    await self.async_setup(hass, integration=integration)
  File "/usr/src/homeassistant/homeassistant/config_entries.py", line 662, in async_setup
    await self.__async_setup_with_context(hass, integration)
  File "/usr/src/homeassistant/homeassistant/config_entries.py", line 751, in __async_setup_with_context
    result = await component.async_setup_entry(hass, self)
  File "/usr/src/homeassistant/homeassistant/components/freebox/__init__.py", line 26, in async_setup_entry
    await api.open(entry.data[CONF_HOST], entry.data[CONF_PORT])

2025-04-17 16:34:15.165 WARNING (MainThread) [homeassistant.util.loop] Detected blocking call to set_default_verify_paths with args (<ssl.SSLContext object at 0x7f0f4453e7b0>,) inside the event loop by integration 'freebox' at homeassistant/components/freebox/__init__.py, line 26: await api.open(entry.data[CONF_HOST], entry.data[CONF_PORT]) (offender: /usr/local/lib/python3.13/ssl.py, line 534: self.set_default_verify_paths()), please create a bug report at https://github.com/home-assistant/core/issues?q=is%3Aopen+is%3Aissue+label%3A%22integration%3A+freebox%22
For developers, please see https://developers.home-assistant.io/docs/asyncio_blocking_operations/#set_default_verify_paths
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/usr/src/homeassistant/homeassistant/__main__.py", line 227, in <module>
    sys.exit(main())
  File "/usr/src/homeassistant/homeassistant/__main__.py", line 213, in main
    exit_code = runner.run(runtime_conf)
  File "/usr/src/homeassistant/homeassistant/runner.py", line 154, in run
    return loop.run_until_complete(setup_and_run_hass(runtime_config))
  File "/usr/local/lib/python3.13/asyncio/base_events.py", line 712, in run_until_complete
    self.run_forever()
  File "/usr/local/lib/python3.13/asyncio/base_events.py", line 683, in run_forever
    self._run_once()
  File "/usr/local/lib/python3.13/asyncio/base_events.py", line 2040, in _run_once
    handle._run()
  File "/usr/local/lib/python3.13/asyncio/events.py", line 89, in _run
    self._context.run(self._callback, *self._args)
  File "/usr/src/homeassistant/homeassistant/setup.py", line 171, in async_setup_component
    result = await _async_setup_component(hass, domain, config)
  File "/usr/src/homeassistant/homeassistant/setup.py", line 467, in _async_setup_component
    await asyncio.gather(
  File "/usr/src/homeassistant/homeassistant/setup.py", line 469, in <genexpr>
    create_eager_task(
  File "/usr/src/homeassistant/homeassistant/util/async_.py", line 45, in create_eager_task
    return Task(coro, loop=loop, name=name, eager_start=True)
  File "/usr/src/homeassistant/homeassistant/config_entries.py", line 896, in async_setup_locked
    await self.async_setup(hass, integration=integration)
  File "/usr/src/homeassistant/homeassistant/config_entries.py", line 662, in async_setup
    await self.__async_setup_with_context(hass, integration)
  File "/usr/src/homeassistant/homeassistant/config_entries.py", line 751, in __async_setup_with_context
    result = await component.async_setup_entry(hass, self)
  File "/usr/src/homeassistant/homeassistant/components/freebox/__init__.py", line 26, in async_setup_entry
    await api.open(entry.data[CONF_HOST], entry.data[CONF_PORT])

2025-04-17 16:34:15.189 WARNING (MainThread) [homeassistant.util.loop] Detected blocking call to load_verify_locations with args (<ssl.SSLContext object at 0x7f0f4453e7b0>,) inside the event loop by integration 'freebox' at homeassistant/components/freebox/__init__.py, line 26: await api.open(entry.data[CONF_HOST], entry.data[CONF_PORT]) (offender: /usr/local/lib/python3.13/site-packages/freebox_api/aiofreepybox.py, line 124: ssl_ctx.load_verify_locations(cafile=cert_path)), please create a bug report at https://github.com/home-assistant/core/issues?q=is%3Aopen+is%3Aissue+label%3A%22integration%3A+freebox%22
For developers, please see https://developers.home-assistant.io/docs/asyncio_blocking_operations/#load_verify_locations
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/usr/src/homeassistant/homeassistant/__main__.py", line 227, in <module>
    sys.exit(main())
  File "/usr/src/homeassistant/homeassistant/__main__.py", line 213, in main
    exit_code = runner.run(runtime_conf)
  File "/usr/src/homeassistant/homeassistant/runner.py", line 154, in run
    return loop.run_until_complete(setup_and_run_hass(runtime_config))
  File "/usr/local/lib/python3.13/asyncio/base_events.py", line 712, in run_until_complete
    self.run_forever()
  File "/usr/local/lib/python3.13/asyncio/base_events.py", line 683, in run_forever
    self._run_once()
  File "/usr/local/lib/python3.13/asyncio/base_events.py", line 2040, in _run_once
    handle._run()
  File "/usr/local/lib/python3.13/asyncio/events.py", line 89, in _run
    self._context.run(self._callback, *self._args)
  File "/usr/src/homeassistant/homeassistant/setup.py", line 171, in async_setup_component
    result = await _async_setup_component(hass, domain, config)
  File "/usr/src/homeassistant/homeassistant/setup.py", line 467, in _async_setup_component
    await asyncio.gather(
  File "/usr/src/homeassistant/homeassistant/setup.py", line 469, in <genexpr>
    create_eager_task(
  File "/usr/src/homeassistant/homeassistant/util/async_.py", line 45, in create_eager_task
    return Task(coro, loop=loop, name=name, eager_start=True)
  File "/usr/src/homeassistant/homeassistant/config_entries.py", line 896, in async_setup_locked
    await self.async_setup(hass, integration=integration)
  File "/usr/src/homeassistant/homeassistant/config_entries.py", line 662, in async_setup
    await self.__async_setup_with_context(hass, integration)
  File "/usr/src/homeassistant/homeassistant/config_entries.py", line 751, in __async_setup_with_context
    result = await component.async_setup_entry(hass, self)
  File "/usr/src/homeassistant/homeassistant/components/freebox/__init__.py", line 26, in async_setup_entry
    await api.open(entry.data[CONF_HOST], entry.data[CONF_PORT])

2025-04-17 16:34:15.200 WARNING (MainThread) [homeassistant.util.loop] Detected blocking call to open with args (PosixPath('/config/.storage/freebox/u88mwhkr_fbxos_fr.conf'), 'r') inside the event loop by integration 'freebox' at homeassistant/components/freebox/__init__.py, line 26: await api.open(entry.data[CONF_HOST], entry.data[CONF_PORT]) (offender: /usr/local/lib/python3.13/site-packages/freebox_api/aiofreepybox.py, line 328: with open(token_file, "r") as f:), please create a bug report at https://github.com/home-assistant/core/issues?q=is%3Aopen+is%3Aissue+label%3A%22integration%3A+freebox%22
For developers, please see https://developers.home-assistant.io/docs/asyncio_blocking_operations/#open
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/usr/src/homeassistant/homeassistant/__main__.py", line 227, in <module>
    sys.exit(main())
  File "/usr/src/homeassistant/homeassistant/__main__.py", line 213, in main
    exit_code = runner.run(runtime_conf)
  File "/usr/src/homeassistant/homeassistant/runner.py", line 154, in run
    return loop.run_until_complete(setup_and_run_hass(runtime_config))
  File "/usr/local/lib/python3.13/asyncio/base_events.py", line 712, in run_until_complete
    self.run_forever()
  File "/usr/local/lib/python3.13/asyncio/base_events.py", line 683, in run_forever
    self._run_once()
  File "/usr/local/lib/python3.13/asyncio/base_events.py", line 2040, in _run_once
    handle._run()
  File "/usr/local/lib/python3.13/asyncio/events.py", line 89, in _run
    self._context.run(self._callback, *self._args)
  File "/usr/src/homeassistant/homeassistant/setup.py", line 171, in async_setup_component
    result = await _async_setup_component(hass, domain, config)
  File "/usr/src/homeassistant/homeassistant/setup.py", line 467, in _async_setup_component
    await asyncio.gather(
  File "/usr/src/homeassistant/homeassistant/setup.py", line 469, in <genexpr>
    create_eager_task(
  File "/usr/src/homeassistant/homeassistant/util/async_.py", line 45, in create_eager_task
    return Task(coro, loop=loop, name=name, eager_start=True)
  File "/usr/src/homeassistant/homeassistant/config_entries.py", line 896, in async_setup_locked
    await self.async_setup(hass, integration=integration)
  File "/usr/src/homeassistant/homeassistant/config_entries.py", line 662, in async_setup
    await self.__async_setup_with_context(hass, integration)
  File "/usr/src/homeassistant/homeassistant/config_entries.py", line 751, in __async_setup_with_context
    result = await component.async_setup_entry(hass, self)
  File "/usr/src/homeassistant/homeassistant/components/freebox/__init__.py", line 26, in async_setup_entry
    await api.open(entry.data[CONF_HOST], entry.data[CONF_PORT])

2025-04-17 16:34:15.372 WARNING (MainThread) [homeassistant.components.freebox.router] Home access is not granted
2025-04-17 16:34:16.448 ERROR (MainThread) [homeassistant.components.light] Platform tuya does not generate unique IDs. ID tuya.bf48c67a3c22a83d0c70zjswitch_led already exists - ignoring light.couloir_lampe
2025-04-17 16:34:16.448 ERROR (MainThread) [homeassistant.components.light] Platform tuya does not generate unique IDs. ID tuya.3504541898cdac0b7ff1switch_led already exists - ignoring light.chambre_guirlande_light
2025-04-17 16:34:16.448 ERROR (MainThread) [homeassistant.components.light] Platform tuya does not generate unique IDs. ID tuya.bfdb82180889237dffasxhswitch_led already exists - ignoring light.bureau_lampe_light
2025-04-17 16:34:16.448 ERROR (MainThread) [homeassistant.components.select] Platform tuya does not generate unique IDs. ID tuya.bfcdb1ed9a27fa96a3y7almode already exists - ignoring select.chambre_aspirateur_mode
2025-04-17 16:34:16.450 ERROR (MainThread) [homeassistant.components.vacuum] Platform tuya does not generate unique IDs. ID tuya.bfcdb1ed9a27fa96a3y7al already exists - ignoring vacuum.chambre_aspirateur
2025-04-17 16:34:16.451 ERROR (MainThread) [homeassistant.components.light] Platform tuya does not generate unique IDs. ID tuya.bf48c67a3c22a83d0c70zjswitch_led already exists - ignoring light.couloir_lampe
2025-04-17 16:34:16.451 ERROR (MainThread) [homeassistant.components.light] Platform tuya does not generate unique IDs. ID tuya.3504541898cdac0b7ff1switch_led already exists - ignoring light.chambre_guirlande_light
2025-04-17 16:34:16.451 ERROR (MainThread) [homeassistant.components.light] Platform tuya does not generate unique IDs. ID tuya.bfdb82180889237dffasxhswitch_led already exists - ignoring light.bureau_lampe_light
2025-04-17 16:34:16.451 ERROR (MainThread) [homeassistant.components.select] Platform tuya does not generate unique IDs. ID tuya.bfcdb1ed9a27fa96a3y7almode already exists - ignoring select.chambre_aspirateur_mode
2025-04-17 16:34:16.452 ERROR (MainThread) [homeassistant.components.vacuum] Platform tuya does not generate unique IDs. ID tuya.bfcdb1ed9a27fa96a3y7al already exists - ignoring vacuum.chambre_aspirateur
2025-04-17 16:34:16.452 ERROR (MainThread) [homeassistant.components.light] Platform tuya does not generate unique IDs. ID tuya.bf48c67a3c22a83d0c70zjswitch_led already exists - ignoring light.couloir_lampe
2025-04-17 16:34:16.452 ERROR (MainThread) [homeassistant.components.light] Platform tuya does not generate unique IDs. ID tuya.3504541898cdac0b7ff1switch_led already exists - ignoring light.chambre_guirlande_light
2025-04-17 16:34:16.452 ERROR (MainThread) [homeassistant.components.light] Platform tuya does not generate unique IDs. ID tuya.bfdb82180889237dffasxhswitch_led already exists - ignoring light.bureau_lampe_light
2025-04-17 16:34:16.453 ERROR (MainThread) [homeassistant.components.select] Platform tuya does not generate unique IDs. ID tuya.bfcdb1ed9a27fa96a3y7almode already exists - ignoring select.chambre_aspirateur_mode
2025-04-17 16:34:16.453 ERROR (MainThread) [homeassistant.components.vacuum] Platform tuya does not generate unique IDs. ID tuya.bfcdb1ed9a27fa96a3y7al already exists - ignoring vacuum.chambre_aspirateur
2025-04-17 16:34:16.454 ERROR (MainThread) [homeassistant.components.light] Platform tuya does not generate unique IDs. ID tuya.bf48c67a3c22a83d0c70zjswitch_led already exists - ignoring light.couloir_lampe
2025-04-17 16:34:16.454 ERROR (MainThread) [homeassistant.components.light] Platform tuya does not generate unique IDs. ID tuya.3504541898cdac0b7ff1switch_led already exists - ignoring light.chambre_guirlande_light
2025-04-17 16:34:16.454 ERROR (MainThread) [homeassistant.components.light] Platform tuya does not generate unique IDs. ID tuya.bfdb82180889237dffasxhswitch_led already exists - ignoring light.bureau_lampe_light
2025-04-17 16:34:16.454 ERROR (MainThread) [homeassistant.components.select] Platform tuya does not generate unique IDs. ID tuya.bfcdb1ed9a27fa96a3y7almode already exists - ignoring select.chambre_aspirateur_mode
2025-04-17 16:34:16.454 ERROR (MainThread) [homeassistant.components.vacuum] Platform tuya does not generate unique IDs. ID tuya.bfcdb1ed9a27fa96a3y7al already exists - ignoring vacuum.chambre_aspirateur
2025-04-17 16:34:16.455 ERROR (MainThread) [homeassistant.components.light] Platform tuya does not generate unique IDs. ID tuya.bf48c67a3c22a83d0c70zjswitch_led already exists - ignoring light.couloir_lampe
2025-04-17 16:34:16.457 ERROR (MainThread) [homeassistant.components.light] Platform tuya does not generate unique IDs. ID tuya.3504541898cdac0b7ff1switch_led already exists - ignoring light.chambre_guirlande_light
2025-04-17 16:34:16.457 ERROR (MainThread) [homeassistant.components.light] Platform tuya does not generate unique IDs. ID tuya.bfdb82180889237dffasxhswitch_led already exists - ignoring light.bureau_lampe_light
2025-04-17 16:34:16.458 ERROR (MainThread) [homeassistant.components.select] Platform tuya does not generate unique IDs. ID tuya.bfcdb1ed9a27fa96a3y7almode already exists - ignoring select.chambre_aspirateur_mode
2025-04-17 16:34:16.458 ERROR (MainThread) [homeassistant.components.vacuum] Platform tuya does not generate unique IDs. ID tuya.bfcdb1ed9a27fa96a3y7al already exists - ignoring vacuum.chambre_aspirateur
2025-04-17 16:34:26.435 ERROR (MainThread) [homeassistant.components.automation.rodret_to_tradfri] Got error 'Cannot subscribe to topic '+/+/action', make sure MQTT is set up correctly' when setting up triggers for Rodret to Tradfri
2025-04-17 16:34:26.435 ERROR (MainThread) [homeassistant.components.automation.rodret_to_tradfri] Got error 'Cannot subscribe to topic '+/+/action', make sure MQTT is set up correctly' when setting up triggers for Rodret to Tradfri
2025-04-17 16:34:26.435 ERROR (MainThread) [homeassistant.components.automation.rodret_to_tradfri] Got error 'Cannot subscribe to topic '+/+/action', make sure MQTT is set up correctly' when setting up triggers for Rodret to Tradfri
2025-04-17 16:34:26.435 ERROR (MainThread) [homeassistant.components.automation.rodret_to_tradfri] Got error 'Cannot subscribe to topic '+/+/action', make sure MQTT is set up correctly' when setting up triggers for Rodret to Tradfri
2025-04-17 16:34:26.435 ERROR (MainThread) [homeassistant.components.automation.rodret_to_tradfri] Got error 'Cannot subscribe to topic '+/+/action', make sure MQTT is set up correctly' when setting up triggers for Rodret to Tradfri
2025-04-17 16:34:26.435 ERROR (MainThread) [homeassistant.components.automation.rodret_to_tradfri] Got error 'Cannot subscribe to topic '+/+/action', make sure MQTT is set up correctly' when setting up triggers for Rodret to Tradfri
2025-04-17 16:34:26.435 ERROR (MainThread) [homeassistant.components.automation.rodret_to_tradfri] Got error 'Cannot subscribe to topic '+/+/action', make sure MQTT is set up correctly' when setting up triggers for Rodret to Tradfri
2025-04-17 16:34:26.435 ERROR (MainThread) [homeassistant.components.automation.rodret_to_tradfri] Got error 'Cannot subscribe to topic '+/+/action', make sure MQTT is set up correctly' when setting up triggers for Rodret to Tradfri
2025-04-17 16:34:26.435 ERROR (MainThread) [homeassistant.components.automation.rodret_to_tradfri] Got error 'Cannot subscribe to topic '+/+/action', make sure MQTT is set up correctly' when setting up triggers for Rodret to Tradfri
2025-04-17 16:34:26.435 ERROR (MainThread) [homeassistant.components.automation.rodret_to_tradfri] Got error 'Cannot subscribe to topic '+/+/action', make sure MQTT is set up correctly' when setting up triggers for Rodret to Tradfri
2025-04-17 16:34:26.435 ERROR (MainThread) [homeassistant.components.automation.rodret_to_tradfri] Got error 'Cannot subscribe to topic '+/+/action', make sure MQTT is set up correctly' when setting up triggers for Rodret to Tradfri
2025-04-17 16:38:17.935 WARNING (MainThread) [zigpy.application] Received relays from an unknown device: 0x324B
2025-04-17 16:38:18.003 WARNING (MainThread) [zigpy.application] Unknown device AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x324B)
2025-04-17 16:39:15.519 WARNING (MainThread) [zha.zigbee.cluster_handlers] [0x324B:1:0x1000]: Couldn't get list of groups: 
2025-04-17 16:40:19.809 WARNING (MainThread) [homeassistant.components.websocket_api.http.connection] [139703333305600] from 192.168.1.8 (Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36): Disconnected: Did not receive auth message within 10 seconds
2025-04-17 17:23:41.846 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 17:23:41.852 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 17:23:41.857 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified
2025-04-17 17:23:41.859 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}' but no default was specified
2025-04-17 17:23:41.862 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = state_attr("sensor.tz3000_2putqrmw_ts011f_summation_delivered_2", "consumption").0 %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:23:41.865 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified
2025-04-17 17:23:41.867 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:23:41.871 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:23:41.875 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:23:41.879 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:23:41.881 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:23:41.885 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:23:41.888 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:23:41.890 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
TypeError: float() argument must be a string or a real number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:23:41.894 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:27:15.992 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = 0.1979 * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:31:47.569 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 17:31:47.572 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 17:31:47.574 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified
2025-04-17 17:31:47.575 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}' but no default was specified
2025-04-17 17:31:47.577 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = 0.1979 * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:31:47.579 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified
2025-04-17 17:31:47.581 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:31:47.582 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:31:47.584 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:31:47.585 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:31:47.587 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:31:47.588 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:31:47.594 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:31:47.596 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
TypeError: float() argument must be a string or a real number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:31:47.597 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:32:33.580 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 17:32:33.582 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 17:32:33.584 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified
2025-04-17 17:32:33.586 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}' but no default was specified
2025-04-17 17:32:33.588 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = 0.1979 * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:32:33.589 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified
2025-04-17 17:32:33.591 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:32:33.593 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:32:33.595 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:32:33.597 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:32:33.598 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:32:33.601 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:32:33.603 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:32:33.604 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
TypeError: float() argument must be a string or a real number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:32:33.606 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:36:51.733 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified
2025-04-17 17:36:51.735 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:36:51.737 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = 0.1979 * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=42>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:36:51.739 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:36:51.741 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:36:51.742 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:36:51.743 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:36:51.745 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:36:51.746 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:38:26.182 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified
2025-04-17 17:38:26.184 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:38:26.187 ERROR (MainThread) [homeassistant.helpers.template] Template variable error: 'sensor' is undefined when rendering '{% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = sensor.nordpool * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.'
2025-04-17 17:38:26.187 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = sensor.nordpool * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 319, in getattr
    value = getattr(obj, attribute)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2936, in _fail_with_undefined_error
    return super()._fail_with_undefined_error(*args, **kwargs)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
jinja2.exceptions.UndefinedError: 'sensor' is undefined

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: 'sensor' is undefined
2025-04-17 17:38:26.189 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:38:26.191 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:38:26.192 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:38:26.194 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:38:26.195 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:38:26.196 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:38:26.197 ERROR (MainThread) [homeassistant.helpers.template] Template variable error: 'sensor' is undefined when rendering '{% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = sensor.nordpool * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.'
2025-04-17 17:38:54.828 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified
2025-04-17 17:38:54.829 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:38:54.835 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = state_attr("sensor.nordpool", "price") * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:38:54.836 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:38:54.838 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:38:54.840 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:38:54.842 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:38:54.844 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:38:54.845 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:41:21.981 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified
2025-04-17 17:41:21.983 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:41:21.988 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = state_attr("sensor.nordpool", "current_price") * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:41:21.989 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:41:21.990 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:41:21.992 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:41:21.994 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:41:21.995 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:41:21.996 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:42:01.021 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified
2025-04-17 17:42:01.023 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:42:01.024 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = state_attr("sensor.nordpool", "current_price") * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=8>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:42:01.025 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:42:01.027 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:42:01.028 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:42:01.030 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:42:01.031 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:42:01.033 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:42:41.294 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified
2025-04-17 17:42:41.297 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:42:41.300 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = state_attr("sensor.nordpool", "current_price") * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=12>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:42:41.301 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=34>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:42:41.303 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=34>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:42:41.304 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=34>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:42:41.306 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=34>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:42:41.308 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=34>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:42:41.310 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=34>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:43:57.508 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh.) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified
2025-04-17 17:43:57.510 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:43:57.514 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = state_attr("sensor.nordpool", "current_price") * wh / 1000 %} {{ wh / 1000 }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:43:57.515 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=38>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:43:57.517 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=38>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:43:57.520 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=38>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:43:57.521 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=38>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:43:57.523 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=38>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:43:57.525 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=38>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:44:24.595 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh.) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified
2025-04-17 17:44:24.597 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:44:24.601 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=42>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:44:24.602 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=42>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:44:24.605 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=42>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:44:24.606 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=42>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:44:24.608 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=42>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:44:24.610 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=42>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:44:34.922 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh.) renders=34>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified
2025-04-17 17:44:34.924 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=34>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:44:34.926 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=46>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:44:34.927 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=46>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:44:34.929 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=46>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:44:34.931 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=46>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:44:34.932 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=46>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:44:34.934 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=46>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:45:22.375 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh.) renders=38>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified
2025-04-17 17:45:22.376 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=38>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:45:22.380 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = state_attr("sensor.nordpool", "current_price").0 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:45:22.381 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=50>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:45:22.383 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=50>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:45:22.384 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=50>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:45:22.386 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=50>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:45:22.387 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=50>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:45:22.390 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=50>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:45:56.492 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh.) renders=42>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified
2025-04-17 17:45:56.495 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=42>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:45:56.497 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = state_attr("sensor.nordpool", "current_price").0 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=8>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:45:56.499 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=54>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:45:56.501 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=54>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:45:56.503 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=54>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:45:56.504 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=54>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:45:56.505 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=54>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:45:56.508 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=54>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:47:44.621 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh.) renders=46>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified
2025-04-17 17:47:44.624 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=46>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:47:44.625 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=58>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:47:44.627 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=58>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:47:44.629 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=58>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:47:44.630 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=58>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:47:44.631 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=58>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:47:44.633 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=58>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:48:16.371 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh.) renders=50>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified
2025-04-17 17:48:16.373 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=50>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:48:16.377 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = state_attr("sensor.lava_lampe_rouge_cons_cost", "current_price") * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:48:16.378 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=62>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:48:16.380 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=62>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:48:16.382 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=62>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:48:16.384 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=62>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:48:16.386 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=62>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:48:16.388 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=62>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:48:31.572 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh.) renders=54>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified
2025-04-17 17:48:31.574 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=54>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:48:31.576 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = state_attr("sensor.lava_lampe_rouge_cons_cost", "current_price") * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:48:31.578 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=66>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:48:31.579 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=66>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:48:31.581 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=66>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:48:31.582 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=66>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:48:31.585 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=66>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:48:31.587 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=66>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:48:59.612 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh.) renders=58>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh.' but no default was specified
2025-04-17 17:48:59.614 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=58>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:48:59.616 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = state_attr("sensor.lava_lampe_rouge_cons_cost", "current_price") * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:48:59.617 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=70>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:48:59.619 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=70>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:48:59.622 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=70>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:48:59.624 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=70>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:48:59.626 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=70>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:48:59.628 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=70>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:51:33.439 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=62>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:51:33.443 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.lava_lampe_rouge_cons_cost", "current_price") * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:51:33.444 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=82>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:51:33.446 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=74>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:51:33.448 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=74>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:51:33.451 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=74>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:51:33.452 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=74>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:51:33.453 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=74>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:53:09.229 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power") / 1000 | round(2) }} kWh.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
TypeError: unsupported operand type(s) for /: 'str' and 'float'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TypeError: unsupported operand type(s) for /: 'str' and 'float'
2025-04-17 17:53:09.231 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=66>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:53:09.241 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.lava_lampe_rouge_cons_cost", "current_price") * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:53:09.243 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=94>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:53:09.244 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=78>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:53:09.246 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=78>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:53:09.247 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=78>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:53:09.249 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=78>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:53:09.250 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=78>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:53:33.471 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=70>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:53:33.472 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.lava_lampe_rouge_cons_cost", "current_price") * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:53:33.474 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.) renders=98>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '{{ states("sensor.daily_power")|round(2) }} kWh power → €{{ states("sensor.daily_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:53:33.475 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=82>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:53:33.477 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=82>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:53:33.478 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=82>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:53:33.480 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=82>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:53:33.481 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=82>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:54:44.663 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=74>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:54:44.666 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 17:54:44.668 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=86>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:54:44.669 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=86>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:54:44.671 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=86>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:54:44.673 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=86>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:54:44.674 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=86>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:55:05.871 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=78>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:55:05.875 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 17:55:05.875 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
TypeError: float() argument must be a string or a real number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'None' when rendering template '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'None' when rendering template '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.' but no default was specified
2025-04-17 17:55:05.877 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=90>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:55:05.879 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=90>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:55:05.880 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=90>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:55:05.882 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=90>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:55:05.884 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=90>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:55:05.885 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 17:56:02.727 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 17:57:02.728 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 17:57:47.507 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=82>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:57:47.509 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 17:57:47.509 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
TypeError: float() argument must be a string or a real number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'None' when rendering template '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'None' when rendering template '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.' but no default was specified
2025-04-17 17:57:47.512 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_power_cost")|float)|round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:57:47.514 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=94>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:57:47.516 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=94>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 17:57:47.517 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=94>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:57:47.519 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=94>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 17:57:47.520 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 17:58:02.729 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 17:59:02.731 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 17:59:18.684 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:59:18.686 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 17:59:18.687 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
TypeError: float() argument must be a string or a real number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'None' when rendering template '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'None' when rendering template '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.' but no default was specified
2025-04-17 17:59:18.690 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:59:18.691 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=98>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:59:18.692 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 17:59:50.622 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:59:50.624 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 17:59:50.624 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
TypeError: float() argument must be a string or a real number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'None' when rendering template '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'None' when rendering template '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.' but no default was specified
2025-04-17 17:59:50.627 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 17:59:50.630 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:59:50.633 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=102>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 17:59:54.888 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 17:59:54.890 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 17:59:54.892 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=106>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 18:00:06.170 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 18:00:06.171 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 18:00:06.171 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
TypeError: float() argument must be a string or a real number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'None' when rendering template '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'None' when rendering template '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.' but no default was specified
2025-04-17 18:00:06.173 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 18:00:06.174 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 18:00:06.176 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=110>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 18:00:47.486 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 18:00:47.488 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 18:00:47.488 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
TypeError: float() argument must be a string or a real number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'None' when rendering template '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'None' when rendering template '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.' but no default was specified
2025-04-17 18:00:47.490 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 18:00:47.492 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=114>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 18:00:47.493 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 18:01:02.735 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: None has no element 0 when rendering '{% set wh = state_attr("sensor.daily_power", "consumption").0 %} {% set cost_today = state_attr("sensor.daily_power_cost", "cost") %} Today used {{ wh }} Wh and cost €{{ cost_today | round(2) }}.'
2025-04-17 18:01:45.370 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 18:01:45.372 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} Wh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 18:01:45.375 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=118>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 18:03:34.003 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 18:03:34.007 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}.' but no default was specified
2025-04-17 18:03:34.010 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:04:21.971 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 18:04:21.973 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}.' but no default was specified
2025-04-17 18:04:21.975 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:04:59.686 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=34>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 18:04:59.690 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}.' but no default was specified
2025-04-17 18:04:59.691 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:06:00.548 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=38>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 18:06:00.549 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}.' but no default was specified
2025-04-17 18:06:00.552 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:06:38.636 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=42>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 18:06:38.638 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}.' but no default was specified
2025-04-17 18:06:38.640 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:07:31.535 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=46>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 18:07:31.539 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso de {{ as_timestamp(now()) | timestamp_custom("%B") }} : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso de {{ as_timestamp(now()) | timestamp_custom("%B") }} : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso de {{ as_timestamp(now()) | timestamp_custom("%B") }} : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 18:07:31.541 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:07:48.600 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=50>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 18:07:48.603 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso de {{ as_timestamp(now()) | timestamp_custom("%B") }} : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso de {{ as_timestamp(now()) | timestamp_custom("%B") }} : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso de {{ as_timestamp(now()) | timestamp_custom("%B") }} : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 18:07:48.607 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:07:52.438 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=54>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 18:07:52.439 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso de {{ as_timestamp(now()) | timestamp_custom("%B") }} : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso de {{ as_timestamp(now()) | timestamp_custom("%B") }} : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso de {{ as_timestamp(now()) | timestamp_custom("%B") }} : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 18:07:52.441 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:08:25.807 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=58>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 18:08:25.812 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 18:08:25.813 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=34>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:09:00.735 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=62>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 18:09:00.737 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 18:09:00.739 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=2>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:09:17.299 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_power_cost")|float)|round(2) }}) renders=66>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 588, in ensure_valid
    self._compiled_code = self._env.compile(self.template)
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 3432, in compile
    compiled = super().compile(source)
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 771, in compile
    self.handle_exception(source=source_hint)
    ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<unknown>", line 1, in template
jinja2.exceptions.TemplateSyntaxError: unexpected ')'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 638, in async_render
    compiled = self._compiled or self._ensure_compiled(limited, strict, log_fn)
                                 ~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 842, in _ensure_compiled
    self.ensure_valid()
    ~~~~~~~~~~~~~~~~~^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 590, in ensure_valid
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: TemplateSyntaxError: unexpected ')'
2025-04-17 18:09:17.301 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 18:09:17.303 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:09:28.084 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 18:09:28.086 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:27:58.057 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=126>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 18:27:58.060 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=126>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 18:27:58.062 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.) renders=74>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified
2025-04-17 18:27:58.063 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}' but no default was specified
2025-04-17 18:27:58.065 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = state_attr("sensor.tz3000_2putqrmw_ts011f_summation_delivered_2", "consumption").0 %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=6>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 18:27:58.066 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified
2025-04-17 18:27:58.068 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 18:27:58.069 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=94>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 18:27:58.070 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=98>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 18:27:58.072 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 18:27:58.073 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=98>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 18:27:58.074 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=122>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 18:27:58.076 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
TypeError: float() argument must be a string or a real number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 18:27:58.078 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=98>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 18:27:58.079 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = 0.1979 * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=142>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 18:28:00.546 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 18:28:00.547 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:39:44.323 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=150>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 18:39:44.326 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=150>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 18:39:44.329 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.) renders=100>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified
2025-04-17 18:39:44.330 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = state_attr("sensor.tz3000_2putqrmw_ts011f_summation_delivered_2", "consumption").0 %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=10>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 18:39:44.332 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified
2025-04-17 18:39:44.333 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 18:39:44.335 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=98>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 18:39:44.337 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=102>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 18:39:44.338 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 18:39:44.339 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=102>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 18:39:44.341 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=126>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 18:39:44.342 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
TypeError: float() argument must be a string or a real number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 18:39:44.343 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=102>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 18:39:44.345 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = 0.1979 * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=168>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 18:39:44.777 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 18:39:44.778 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:40:03.338 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 18:40:03.339 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:40:42.763 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 18:40:42.765 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:49:38.562 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=172>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 18:49:38.565 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=172>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 18:49:38.567 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.) renders=122>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified
2025-04-17 18:49:38.576 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = state_attr("sensor.tz3000_2putqrmw_ts011f_summation_delivered_2", "consumption").0 %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=14>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 18:49:38.578 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified
2025-04-17 18:49:38.580 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 18:49:38.581 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=102>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 18:49:38.582 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=106>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 18:49:38.584 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 18:49:38.585 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=106>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 18:49:38.586 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=130>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 18:49:38.588 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
TypeError: float() argument must be a string or a real number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 18:49:38.589 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=106>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 18:49:38.590 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = 0.1979 * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=190>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 18:51:19.579 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=34>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 18:51:19.581 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 18:55:43.249 ERROR (SyncWorker_4) [homeassistant] Error doing job: Task exception was never retrieved (None)
Traceback (most recent call last):
  File "/usr/local/lib/python3.13/site-packages/zigpy/device.py", line 381, in request
    return await req.result
           ^^^^^^^^^^^^^^^^
asyncio.exceptions.CancelledError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.13/site-packages/zha/zigbee/cluster_handlers/__init__.py", line 68, in wrap_zigpy_exceptions
    yield
  File "/usr/local/lib/python3.13/site-packages/zha/zigbee/cluster_handlers/__init__.py", line 86, in wrapper
    return await RETRYABLE_REQUEST_DECORATOR(func)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/zigpy/util.py", line 136, in retry
    return await func()
           ^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/zigpy/zcl/__init__.py", line 378, in request
    return await self._endpoint.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<9 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/zigpy/endpoint.py", line 270, in request
    return await self.device.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<11 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/zigpy/device.py", line 380, in request
    async with asyncio_timeout(timeout):
               ~~~~~~~~~~~~~~~^^^^^^^^^
  File "/usr/local/lib/python3.13/asyncio/timeouts.py", line 116, in __aexit__
    raise TimeoutError from exc_val
TimeoutError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/local/lib/python3.13/site-packages/zha/application/gateway.py", line 600, in async_device_initialized
    await self._async_device_joined(zha_device)
  File "/usr/local/lib/python3.13/site-packages/zha/application/gateway.py", line 615, in _async_device_joined
    await zha_device.async_configure()
  File "/usr/local/lib/python3.13/site-packages/zha/zigbee/device.py", line 774, in async_configure
    await self.identify_ch.trigger_effect(
    ...<2 lines>...
    )
  File "/usr/local/lib/python3.13/site-packages/zha/zigbee/cluster_handlers/__init__.py", line 85, in wrapper
    with wrap_zigpy_exceptions():
         ~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/contextlib.py", line 162, in __exit__
    self.gen.throw(value)
    ~~~~~~~~~~~~~~^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/zha/zigbee/cluster_handlers/__init__.py", line 70, in wrap_zigpy_exceptions
    raise ZHAException("Failed to send request: device did not respond") from exc
zha.exceptions.ZHAException: Failed to send request: device did not respond
2025-04-17 18:59:30.782 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=38>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 18:59:30.783 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=34>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:06:03.502 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=42>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:06:03.505 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=38>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:06:04.217 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=190>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 19:06:04.220 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=190>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 19:06:04.222 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.) renders=140>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified
2025-04-17 19:06:04.223 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = state_attr("sensor.tz3000_2putqrmw_ts011f_summation_delivered_2", "consumption").0 %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 19:06:04.224 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified
2025-04-17 19:06:04.226 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 19:06:04.228 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=106>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 19:06:04.229 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=110>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 19:06:04.232 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 19:06:04.233 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=110>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 19:06:04.234 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=134>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 19:06:04.236 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
TypeError: float() argument must be a string or a real number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 19:06:04.238 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=110>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 19:06:04.239 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = 0.1979 * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=208>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 19:06:52.932 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=46>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:06:52.933 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=42>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:09:21.060 INFO (MainThread) [zigpy_znp.zigbee.application] Permitting joins for 254 seconds
2025-04-17 19:09:21.060 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 21, 60487, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=0, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=0, source_route=None, extended_timeout=False, tsn=7, profile_id=0, cluster_id=<ZDOCmd.Mgmt_Permit_Joining_req: 0x0036>, data=Serialized[b'\x07\xfe\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:21.061 DEBUG (MainThread) [zigpy_znp.api] Sending request: ZDO.ExtRouteChk.Req(Dst=0x32B8, RtStatus=<RouteStatus.ACTIVE: 1>, Options=<RouteOptions.MTO_ROUTE|NO_ROUTE_CACHE: 3>)
2025-04-17 19:09:21.067 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.ExtRouteChk.Rsp(Status=<RoutingStatus.SUCCESS: 0>)
2025-04-17 19:09:21.067 DEBUG (MainThread) [zigpy_znp.api] Sending request: ZDO.MgmtPermitJoinReq.Req(AddrMode=<AddrMode.NWK: 2>, Dst=0x32B8, Duration=254, TCSignificance=0)
2025-04-17 19:09:21.082 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.MgmtPermitJoinReq.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:21.115 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.MgmtPermitJoinRsp.Callback(Src=0x32B8, Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:21.116 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.MsgCbIncoming.Callback(Src=0x32B8, IsBroadcast=<Bool.false: 0>, ClusterId=32822, SecurityUse=0, TSN=5, MacDst=0x0000, Data=b'\x00')
2025-04-17 19:09:21.116 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=0, DstPanId=0x0000, SrcEndpoint=0, ClusterId=54, TSN=7, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x07\xFE\x00')
2025-04-17 19:09:21.117 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 21, 117728, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=0, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=0, source_route=None, extended_timeout=False, tsn=5, profile_id=0, cluster_id=32822, data=Serialized[b'\x05\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:21.118 DEBUG (MainThread) [zigpy.zdo] [0x32b8:zdo] ZDO request ZDOCmd.Mgmt_Permit_Joining_rsp: [<Status.SUCCESS: 0>]
2025-04-17 19:09:21.118 DEBUG (MainThread) [zigpy.zdo] [0x32b8:zdo] No handler for ZDO request:ZDOCmd.Mgmt_Permit_Joining_rsp([<Status.SUCCESS: 0>])
2025-04-17 19:09:21.128 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:21.145 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.MgmtPermitJoinRsp.Callback(Src=0x32B8, Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:21.145 DEBUG (MainThread) [zigpy_znp.api] Command was not handled
2025-04-17 19:09:21.146 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.MsgCbIncoming.Callback(Src=0x32B8, IsBroadcast=<Bool.false: 0>, ClusterId=32822, SecurityUse=0, TSN=7, MacDst=0x0000, Data=b'\x00')
2025-04-17 19:09:21.146 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 21, 146186, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=0, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=0, source_route=None, extended_timeout=False, tsn=7, profile_id=0, cluster_id=32822, data=Serialized[b'\x07\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:21.146 DEBUG (MainThread) [zigpy.application] Sent 'mgmt_permit_joining_req' to 28:68:47:ff:fe:56:9f:f8: [<Status.SUCCESS: 0>]
2025-04-17 19:09:22.231 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=96, SecurityUse=<Bool.false: 0>, TimeStamp=15072956, TSN=0, Data=b'\x18\x0B\x0A\x08\x05\x21\x3E\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:09:22.232 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 22, 232488, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\x0b\n\x08\x05!>\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=96, rssi=None)
2025-04-17 19:09:22.232 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received ZCL frame: b'\x18\x0b\n\x08\x05!>\x00'
2025-04-17 19:09:22.232 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=11, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:22.233 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=62))])
2025-04-17 19:09:22.233 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received command 0x0A (TSN 11): Report_Attributes(attribute_reports=[Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=62))])
2025-04-17 19:09:22.233 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Attribute report received: rms_current=62
2025-04-17 19:09:22.233 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[62]
2025-04-17 19:09:22.233 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=62, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:23.339 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:55:8b:3b:3e:9b-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:09:23.339 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:55:8b:3b:3e:9b-1-2820: polling for updated state
2025-04-17 19:09:23.339 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:55:8b:3b:3e:9b-1-2820: polling current state
2025-04-17 19:09:23.339 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: async_update
2025-04-17 19:09:23.339 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:09:23.340 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=212, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:23.340 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:09:23.340 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 23, 340584, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB6F6), dst_ep=1, source_route=None, extended_timeout=False, tsn=212, profile_id=260, cluster_id=2820, data=Serialized[b'\x00\xd4\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:23.341 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xB6F6), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=212, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xD4\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:09:23.354 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:23.359 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=212)
2025-04-17 19:09:23.387 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0xB6F6, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=45, SecurityUse=<Bool.false: 0>, TimeStamp=15145095, TSN=0, Data=b'\x18\xD4\x01\x0B\x05\x00\x29\x00\x00\x08\x05\x00\x21\x00\x00\x05\x05\x00\x21\xEC\x00', MacSrcAddr=0xB6F6, MsgResultRadius=29)
2025-04-17 19:09:23.388 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 23, 388006, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB6F6), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\xd4\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=45, rssi=None)
2025-04-17 19:09:23.388 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Received ZCL frame: b'\x18\xd4\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'
2025-04-17 19:09:23.388 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=212, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:23.388 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=0)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=0)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=236))])
2025-04-17 19:09:23.389 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[0]
2025-04-17 19:09:23.389 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=0, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:23.389 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[0]
2025-04-17 19:09:23.389 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=0, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:23.389 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[236]
2025-04-17 19:09:23.389 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=236, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:23.389 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:55:8b:3b:3e:9b-1-2820-rms_voltage', device_ieee=a4:c1:38:55:8b:3b:3e:9b, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:09:23.389 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lampe_rouge_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:55:8b:3b:3e:9b-1-2820-rms_voltage', device_ieee=a4:c1:38:55:8b:3b:3e:9b, endpoint_id=1, group_id=None)
2025-04-17 19:09:23.389 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: Got attributes: {'active_power': 0, 'rms_current': 0, 'rms_voltage': 236}
2025-04-17 19:09:27.751 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:e7:5d:17:99:21-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:09:27.751 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:e7:5d:17:99:21-1-1794-summation_delivered: polling for updated state
2025-04-17 19:09:27.751 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:e7:5d:17:99:21-1-1794-summation_delivered: polling current state
2025-04-17 19:09:27.751 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: async_update
2025-04-17 19:09:27.751 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:09:27.751 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=205, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:27.751 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:09:27.752 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 27, 752105, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), dst_ep=1, source_route=None, extended_timeout=False, tsn=205, profile_id=260, cluster_id=1794, data=Serialized[b'\x00\xcd\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:27.752 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xB12F), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=205, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xCD\x00\x00\x00\x00\x02')
2025-04-17 19:09:27.764 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:27.768 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=205)
2025-04-17 19:09:27.806 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0xB12F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=51, SecurityUse=<Bool.false: 0>, TimeStamp=15421303, TSN=0, Data=b'\x18\xCD\x01\x00\x00\x00\x25\x04\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:09:27.807 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 27, 807356, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18\xcd\x01\x00\x00\x00%\x04\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=51, rssi=None)
2025-04-17 19:09:27.807 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Received ZCL frame: b'\x18\xcd\x01\x00\x00\x00%\x04\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:09:27.807 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=205, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:27.808 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=4)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:09:27.808 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[4]
2025-04-17 19:09:27.808 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=4, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:27.808 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:09:27.808 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:27.808 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: Got attributes: {'current_summ_delivered': 4, 'status': <bitmap8: 0>}
2025-04-17 19:09:28.980 DEBUG (MainThread) [zigpy.application] Feeding watchdog
2025-04-17 19:09:28.980 DEBUG (MainThread) [zigpy_znp.api] Sending request: SYS.Ping.Req()
2025-04-17 19:09:28.985 DEBUG (MainThread) [zigpy_znp.api] Received command: SYS.Ping.Rsp(Capabilities=<MTCapabilities.SYS|AF|ZDO|UTIL|GP|APP_CNF: 1625>)
2025-04-17 19:09:30.557 DEBUG (MainThread) [zha.decorators] [<Task pending name='device-availability-checker_DeviceAvailabilityChecker' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.helpers::DeviceAvailabilityChecker.check_device_availability]
2025-04-17 19:09:30.557 DEBUG (MainThread) [zha.application.helpers] Device availability checker interval starting
2025-04-17 19:09:30.557 DEBUG (MainThread) [zha.application.helpers] Checking device availability
2025-04-17 19:09:30.557 DEBUG (MainThread) [zha.zigbee.device] [0x6CCC](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:09:30.557 DEBUG (MainThread) [zha.zigbee.device] [0x6CCC](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:09:30.557 DEBUG (MainThread) [zha.zigbee.device] [0x7D24](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:09:30.557 DEBUG (MainThread) [zha.zigbee.device] [0x7D24](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:09:30.557 DEBUG (MainThread) [zha.zigbee.device] [0x689F](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:09:30.557 DEBUG (MainThread) [zha.zigbee.device] [0x689F](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:09:30.557 DEBUG (MainThread) [zha.zigbee.device] [0x7D1E](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:09:30.557 DEBUG (MainThread) [zha.zigbee.device] [0x7D1E](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:09:30.557 DEBUG (MainThread) [zha.zigbee.device] [0xB6F6](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:09:30.557 DEBUG (MainThread) [zha.zigbee.device] [0xB6F6](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:09:30.557 DEBUG (MainThread) [zha.zigbee.device] [0x579D](ZBMINIL2): Device seen - marking the device available and resetting counter
2025-04-17 19:09:30.557 DEBUG (MainThread) [zha.zigbee.device] [0x579D](ZBMINIL2): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:09:30.557 DEBUG (MainThread) [zha.zigbee.device] [0x7012](SNZB-02P): Device seen - marking the device available and resetting counter
2025-04-17 19:09:30.558 DEBUG (MainThread) [zha.zigbee.device] [0x7012](SNZB-02P): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:09:30.558 DEBUG (MainThread) [zha.zigbee.device] [0xB12F](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:09:30.558 DEBUG (MainThread) [zha.zigbee.device] [0xB12F](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:09:30.558 DEBUG (MainThread) [zha.zigbee.device] [0x45AF](ZBMINIL2): Device seen - marking the device available and resetting counter
2025-04-17 19:09:30.558 DEBUG (MainThread) [zha.zigbee.device] [0x45AF](ZBMINIL2): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:09:30.558 DEBUG (MainThread) [zha.zigbee.device] [0xEAC6](SNZB-02P): last_seen is 83093.76100111008 seconds ago and ping attempts have been exhausted, marking the device unavailable
2025-04-17 19:09:30.558 DEBUG (MainThread) [zha.zigbee.device] [0xEAC6](SNZB-02P): Update device availability -  device available: False - new availability: False - changed: False
2025-04-17 19:09:30.558 DEBUG (MainThread) [zha.zigbee.device] [0x32B8](TRADFRI Driver 30W): Device seen - marking the device available and resetting counter
2025-04-17 19:09:30.558 DEBUG (MainThread) [zha.zigbee.device] [0x32B8](TRADFRI Driver 30W): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:09:30.558 DEBUG (MainThread) [zha.zigbee.device] [0x324B](RODRET Dimmer): Device seen - marking the device available and resetting counter
2025-04-17 19:09:30.558 DEBUG (MainThread) [zha.zigbee.device] [0x324B](RODRET Dimmer): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:09:30.558 DEBUG (MainThread) [zha.application.helpers] Device availability checker interval finished
2025-04-17 19:09:32.155 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:03:75:85:ed:14-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:09:32.155 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-1794-summation_delivered: polling for updated state
2025-04-17 19:09:32.156 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-1794-summation_delivered: polling current state
2025-04-17 19:09:32.156 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: async_update
2025-04-17 19:09:32.156 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:09:32.156 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=187, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:32.156 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:09:32.156 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 32, 156833, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), dst_ep=1, source_route=None, extended_timeout=False, tsn=187, profile_id=260, cluster_id=1794, data=Serialized[b'\x00\xbb\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:32.157 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x6CCC), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=187, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xBB\x00\x00\x00\x00\x02')
2025-04-17 19:09:32.168 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:32.173 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=187)
2025-04-17 19:09:32.195 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=99, SecurityUse=<Bool.false: 0>, TimeStamp=15695572, TSN=0, Data=b'\x18\xBB\x01\x00\x00\x00\x25\x1D\x04\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:09:32.195 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 32, 195203, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18\xbb\x01\x00\x00\x00%\x1d\x04\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=99, rssi=None)
2025-04-17 19:09:32.195 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Received ZCL frame: b'\x18\xbb\x01\x00\x00\x00%\x1d\x04\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:09:32.195 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=187, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:32.195 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=1053)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:09:32.196 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[1053]
2025-04-17 19:09:32.196 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=1053, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:32.196 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:09:32.196 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:32.196 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: Got attributes: {'current_summ_delivered': 1053, 'status': <bitmap8: 0>}
2025-04-17 19:09:32.601 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.TCDevInd.Callback(SrcNwk=0xA4A7, SrcIEEE=6c:5c:b1:ff:fe:2c:3b:88, ParentNwk=0x32B8)
2025-04-17 19:09:32.601 INFO (MainThread) [zigpy_znp.zigbee.application] TC device join: ZDO.TCDevInd.Callback(SrcNwk=0xA4A7, SrcIEEE=6c:5c:b1:ff:fe:2c:3b:88, ParentNwk=0x32B8)
2025-04-17 19:09:32.601 INFO (MainThread) [zigpy.application] Device 0xa4a7 (6c:5c:b1:ff:fe:2c:3b:88) joined the network
2025-04-17 19:09:32.601 DEBUG (MainThread) [zigpy.application] Device 6c:5c:b1:ff:fe:2c:3b:88 changed id (0x324b => 0xa4a7)
2025-04-17 19:09:32.601 DEBUG (MainThread) [zha] Emitting event device_joined with data DeviceJoinedEvent(device_info=DeviceJoinedDeviceInfo(ieee=6c:5c:b1:ff:fe:2c:3b:88, nwk=0xA4A7, pairing_status=<DevicePairingStatus.PAIRED: 1>), event_type='zha_gateway_message', event='device_joined') (1 listeners)
2025-04-17 19:09:32.601 DEBUG (MainThread) [zha] (ZHAGatewayProxy) handling event protocol for event: DeviceJoinedEvent(device_info=DeviceJoinedDeviceInfo(ieee=6c:5c:b1:ff:fe:2c:3b:88, nwk=0xA4A7, pairing_status=<DevicePairingStatus.PAIRED: 1>), event_type='zha_gateway_message', event='device_joined')
2025-04-17 19:09:32.602 DEBUG (MainThread) [zigpy.device] [0xa4a7] Skipping initialization, device is fully initialized
2025-04-17 19:09:32.602 DEBUG (MainThread) [zigpy.application] Device is initialized <IkeaRodretRemote2Btn model='RODRET Dimmer' manuf='IKEA of Sweden' nwk=0xA4A7 ieee=6c:5c:b1:ff:fe:2c:3b:88 is_initialized=True>
2025-04-17 19:09:32.602 DEBUG (MainThread) [zha] Emitting event raw_device_initialized with data RawDeviceInitializedEvent(device_info=RawDeviceInitializedDeviceInfo(ieee=6c:5c:b1:ff:fe:2c:3b:88, nwk=0xA4A7, pairing_status=<DevicePairingStatus.INTERVIEW_COMPLETE: 2>, model='RODRET Dimmer', manufacturer='IKEA of Sweden', signature={'manufacturer': 'IKEA of Sweden', 'model': 'RODRET Dimmer', 'node_desc': {'logical_type': <LogicalType.EndDevice: 2>, 'complex_descriptor_available': 0, 'user_descriptor_available': 0, 'reserved': 0, 'aps_flags': 0, 'frequency_band': <FrequencyBand.Freq2400MHz: 8>, 'mac_capability_flags': <MACCapabilityFlags.AllocateAddress: 128>, 'manufacturer_code': 4476, 'maximum_buffer_size': 82, 'maximum_incoming_transfer_size': 82, 'server_mask': 11264, 'maximum_outgoing_transfer_size': 82, 'descriptor_capability_field': <DescriptorCapability.NONE: 0>}, 'endpoints': {1: {'profile_id': 260, 'device_type': <DeviceType.NON_COLOR_CONTROLLER: 2080>, 'input_clusters': [0, 1, 3, 32, 4096, 64636], 'output_clusters': [3, 4, 6, 8, 25, 4096]}}}), event_type='zha_gateway_message', event='raw_device_initialized') (1 listeners)
2025-04-17 19:09:32.602 DEBUG (MainThread) [zha] (ZHAGatewayProxy) handling event protocol for event: RawDeviceInitializedEvent(device_info=RawDeviceInitializedDeviceInfo(ieee=6c:5c:b1:ff:fe:2c:3b:88, nwk=0xA4A7, pairing_status=<DevicePairingStatus.INTERVIEW_COMPLETE: 2>, model='RODRET Dimmer', manufacturer='IKEA of Sweden', signature={'manufacturer': 'IKEA of Sweden', 'model': 'RODRET Dimmer', 'node_desc': {'logical_type': <LogicalType.EndDevice: 2>, 'complex_descriptor_available': 0, 'user_descriptor_available': 0, 'reserved': 0, 'aps_flags': 0, 'frequency_band': <FrequencyBand.Freq2400MHz: 8>, 'mac_capability_flags': <MACCapabilityFlags.AllocateAddress: 128>, 'manufacturer_code': 4476, 'maximum_buffer_size': 82, 'maximum_incoming_transfer_size': 82, 'server_mask': 11264, 'maximum_outgoing_transfer_size': 82, 'descriptor_capability_field': <DescriptorCapability.NONE: 0>}, 'endpoints': {1: {'profile_id': 260, 'device_type': <DeviceType.NON_COLOR_CONTROLLER: 2080>, 'input_clusters': [0, 1, 3, 32, 4096, 64636], 'output_clusters': [3, 4, 6, 8, 25, 4096]}}}), event_type='zha_gateway_message', event='raw_device_initialized')
2025-04-17 19:09:32.602 DEBUG (MainThread) [zha.application.gateway] device - 0xA4A7:6c:5c:b1:ff:fe:2c:3b:88 entering async_device_initialized - is_new_join: True
2025-04-17 19:09:32.602 DEBUG (MainThread) [zha.application.gateway] device - 0xA4A7:6c:5c:b1:ff:fe:2c:3b:88 has joined the ZHA zigbee network
2025-04-17 19:09:32.602 DEBUG (MainThread) [zha.zigbee.device] [0xA4A7](RODRET Dimmer): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:09:32.602 DEBUG (MainThread) [zha.zigbee.device] [0xA4A7](RODRET Dimmer): started configuration
2025-04-17 19:09:32.602 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:ZDO](RODRET Dimmer): 'async_configure' stage succeeded
2025-04-17 19:09:32.602 DEBUG (MainThread) [zha.zigbee.device] [0xA4A7](RODRET Dimmer): applying quirks custom device configuration
2025-04-17 19:09:32.602 DEBUG (MainThread) [zha.application.discovery] Discovering entities for device: 6c:5c:b1:ff:fe:2c:3b:88-IKEA of Sweden RODRET Dimmer
2025-04-17 19:09:32.602 DEBUG (MainThread) [zha.application.discovery] Discovering entities for endpoint: 6c:5c:b1:ff:fe:2c:3b:88-1
2025-04-17 19:09:32.603 DEBUG (MainThread) [zha.application.discovery] 'update' platform -> 'FirmwareUpdateEntity' using ['ota']
2025-04-17 19:09:32.603 DEBUG (MainThread) [zha.application.discovery] Attempting to discover quirks v2 entities for device: 6c:5c:b1:ff:fe:2c:3b:88-IKEA of Sweden RODRET Dimmer
2025-04-17 19:09:32.603 DEBUG (MainThread) [zha.application.discovery] Device: 6c:5c:b1:ff:fe:2c:3b:88-IKEA of Sweden RODRET Dimmer is not a quirks v2 device - skipping discover_quirks_v2_entities
2025-04-17 19:09:32.603 DEBUG (MainThread) [zigpy_znp.api] Sending request: ZDO.ExtRouteDisc.Req(Dst=0xA4A7, Options=<RouteDiscoveryOptions.UNICAST: 0>, Radius=30)
2025-04-17 19:09:32.604 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: Performing cluster binding
2025-04-17 19:09:32.604 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x0f request
2025-04-17 19:09:32.605 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 32, 605041, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=0, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), dst_ep=0, source_route=None, extended_timeout=True, tsn=15, profile_id=0, cluster_id=<ZDOCmd.Bind_req: 0x0021>, data=Serialized[b'\x0f\x88;,\xfe\xff\xb1\\l\x01\x01\x00\x03$\xf0\x8a/\x00K\x12\x00\x01'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:32.605 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0003]: Configuring cluster attribute reporting
2025-04-17 19:09:32.605 DEBUG (MainThread) [zha] Emitting event zha_channel_configure_reporting with data ClusterConfigureReportingEvent(cluster_name='Identify', cluster_id=3, attributes={}, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0003', event_type='zha_channel_message', event='zha_channel_configure_reporting') (0 listeners)
2025-04-17 19:09:32.605 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0003]: finished cluster handler configuration
2025-04-17 19:09:32.605 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0000]: Configuring cluster attribute reporting
2025-04-17 19:09:32.605 DEBUG (MainThread) [zha] Emitting event zha_channel_configure_reporting with data ClusterConfigureReportingEvent(cluster_name='Basic', cluster_id=0, attributes={}, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0000', event_type='zha_channel_message', event='zha_channel_configure_reporting') (0 listeners)
2025-04-17 19:09:32.605 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0000]: finished cluster handler configuration
2025-04-17 19:09:32.605 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: Performing cluster binding
2025-04-17 19:09:32.605 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x10 request
2025-04-17 19:09:32.605 DEBUG (MainThread) [zigpy.device] Device concurrency (1) reached, delaying device request (0 enqueued)
2025-04-17 19:09:32.605 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x1000] Sending request header: ZCLHeader(frame_control=FrameControl<0x01>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=True, *is_general=False), tsn=17, command_id=65, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:32.606 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x1000] Sending request: get_group_identifiers(start_index=0)
2025-04-17 19:09:32.606 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x11 request
2025-04-17 19:09:32.606 DEBUG (MainThread) [zigpy.device] Device concurrency (1) reached, delaying device request (1 enqueued)
2025-04-17 19:09:32.606 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: finished cluster handler configuration
2025-04-17 19:09:32.606 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0008]: Performing cluster binding
2025-04-17 19:09:32.606 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x12 request
2025-04-17 19:09:32.606 DEBUG (MainThread) [zigpy.device] Device concurrency (1) reached, delaying device request (2 enqueued)
2025-04-17 19:09:32.606 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0006]: Performing cluster binding
2025-04-17 19:09:32.606 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x13 request
2025-04-17 19:09:32.606 DEBUG (MainThread) [zigpy.device] Device concurrency (1) reached, delaying device request (3 enqueued)
2025-04-17 19:09:32.606 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: finished cluster handler configuration
2025-04-17 19:09:32.613 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.ExtRouteDisc.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:32.614 DEBUG (MainThread) [zigpy_znp.api] Sending request: ZDO.ExtRouteChk.Req(Dst=0xA4A7, RtStatus=<RouteStatus.ACTIVE: 1>, Options=<RouteOptions.MTO_ROUTE|NO_ROUTE_CACHE: 3>)
2025-04-17 19:09:32.618 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.ExtRouteChk.Rsp(Status=<RoutingStatus.FAIL: 1>)
2025-04-17 19:09:32.800 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.EndDeviceAnnceInd.Callback(Src=0xA4A7, NWK=0xA4A7, IEEE=6c:5c:b1:ff:fe:2c:3b:88, Capabilities=<MACCapabilities.AllocateShortAddrDuringAssocNeeded: 128>)
2025-04-17 19:09:32.801 DEBUG (MainThread) [zigpy_znp.api] Command was not handled
2025-04-17 19:09:32.801 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.MsgCbIncoming.Callback(Src=0xA4A7, IsBroadcast=<Bool.true: 1>, ClusterId=19, SecurityUse=0, TSN=129, MacDst=0xFFFF, Data=b'\xA7\xA4\x88\x3B\x2C\xFE\xFF\xB1\x5C\x6C\x80')
2025-04-17 19:09:32.801 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 32, 801273, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=0, dst=AddrModeAddress(addr_mode=<AddrMode.Broadcast: 15>, address=<BroadcastAddress.ALL_ROUTERS_AND_COORDINATOR: 65532>), dst_ep=0, source_route=None, extended_timeout=False, tsn=129, profile_id=0, cluster_id=19, data=Serialized[b'\x81\xa7\xa4\x88;,\xfe\xff\xb1\\l\x80'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:32.801 INFO (MainThread) [zigpy.application] Device 0xa4a7 (6c:5c:b1:ff:fe:2c:3b:88) joined the network
2025-04-17 19:09:32.801 DEBUG (MainThread) [zigpy.zdo] [0xa4a7:zdo] ZDO request ZDOCmd.Device_annce: [0xA4A7, 6c:5c:b1:ff:fe:2c:3b:88, 128]
2025-04-17 19:09:32.801 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: Failed to bind 'poll_control' cluster: Device has re-joined the network
Traceback (most recent call last):
  File "/usr/local/lib/python3.13/site-packages/zha/zigbee/cluster_handlers/__init__.py", line 288, in bind
    res = await self.cluster.bind()
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/zigpy/zcl/__init__.py", line 686, in bind
    return await self._endpoint.device.zdo.bind(cluster=self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/zigpy/zdo/__init__.py", line 247, in bind
    return await self.Bind_req(
           ^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/zigpy/zdo/__init__.py", line 67, in request
    return await self._device.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<11 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/zigpy/device.py", line 371, in request
    async with self._limit_concurrency(priority=priority):
               ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/contextlib.py", line 214, in __aenter__
    return await anext(self.gen)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/zigpy/device.py", line 120, in _limit_concurrency
    async with self._concurrent_requests_semaphore(priority=priority):
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/zigpy/datastructures.py", line 23, in __aenter__
    await self.on_enter()
  File "/usr/local/lib/python3.13/site-packages/zigpy/datastructures.py", line 132, in acquire
    await fut
zigpy.exceptions.DeliveryError: Device has re-joined the network
2025-04-17 19:09:32.805 DEBUG (MainThread) [zha] Emitting event zha_channel_bind with data ClusterBindEvent(cluster_name='Poll Control', cluster_id=32, success=False, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0020', event_type='zha_channel_message', event='zha_channel_bind') (0 listeners)
2025-04-17 19:09:32.805 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: Configuring cluster attribute reporting
2025-04-17 19:09:32.805 DEBUG (MainThread) [zha] Emitting event zha_channel_configure_reporting with data ClusterConfigureReportingEvent(cluster_name='Poll Control', cluster_id=32, attributes={}, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0020', event_type='zha_channel_message', event='zha_channel_configure_reporting') (0 listeners)
2025-04-17 19:09:32.805 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: Performing cluster handler specific configuration
2025-04-17 19:09:32.805 DEBUG (MainThread) [zigpy.util] Tries remaining: 3
2025-04-17 19:09:32.805 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0020] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=20, command_id=<GeneralCommand.Write_Attributes: 2>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:32.805 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0020] Sending request: Write_Attributes(attributes=[Attribute(attrid=0x0000, value=TypeValue(type=uint32_t, value=13200))])
2025-04-17 19:09:32.806 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x14 request
2025-04-17 19:09:32.806 DEBUG (MainThread) [zigpy.device] Device concurrency (1) reached, delaying device request (3 enqueued)
2025-04-17 19:09:32.806 WARNING (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x1000]: Couldn't get list of groups: Device has re-joined the network
2025-04-17 19:09:32.806 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0008]: Failed to bind 'level' cluster: Device has re-joined the network
Traceback (most recent call last):
  File "/usr/local/lib/python3.13/site-packages/zha/zigbee/cluster_handlers/__init__.py", line 288, in bind
    res = await self.cluster.bind()
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/zigpy/zcl/__init__.py", line 686, in bind
    return await self._endpoint.device.zdo.bind(cluster=self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/zigpy/zdo/__init__.py", line 247, in bind
    return await self.Bind_req(
           ^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/zigpy/zdo/__init__.py", line 67, in request
    return await self._device.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<11 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/zigpy/device.py", line 371, in request
    async with self._limit_concurrency(priority=priority):
               ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/contextlib.py", line 214, in __aenter__
    return await anext(self.gen)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/zigpy/device.py", line 120, in _limit_concurrency
    async with self._concurrent_requests_semaphore(priority=priority):
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/zigpy/datastructures.py", line 23, in __aenter__
    await self.on_enter()
  File "/usr/local/lib/python3.13/site-packages/zigpy/datastructures.py", line 132, in acquire
    await fut
zigpy.exceptions.DeliveryError: Device has re-joined the network
2025-04-17 19:09:32.807 DEBUG (MainThread) [zha] Emitting event zha_channel_bind with data ClusterBindEvent(cluster_name='Level control', cluster_id=8, success=False, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0008', event_type='zha_channel_message', event='zha_channel_bind') (0 listeners)
2025-04-17 19:09:32.807 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0008]: finished cluster handler configuration
2025-04-17 19:09:32.807 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0006]: Failed to bind 'on_off' cluster: Device has re-joined the network
Traceback (most recent call last):
  File "/usr/local/lib/python3.13/site-packages/zha/zigbee/cluster_handlers/__init__.py", line 288, in bind
    res = await self.cluster.bind()
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/zigpy/zcl/__init__.py", line 686, in bind
    return await self._endpoint.device.zdo.bind(cluster=self)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/zigpy/zdo/__init__.py", line 247, in bind
    return await self.Bind_req(
           ^^^^^^^^^^^^^^^^^^^^
    ...<4 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/zigpy/zdo/__init__.py", line 67, in request
    return await self._device.request(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<11 lines>...
    )
    ^
  File "/usr/local/lib/python3.13/site-packages/zigpy/device.py", line 371, in request
    async with self._limit_concurrency(priority=priority):
               ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/contextlib.py", line 214, in __aenter__
    return await anext(self.gen)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/zigpy/device.py", line 120, in _limit_concurrency
    async with self._concurrent_requests_semaphore(priority=priority):
               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/zigpy/datastructures.py", line 23, in __aenter__
    await self.on_enter()
  File "/usr/local/lib/python3.13/site-packages/zigpy/datastructures.py", line 132, in acquire
    await fut
zigpy.exceptions.DeliveryError: Device has re-joined the network
2025-04-17 19:09:32.808 DEBUG (MainThread) [zha] Emitting event zha_channel_bind with data ClusterBindEvent(cluster_name='On/Off', cluster_id=6, success=False, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0006', event_type='zha_channel_message', event='zha_channel_bind') (0 listeners)
2025-04-17 19:09:32.808 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0006]: finished cluster handler configuration
2025-04-17 19:09:33.915 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xA4A7), DstEndpoint=0, DstPanId=0x0000, SrcEndpoint=0, ClusterId=33, TSN=15, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x0F\x88\x3B\x2C\xFE\xFF\xB1\x5C\x6C\x01\x01\x00\x03\x24\xF0\x8A\x2F\x00\x4B\x12\x00\x01')
2025-04-17 19:09:33.929 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:34.779 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:09:34.825 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.BindRsp.Callback(Src=0xA4A7, Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:34.826 DEBUG (MainThread) [zigpy_znp.api] Command was not handled
2025-04-17 19:09:34.826 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.MsgCbIncoming.Callback(Src=0xA4A7, IsBroadcast=<Bool.false: 0>, ClusterId=32801, SecurityUse=0, TSN=15, MacDst=0x0000, Data=b'\x00')
2025-04-17 19:09:34.826 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 34, 826438, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=0, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=0, source_route=None, extended_timeout=False, tsn=15, profile_id=0, cluster_id=32801, data=Serialized[b'\x0f\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:34.826 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: bound 'power' cluster: Status.SUCCESS
2025-04-17 19:09:34.826 DEBUG (MainThread) [zha] Emitting event zha_channel_bind with data ClusterBindEvent(cluster_name='Power Configuration', cluster_id=1, success=True, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0001', event_type='zha_channel_message', event='zha_channel_bind') (0 listeners)
2025-04-17 19:09:34.826 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: Configuring cluster attribute reporting
2025-04-17 19:09:34.827 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0001] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=21, command_id=<GeneralCommand.Configure_Reporting: 6>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:34.827 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0001] Sending request: Configure_Reporting(config_records=[AttributeReportingConfig(direction=0, attrid=0x0020, datatype=<DataTypeId.uint8: 32>, min_interval=3600, max_interval=10800, reportable_change=1), AttributeReportingConfig(direction=0, attrid=0x0021, datatype=<DataTypeId.uint8: 32>, min_interval=3600, max_interval=10800, reportable_change=1)])
2025-04-17 19:09:34.827 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x15 request
2025-04-17 19:09:34.827 DEBUG (MainThread) [zigpy.device] Device concurrency (1) reached, delaying device request (1 enqueued)
2025-04-17 19:09:34.827 DEBUG (MainThread) [zigpy.device] Previously delayed device request is now running, delayed by 2.02s
2025-04-17 19:09:34.828 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 34, 828048, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), dst_ep=1, source_route=None, extended_timeout=True, tsn=20, profile_id=260, cluster_id=32, data=Serialized[b'\x00\x14\x02\x00\x00#\x903\x00\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:34.828 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xA4A7), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=32, TSN=20, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x14\x02\x00\x00\x23\x90\x33\x00\x00')
2025-04-17 19:09:34.840 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:34.844 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=20)
2025-04-17 19:09:35.543 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:09:35.799 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:09:35.805 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:09:35.865 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=32, SrcAddr=0xA4A7, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=195512, TSN=0, Data=b'\x18\x14\x04\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:09:35.865 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 35, 865432, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=32, data=Serialized[b'\x18\x14\x04\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:09:35.865 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0020] Received ZCL frame: b'\x18\x14\x04\x00'
2025-04-17 19:09:35.865 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0020] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=20, command_id=4, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:35.866 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0020] Decoded ZCL frame: PollControl:Write_Attributes_rsp(status_records=[WriteAttributesStatusRecord(status=<Status.SUCCESS: 0>)])
2025-04-17 19:09:35.866 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: cluster_handler[poll_control] attribute_updated - cluster[Poll Control] attr[checkin_interval] value[13200]
2025-04-17 19:09:35.866 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='checkin_interval', attribute_value=13200, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0020', cluster_id=32, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (0 listeners)
2025-04-17 19:09:35.866 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: finished cluster handler configuration
2025-04-17 19:09:35.866 DEBUG (MainThread) [zigpy.device] Previously delayed device request is now running, delayed by 1.04s
2025-04-17 19:09:35.866 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 35, 866718, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), dst_ep=1, source_route=None, extended_timeout=True, tsn=21, profile_id=260, cluster_id=1, data=Serialized[b'\x00\x15\x06\x00 \x00 \x10\x0e0*\x01\x00!\x00 \x10\x0e0*\x01'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:35.867 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xA4A7), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1, TSN=21, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x15\x06\x00\x20\x00\x20\x10\x0E\x30\x2A\x01\x00\x21\x00\x20\x10\x0E\x30\x2A\x01')
2025-04-17 19:09:35.879 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:35.888 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=21)
2025-04-17 19:09:36.799 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:09:36.806 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:09:36.875 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1, SrcAddr=0xA4A7, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=258635, TSN=0, Data=b'\x18\x15\x07\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:09:36.875 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 36, 875634, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1, data=Serialized[b'\x18\x15\x07\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:09:36.875 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0001] Received ZCL frame: b'\x18\x15\x07\x00'
2025-04-17 19:09:36.876 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0001] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=21, command_id=7, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:36.876 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0001] Decoded ZCL frame: PowerConfig1AAACluster:Configure_Reporting_rsp(status_records=[ConfigureReportingResponseRecord(status=<Status.SUCCESS: 0>)])
2025-04-17 19:09:36.876 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: Successfully configured reporting for '{'battery_voltage': (3600, 10800, 1), 'battery_percentage_remaining': (3600, 10800, 1)}' on 'power' cluster: [ConfigureReportingResponseRecord(status=<Status.SUCCESS: 0>)]
2025-04-17 19:09:36.876 DEBUG (MainThread) [zha] Emitting event zha_channel_configure_reporting with data ClusterConfigureReportingEvent(cluster_name='Power Configuration', cluster_id=1, attributes={'battery_voltage': {'min': 3600, 'max': 10800, 'id': 'battery_voltage', 'name': 'battery_voltage', 'change': 1, 'status': 'SUCCESS'}, 'battery_percentage_remaining': {'min': 3600, 'max': 10800, 'id': 'battery_percentage_remaining', 'name': 'battery_percentage_remaining', 'change': 1, 'status': 'SUCCESS'}}, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0001', event_type='zha_channel_message', event='zha_channel_configure_reporting') (0 listeners)
2025-04-17 19:09:36.876 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: finished cluster handler configuration
2025-04-17 19:09:36.876 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: 'async_configure' stage succeeded
2025-04-17 19:09:36.876 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0003]: 'async_configure' stage succeeded
2025-04-17 19:09:36.877 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0000]: 'async_configure' stage succeeded
2025-04-17 19:09:36.877 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: 'async_configure' stage succeeded
2025-04-17 19:09:36.877 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x1000]: 'async_configure' stage succeeded
2025-04-17 19:09:36.877 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: 'async_configure' stage succeeded
2025-04-17 19:09:36.877 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0008]: 'async_configure' stage succeeded
2025-04-17 19:09:36.877 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0006]: 'async_configure' stage succeeded
2025-04-17 19:09:36.877 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: 'async_configure' stage succeeded
2025-04-17 19:09:36.877 DEBUG (MainThread) [zha] Emitting event zha_channel_cfg_done with data ClusterHandlerConfigurationComplete(device_ieee=6c:5c:b1:ff:fe:2c:3b:88, unique_id=6c:5c:b1:ff:fe:2c:3b:88, event_type='zha_channel_message', event='zha_channel_cfg_done') (0 listeners)
2025-04-17 19:09:36.877 DEBUG (MainThread) [zha.zigbee.device] [0xA4A7](RODRET Dimmer): completed configuration
2025-04-17 19:09:36.877 DEBUG (MainThread) [zigpy.util] Tries remaining: 3
2025-04-17 19:09:36.877 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Sending request header: ZCLHeader(frame_control=FrameControl<0x01>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=True, *is_general=False), tsn=22, command_id=64, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:36.877 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Sending request: trigger_effect(effect_id=<EffectIdentifier.Okay: 2>, effect_variant=<EffectVariant.Default: 0>)
2025-04-17 19:09:36.877 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x16 request
2025-04-17 19:09:36.877 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 36, 877884, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), dst_ep=1, source_route=None, extended_timeout=True, tsn=22, profile_id=260, cluster_id=3, data=Serialized[b'\x01\x16@\x02\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:36.878 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xA4A7), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=3, TSN=22, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x01\x16\x40\x02\x00')
2025-04-17 19:09:36.889 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:36.893 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=22)
2025-04-17 19:09:37.239 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0x6CCC, Relays=[])
2025-04-17 19:09:37.240 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=96, SecurityUse=<Bool.false: 0>, TimeStamp=282129, TSN=0, Data=b'\x18\x0C\x0A\x05\x05\x21\xEB\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:09:37.240 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 37, 240216, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\x0c\n\x05\x05!\xeb\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=96, rssi=None)
2025-04-17 19:09:37.240 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received ZCL frame: b'\x18\x0c\n\x05\x05!\xeb\x00'
2025-04-17 19:09:37.240 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=12, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:37.240 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=235))])
2025-04-17 19:09:37.241 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received command 0x0A (TSN 12): Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=235))])
2025-04-17 19:09:37.241 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Attribute report received: rms_voltage=235
2025-04-17 19:09:37.241 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[235]
2025-04-17 19:09:37.241 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=235, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:37.241 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:03:75:85:ed:14-1-2820-rms_voltage', device_ieee=a4:c1:38:03:75:85:ed:14, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:09:37.241 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lampe_tv_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:03:75:85:ed:14-1-2820-rms_voltage', device_ieee=a4:c1:38:03:75:85:ed:14, endpoint_id=1, group_id=None)
2025-04-17 19:09:37.810 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:09:37.816 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:09:37.877 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=3, SrcAddr=0xA4A7, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=60, SecurityUse=<Bool.false: 0>, TimeStamp=321886, TSN=0, Data=b'\x08\x16\x0B\x40\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:09:37.877 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 37, 877919, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=3, data=Serialized[b'\x08\x16\x0b@\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=60, rssi=None)
2025-04-17 19:09:37.878 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Received ZCL frame: b'\x08\x16\x0b@\x00'
2025-04-17 19:09:37.878 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=22, command_id=11, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:37.878 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Decoded ZCL frame: Identify:Default_Response(command_id=64, status=<Status.SUCCESS: 0>)
2025-04-17 19:09:37.878 DEBUG (MainThread) [zha.zigbee.device] [0xA4A7](RODRET Dimmer): started initialization
2025-04-17 19:09:37.878 DEBUG (MainThread) [zha.application.discovery] Discovering entities for device: 6c:5c:b1:ff:fe:2c:3b:88-IKEA of Sweden RODRET Dimmer
2025-04-17 19:09:37.878 DEBUG (MainThread) [zha.application.discovery] Discovering entities for endpoint: 6c:5c:b1:ff:fe:2c:3b:88-1
2025-04-17 19:09:37.879 DEBUG (MainThread) [zha.application.discovery] 'update' platform -> 'FirmwareUpdateEntity' using ['ota']
2025-04-17 19:09:37.879 DEBUG (MainThread) [zha.application.discovery] Attempting to discover quirks v2 entities for device: 6c:5c:b1:ff:fe:2c:3b:88-IKEA of Sweden RODRET Dimmer
2025-04-17 19:09:37.879 DEBUG (MainThread) [zha.application.discovery] Device: 6c:5c:b1:ff:fe:2c:3b:88-IKEA of Sweden RODRET Dimmer is not a quirks v2 device - skipping discover_quirks_v2_entities
2025-04-17 19:09:37.879 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:ZDO](RODRET Dimmer): 'async_initialize' stage succeeded
2025-04-17 19:09:37.879 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: initializing cluster handler: from_cache: False
2025-04-17 19:09:37.879 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: initializing uncached cluster handler attributes: ['battery_voltage', 'battery_percentage_remaining'] - from cache[False]
2025-04-17 19:09:37.879 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: Reading attributes in chunks: ['battery_voltage', 'battery_percentage_remaining']
2025-04-17 19:09:37.879 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0001] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=23, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:37.879 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0001] Sending request: Read_Attributes(attribute_ids=[32, 33])
2025-04-17 19:09:37.880 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x17 request
2025-04-17 19:09:37.880 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 37, 880137, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), dst_ep=1, source_route=None, extended_timeout=True, tsn=23, profile_id=260, cluster_id=1, data=Serialized[b'\x00\x17\x00 \x00!\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:37.880 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xA4A7), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1, TSN=23, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x17\x00\x20\x00\x21\x00')
2025-04-17 19:09:37.897 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:37.907 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=23)
2025-04-17 19:09:38.787 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:09:38.839 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1, SrcAddr=0xA4A7, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=382089, TSN=0, Data=b'\x18\x17\x01\x20\x00\x00\x20\x0D\x21\x00\x00\x20\xA4', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:09:38.839 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 38, 839455, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1, data=Serialized[b'\x18\x17\x01 \x00\x00 \r!\x00\x00 \xa4'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:09:38.839 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0001] Received ZCL frame: b'\x18\x17\x01 \x00\x00 \r!\x00\x00 \xa4'
2025-04-17 19:09:38.839 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0001] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=23, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:38.840 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0001] Decoded ZCL frame: PowerConfig1AAACluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=32, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint8_t, value=13)), ReadAttributeRecord(attrid=33, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint8_t, value=164))])
2025-04-17 19:09:38.842 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: cluster_handler[power] attribute_updated - cluster[Power Configuration] attr[battery_voltage] value[13]
2025-04-17 19:09:38.842 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=32, attribute_name='battery_voltage', attribute_value=13, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0001', cluster_id=1, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:38.843 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: cluster_handler[power] attribute_updated - cluster[Power Configuration] attr[battery_percentage_remaining] value[164]
2025-04-17 19:09:38.843 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=33, attribute_name='battery_percentage_remaining', attribute_value=164, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0001', cluster_id=1, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:38.843 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-1', device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, group_id=None) (0 listeners)
2025-04-17 19:09:38.843 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: Got attributes: {'battery_voltage': 13, 'battery_percentage_remaining': 164}
2025-04-17 19:09:38.843 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: Performing cluster handler specific initialization: ['battery_voltage', 'battery_percentage_remaining']
2025-04-17 19:09:38.843 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: Reading attributes in chunks: ['battery_size', 'battery_quantity']
2025-04-17 19:09:38.843 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: cluster_handler[power] attribute_updated - cluster[Power Configuration] attr[battery_size] value[BatterySize.AAA]
2025-04-17 19:09:38.843 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=49, attribute_name='battery_size', attribute_value=<BatterySize.AAA: 4>, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0001', cluster_id=1, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:38.843 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: cluster_handler[power] attribute_updated - cluster[Power Configuration] attr[battery_quantity] value[1]
2025-04-17 19:09:38.843 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=51, attribute_name='battery_quantity', attribute_value=1, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0001', cluster_id=1, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:38.843 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: Got attributes: {'battery_size': <BatterySize.AAA: 4>, 'battery_quantity': 1}
2025-04-17 19:09:38.843 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: finished cluster handler initialization
2025-04-17 19:09:38.844 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0003]: initializing cluster handler: from_cache: False
2025-04-17 19:09:38.844 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0003]: finished cluster handler initialization
2025-04-17 19:09:38.844 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0000]: initializing cluster handler: from_cache: False
2025-04-17 19:09:38.844 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0000]: finished cluster handler initialization
2025-04-17 19:09:38.844 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: initializing cluster handler: from_cache: False
2025-04-17 19:09:38.844 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: finished cluster handler initialization
2025-04-17 19:09:38.844 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x1000]: initializing cluster handler: from_cache: False
2025-04-17 19:09:38.844 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x1000]: finished cluster handler initialization
2025-04-17 19:09:38.845 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: initializing cluster handler: from_cache: False
2025-04-17 19:09:38.845 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: initializing cached cluster handler attributes: ['current_file_version']
2025-04-17 19:09:38.845 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: Reading attributes in chunks: ['current_file_version']
2025-04-17 19:09:38.845 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0019] Sending request header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=24, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:38.845 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0019] Sending request: Read_Attributes(attribute_ids=[2])
2025-04-17 19:09:38.845 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x18 request
2025-04-17 19:09:38.845 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 38, 845977, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), dst_ep=1, source_route=None, extended_timeout=True, tsn=24, profile_id=260, cluster_id=25, data=Serialized[b'\x18\x18\x00\x02\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:38.847 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xA4A7), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=25, TSN=24, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x18\x18\x00\x02\x00')
2025-04-17 19:09:38.860 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:38.865 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=24)
2025-04-17 19:09:39.793 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:09:39.852 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=25, SrcAddr=0xA4A7, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=445073, TSN=0, Data=b'\x10\x18\x01\x02\x00\x00\x23\x47\x00\x00\x01', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:09:39.852 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 39, 852571, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=25, data=Serialized[b'\x10\x18\x01\x02\x00\x00#G\x00\x00\x01'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:09:39.852 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0019] Received ZCL frame: b'\x10\x18\x01\x02\x00\x00#G\x00\x00\x01'
2025-04-17 19:09:39.853 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0019] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x10>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=24, command_id=1, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:39.853 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0019] Decoded ZCL frame: Ota:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=2, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint32_t, value=16777287))])
2025-04-17 19:09:39.853 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: cluster_handler[ota] attribute_updated - cluster[Ota] attr[current_file_version] value[16777287]
2025-04-17 19:09:39.853 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=2, attribute_name='current_file_version', attribute_value=16777287, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0019', cluster_id=25, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:39.853 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.UPDATE: 'update'>, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-25-firmware_update', device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, group_id=None) (0 listeners)
2025-04-17 19:09:39.853 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: Got attributes: {'current_file_version': 16777287}
2025-04-17 19:09:39.853 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: finished cluster handler initialization
2025-04-17 19:09:39.853 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0008]: initializing cluster handler: from_cache: False
2025-04-17 19:09:39.853 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0008]: finished cluster handler initialization
2025-04-17 19:09:39.853 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0006]: initializing cluster handler: from_cache: False
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0006]: finished cluster handler initialization
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: initializing cluster handler: from_cache: False
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: initializing cached cluster handler attributes: ['current_file_version']
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: Reading attributes in chunks: ['current_file_version']
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: Got attributes: {'current_file_version': 16777287}
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: finished cluster handler initialization
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: 'async_initialize' stage succeeded
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0003]: 'async_initialize' stage succeeded
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0000]: 'async_initialize' stage succeeded
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: 'async_initialize' stage succeeded
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x1000]: 'async_initialize' stage succeeded
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: 'async_initialize' stage succeeded
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0008]: 'async_initialize' stage succeeded
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0006]: 'async_initialize' stage succeeded
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: 'async_initialize' stage succeeded
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.device] [0xA4A7](RODRET Dimmer): Primary entity tie between <zha.application.platforms.button.IdentifyButton object at 0x7f0f37969b80> and <zha.application.platforms.sensor.Battery object at 0x7f0f3791d5b0>, no primary entity
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.device] [0xA4A7](RODRET Dimmer): power source: Battery or Unknown
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha.zigbee.device] [0xA4A7](RODRET Dimmer): completed initialization
2025-04-17 19:09:39.854 DEBUG (MainThread) [zha] Emitting event device_fully_initialized with data DeviceFullInitEvent(device_info=ExtendedDeviceInfoWithPairingStatus(ieee=6c:5c:b1:ff:fe:2c:3b:88, nwk=0xA4A7, manufacturer='IKEA of Sweden', model='RODRET Dimmer', name='IKEA of Sweden RODRET Dimmer', quirk_applied=True, quirk_class='zhaquirks.ikea.twobtnremote.IkeaRodretRemote2Btn', quirk_id=None, manufacturer_code=4476, power_source='Battery or Unknown', lqi=57, rssi=None, last_seen='2025-04-17T19:09:39', available=True, device_type='EndDevice', signature={'node_descriptor': NodeDescriptor(logical_type=<LogicalType.EndDevice: 2>, complex_descriptor_available=0, user_descriptor_available=0, reserved=0, aps_flags=0, frequency_band=<FrequencyBand.Freq2400MHz: 8>, mac_capability_flags=<MACCapabilityFlags.AllocateAddress: 128>, manufacturer_code=4476, maximum_buffer_size=82, maximum_incoming_transfer_size=82, server_mask=11264, maximum_outgoing_transfer_size=82, descriptor_capability_field=<DescriptorCapability.NONE: 0>, *allocate_address=True, *is_alternate_pan_coordinator=False, *is_coordinator=False, *is_end_device=True, *is_full_function_device=False, *is_mains_powered=False, *is_receiver_on_when_idle=False, *is_router=False, *is_security_capable=False), 'endpoints': {1: {'profile_id': '0x0104', 'device_type': '0x0820', 'input_clusters': ['0x0000', '0x0001', '0x0003', '0x0020', '0x1000', '0xfc7c'], 'output_clusters': ['0x0003', '0x0004', '0x0006', '0x0008', '0x0019', '0x1000']}}, 'manufacturer': 'IKEA of Sweden', 'model': 'RODRET Dimmer'}, active_coordinator=False, entities={'6c:5c:b1:ff:fe:2c:3b:88-1-3': CommandButtonEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-3', platform=<Platform.BUTTON: 'button'>, class_name='IdentifyButton', translation_key=None, device_class=<ButtonDeviceClass.IDENTIFY: 'identify'>, state_class=None, entity_category=<EntityCategory.DIAGNOSTIC: 'diagnostic'>, entity_registry_enabled_default=True, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='IdentifyClusterHandler', generic_id='cluster_handler_0x0003', endpoint_id=1, cluster=ClusterInfo(id=3, name='Identify', type='server', commands=[ZCLCommandDef(id=0x00, name='identify', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.identify'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x01, name='identify_query', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.identify_query'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x40, name='trigger_effect', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.trigger_effect'>, is_manufacturer_specific=None)]), id='1:0x0003', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0003', status='INITIALIZED', value_attribute=None)], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, command='identify', args=[5], kwargs={}), '6c:5c:b1:ff:fe:2c:3b:88-1-1': SensorEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-1', platform=<Platform.SENSOR: 'sensor'>, class_name='Battery', translation_key=None, device_class=<SensorDeviceClass.BATTERY: 'battery'>, state_class=<SensorStateClass.MEASUREMENT: 'measurement'>, entity_category=<EntityCategory.DIAGNOSTIC: 'diagnostic'>, entity_registry_enabled_default=True, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='PowerConfigurationClusterHandler', generic_id='cluster_handler_0x0001', endpoint_id=1, cluster=ClusterInfo(id=1, name='Power Configuration', type='server', commands=[]), id='1:0x0001', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0001', status='INITIALIZED', value_attribute='battery_voltage')], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, attribute='battery_percentage_remaining', decimals=1, divisor=1, multiplier=1, unit='%'), '6c:5c:b1:ff:fe:2c:3b:88-1-0-rssi': SensorEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-0-rssi', platform=<Platform.SENSOR: 'sensor'>, class_name='RSSISensor', translation_key='rssi', device_class=<SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>, state_class=<SensorStateClass.MEASUREMENT: 'measurement'>, entity_category=<EntityCategory.DIAGNOSTIC: 'diagnostic'>, entity_registry_enabled_default=False, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='BasicClusterHandler', generic_id='cluster_handler_0x0000', endpoint_id=1, cluster=ClusterInfo(id=0, name='Basic', type='server', commands=[ZCLCommandDef(id=0x00, name='reset_fact_default', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.reset_fact_default'>, is_manufacturer_specific=None)]), id='1:0x0000', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0000', status='INITIALIZED', value_attribute=None)], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, attribute=None, decimals=1, divisor=1, multiplier=1, unit='dBm'), '6c:5c:b1:ff:fe:2c:3b:88-1-0-lqi': SensorEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-0-lqi', platform=<Platform.SENSOR: 'sensor'>, class_name='LQISensor', translation_key='lqi', device_class=None, state_class=<SensorStateClass.MEASUREMENT: 'measurement'>, entity_category=<EntityCategory.DIAGNOSTIC: 'diagnostic'>, entity_registry_enabled_default=False, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='BasicClusterHandler', generic_id='cluster_handler_0x0000', endpoint_id=1, cluster=ClusterInfo(id=0, name='Basic', type='server', commands=[ZCLCommandDef(id=0x00, name='reset_fact_default', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.reset_fact_default'>, is_manufacturer_specific=None)]), id='1:0x0000', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0000', status='INITIALIZED', value_attribute=None)], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, attribute=None, decimals=1, divisor=1, multiplier=1, unit=None), '6c:5c:b1:ff:fe:2c:3b:88-1-25-firmware_update': UpdateEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-25-firmware_update', platform=<Platform.UPDATE: 'update'>, class_name='FirmwareUpdateEntity', translation_key=None, device_class=<UpdateDeviceClass.FIRMWARE: 'firmware'>, state_class=None, entity_category=<EntityCategory.CONFIG: 'config'>, entity_registry_enabled_default=True, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='OtaClientClusterHandler', generic_id='cluster_handler_0x0019', endpoint_id=1, cluster=ClusterInfo(id=25, name='Ota', type='client', commands=[ZCLCommandDef(id=0x03, name='image_block', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.clusters.general.ImageBlockCommand'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x04, name='image_page', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.clusters.general.ImagePageCommand'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x01, name='query_next_image', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.clusters.general.QueryNextImageCommand'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x08, name='query_specific_file', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.query_specific_file'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x06, name='upgrade_end', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.upgrade_end'>, is_manufacturer_specific=None)]), id='1:0x0019', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0019', status='INITIALIZED', value_attribute=None)], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, supported_features=<UpdateEntityFeature.INSTALL|SPECIFIC_VERSION|PROGRESS: 7>)}, neighbors=[], routes=[], endpoint_names=[EndpointNameInfo(name='NON_COLOR_CONTROLLER')], pairing_status=<DevicePairingStatus.CONFIGURED: 3>), new_join=True, event_type='zha_gateway_message', event='device_fully_initialized') (1 listeners)
2025-04-17 19:09:39.855 DEBUG (MainThread) [zha] (ZHAGatewayProxy) handling event protocol for event: DeviceFullInitEvent(device_info=ExtendedDeviceInfoWithPairingStatus(ieee=6c:5c:b1:ff:fe:2c:3b:88, nwk=0xA4A7, manufacturer='IKEA of Sweden', model='RODRET Dimmer', name='IKEA of Sweden RODRET Dimmer', quirk_applied=True, quirk_class='zhaquirks.ikea.twobtnremote.IkeaRodretRemote2Btn', quirk_id=None, manufacturer_code=4476, power_source='Battery or Unknown', lqi=57, rssi=None, last_seen='2025-04-17T19:09:39', available=True, device_type='EndDevice', signature={'node_descriptor': NodeDescriptor(logical_type=<LogicalType.EndDevice: 2>, complex_descriptor_available=0, user_descriptor_available=0, reserved=0, aps_flags=0, frequency_band=<FrequencyBand.Freq2400MHz: 8>, mac_capability_flags=<MACCapabilityFlags.AllocateAddress: 128>, manufacturer_code=4476, maximum_buffer_size=82, maximum_incoming_transfer_size=82, server_mask=11264, maximum_outgoing_transfer_size=82, descriptor_capability_field=<DescriptorCapability.NONE: 0>, *allocate_address=True, *is_alternate_pan_coordinator=False, *is_coordinator=False, *is_end_device=True, *is_full_function_device=False, *is_mains_powered=False, *is_receiver_on_when_idle=False, *is_router=False, *is_security_capable=False), 'endpoints': {1: {'profile_id': '0x0104', 'device_type': '0x0820', 'input_clusters': ['0x0000', '0x0001', '0x0003', '0x0020', '0x1000', '0xfc7c'], 'output_clusters': ['0x0003', '0x0004', '0x0006', '0x0008', '0x0019', '0x1000']}}, 'manufacturer': 'IKEA of Sweden', 'model': 'RODRET Dimmer'}, active_coordinator=False, entities={'6c:5c:b1:ff:fe:2c:3b:88-1-3': CommandButtonEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-3', platform=<Platform.BUTTON: 'button'>, class_name='IdentifyButton', translation_key=None, device_class=<ButtonDeviceClass.IDENTIFY: 'identify'>, state_class=None, entity_category=<EntityCategory.DIAGNOSTIC: 'diagnostic'>, entity_registry_enabled_default=True, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='IdentifyClusterHandler', generic_id='cluster_handler_0x0003', endpoint_id=1, cluster=ClusterInfo(id=3, name='Identify', type='server', commands=[ZCLCommandDef(id=0x00, name='identify', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.identify'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x01, name='identify_query', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.identify_query'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x40, name='trigger_effect', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.trigger_effect'>, is_manufacturer_specific=None)]), id='1:0x0003', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0003', status='INITIALIZED', value_attribute=None)], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, command='identify', args=[5], kwargs={}), '6c:5c:b1:ff:fe:2c:3b:88-1-1': SensorEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-1', platform=<Platform.SENSOR: 'sensor'>, class_name='Battery', translation_key=None, device_class=<SensorDeviceClass.BATTERY: 'battery'>, state_class=<SensorStateClass.MEASUREMENT: 'measurement'>, entity_category=<EntityCategory.DIAGNOSTIC: 'diagnostic'>, entity_registry_enabled_default=True, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='PowerConfigurationClusterHandler', generic_id='cluster_handler_0x0001', endpoint_id=1, cluster=ClusterInfo(id=1, name='Power Configuration', type='server', commands=[]), id='1:0x0001', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0001', status='INITIALIZED', value_attribute='battery_voltage')], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, attribute='battery_percentage_remaining', decimals=1, divisor=1, multiplier=1, unit='%'), '6c:5c:b1:ff:fe:2c:3b:88-1-0-rssi': SensorEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-0-rssi', platform=<Platform.SENSOR: 'sensor'>, class_name='RSSISensor', translation_key='rssi', device_class=<SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>, state_class=<SensorStateClass.MEASUREMENT: 'measurement'>, entity_category=<EntityCategory.DIAGNOSTIC: 'diagnostic'>, entity_registry_enabled_default=False, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='BasicClusterHandler', generic_id='cluster_handler_0x0000', endpoint_id=1, cluster=ClusterInfo(id=0, name='Basic', type='server', commands=[ZCLCommandDef(id=0x00, name='reset_fact_default', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.reset_fact_default'>, is_manufacturer_specific=None)]), id='1:0x0000', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0000', status='INITIALIZED', value_attribute=None)], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, attribute=None, decimals=1, divisor=1, multiplier=1, unit='dBm'), '6c:5c:b1:ff:fe:2c:3b:88-1-0-lqi': SensorEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-0-lqi', platform=<Platform.SENSOR: 'sensor'>, class_name='LQISensor', translation_key='lqi', device_class=None, state_class=<SensorStateClass.MEASUREMENT: 'measurement'>, entity_category=<EntityCategory.DIAGNOSTIC: 'diagnostic'>, entity_registry_enabled_default=False, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='BasicClusterHandler', generic_id='cluster_handler_0x0000', endpoint_id=1, cluster=ClusterInfo(id=0, name='Basic', type='server', commands=[ZCLCommandDef(id=0x00, name='reset_fact_default', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.reset_fact_default'>, is_manufacturer_specific=None)]), id='1:0x0000', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0000', status='INITIALIZED', value_attribute=None)], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, attribute=None, decimals=1, divisor=1, multiplier=1, unit=None), '6c:5c:b1:ff:fe:2c:3b:88-1-25-firmware_update': UpdateEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-25-firmware_update', platform=<Platform.UPDATE: 'update'>, class_name='FirmwareUpdateEntity', translation_key=None, device_class=<UpdateDeviceClass.FIRMWARE: 'firmware'>, state_class=None, entity_category=<EntityCategory.CONFIG: 'config'>, entity_registry_enabled_default=True, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='OtaClientClusterHandler', generic_id='cluster_handler_0x0019', endpoint_id=1, cluster=ClusterInfo(id=25, name='Ota', type='client', commands=[ZCLCommandDef(id=0x03, name='image_block', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.clusters.general.ImageBlockCommand'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x04, name='image_page', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.clusters.general.ImagePageCommand'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x01, name='query_next_image', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.clusters.general.QueryNextImageCommand'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x08, name='query_specific_file', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.query_specific_file'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x06, name='upgrade_end', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.upgrade_end'>, is_manufacturer_specific=None)]), id='1:0x0019', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0019', status='INITIALIZED', value_attribute=None)], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, supported_features=<UpdateEntityFeature.INSTALL|SPECIFIC_VERSION|PROGRESS: 7>)}, neighbors=[], routes=[], endpoint_names=[EndpointNameInfo(name='NON_COLOR_CONTROLLER')], pairing_status=<DevicePairingStatus.CONFIGURED: 3>), new_join=True, event_type='zha_gateway_message', event='device_fully_initialized')
2025-04-17 19:09:39.858 DEBUG (MainThread) [zha.application.helpers] listener not registered with global updater - nothing to remove: <bound method RSSISensor.update of <zha.application.platforms.sensor.RSSISensor object at 0x7f0f37968050>>
2025-04-17 19:09:39.858 DEBUG (MainThread) [zha.application.helpers] listener not registered with global updater - nothing to remove: <bound method RSSISensor.update of <zha.application.platforms.sensor.LQISensor object at 0x7f0f3796a300>>
2025-04-17 19:09:39.860 DEBUG (MainThread) [zha] Emitting event device_fully_initialized with data DeviceFullInitEvent(device_info=ExtendedDeviceInfoWithPairingStatus(ieee=6c:5c:b1:ff:fe:2c:3b:88, nwk=0xA4A7, manufacturer='IKEA of Sweden', model='RODRET Dimmer', name='IKEA of Sweden RODRET Dimmer', quirk_applied=True, quirk_class='zhaquirks.ikea.twobtnremote.IkeaRodretRemote2Btn', quirk_id=None, manufacturer_code=4476, power_source='Battery or Unknown', lqi=57, rssi=None, last_seen='2025-04-17T19:09:39', available=True, device_type='EndDevice', signature={'node_descriptor': NodeDescriptor(logical_type=<LogicalType.EndDevice: 2>, complex_descriptor_available=0, user_descriptor_available=0, reserved=0, aps_flags=0, frequency_band=<FrequencyBand.Freq2400MHz: 8>, mac_capability_flags=<MACCapabilityFlags.AllocateAddress: 128>, manufacturer_code=4476, maximum_buffer_size=82, maximum_incoming_transfer_size=82, server_mask=11264, maximum_outgoing_transfer_size=82, descriptor_capability_field=<DescriptorCapability.NONE: 0>, *allocate_address=True, *is_alternate_pan_coordinator=False, *is_coordinator=False, *is_end_device=True, *is_full_function_device=False, *is_mains_powered=False, *is_receiver_on_when_idle=False, *is_router=False, *is_security_capable=False), 'endpoints': {1: {'profile_id': '0x0104', 'device_type': '0x0820', 'input_clusters': ['0x0000', '0x0001', '0x0003', '0x0020', '0x1000', '0xfc7c'], 'output_clusters': ['0x0003', '0x0004', '0x0006', '0x0008', '0x0019', '0x1000']}}, 'manufacturer': 'IKEA of Sweden', 'model': 'RODRET Dimmer'}, active_coordinator=False, entities={'6c:5c:b1:ff:fe:2c:3b:88-1-3': CommandButtonEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-3', platform=<Platform.BUTTON: 'button'>, class_name='IdentifyButton', translation_key=None, device_class=<ButtonDeviceClass.IDENTIFY: 'identify'>, state_class=None, entity_category=<EntityCategory.DIAGNOSTIC: 'diagnostic'>, entity_registry_enabled_default=True, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='IdentifyClusterHandler', generic_id='cluster_handler_0x0003', endpoint_id=1, cluster=ClusterInfo(id=3, name='Identify', type='server', commands=[ZCLCommandDef(id=0x00, name='identify', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.identify'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x01, name='identify_query', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.identify_query'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x40, name='trigger_effect', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.trigger_effect'>, is_manufacturer_specific=None)]), id='1:0x0003', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0003', status='INITIALIZED', value_attribute=None)], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, command='identify', args=[5], kwargs={}), '6c:5c:b1:ff:fe:2c:3b:88-1-1': SensorEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-1', platform=<Platform.SENSOR: 'sensor'>, class_name='Battery', translation_key=None, device_class=<SensorDeviceClass.BATTERY: 'battery'>, state_class=<SensorStateClass.MEASUREMENT: 'measurement'>, entity_category=<EntityCategory.DIAGNOSTIC: 'diagnostic'>, entity_registry_enabled_default=True, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='PowerConfigurationClusterHandler', generic_id='cluster_handler_0x0001', endpoint_id=1, cluster=ClusterInfo(id=1, name='Power Configuration', type='server', commands=[]), id='1:0x0001', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0001', status='INITIALIZED', value_attribute='battery_voltage')], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, attribute='battery_percentage_remaining', decimals=1, divisor=1, multiplier=1, unit='%'), '6c:5c:b1:ff:fe:2c:3b:88-1-0-rssi': SensorEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-0-rssi', platform=<Platform.SENSOR: 'sensor'>, class_name='RSSISensor', translation_key='rssi', device_class=<SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>, state_class=<SensorStateClass.MEASUREMENT: 'measurement'>, entity_category=<EntityCategory.DIAGNOSTIC: 'diagnostic'>, entity_registry_enabled_default=False, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='BasicClusterHandler', generic_id='cluster_handler_0x0000', endpoint_id=1, cluster=ClusterInfo(id=0, name='Basic', type='server', commands=[ZCLCommandDef(id=0x00, name='reset_fact_default', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.reset_fact_default'>, is_manufacturer_specific=None)]), id='1:0x0000', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0000', status='INITIALIZED', value_attribute=None)], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, attribute=None, decimals=1, divisor=1, multiplier=1, unit='dBm'), '6c:5c:b1:ff:fe:2c:3b:88-1-0-lqi': SensorEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-0-lqi', platform=<Platform.SENSOR: 'sensor'>, class_name='LQISensor', translation_key='lqi', device_class=None, state_class=<SensorStateClass.MEASUREMENT: 'measurement'>, entity_category=<EntityCategory.DIAGNOSTIC: 'diagnostic'>, entity_registry_enabled_default=False, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='BasicClusterHandler', generic_id='cluster_handler_0x0000', endpoint_id=1, cluster=ClusterInfo(id=0, name='Basic', type='server', commands=[ZCLCommandDef(id=0x00, name='reset_fact_default', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.reset_fact_default'>, is_manufacturer_specific=None)]), id='1:0x0000', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0000', status='INITIALIZED', value_attribute=None)], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, attribute=None, decimals=1, divisor=1, multiplier=1, unit=None), '6c:5c:b1:ff:fe:2c:3b:88-1-25-firmware_update': UpdateEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-25-firmware_update', platform=<Platform.UPDATE: 'update'>, class_name='FirmwareUpdateEntity', translation_key=None, device_class=<UpdateDeviceClass.FIRMWARE: 'firmware'>, state_class=None, entity_category=<EntityCategory.CONFIG: 'config'>, entity_registry_enabled_default=True, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='OtaClientClusterHandler', generic_id='cluster_handler_0x0019', endpoint_id=1, cluster=ClusterInfo(id=25, name='Ota', type='client', commands=[ZCLCommandDef(id=0x03, name='image_block', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.clusters.general.ImageBlockCommand'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x04, name='image_page', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.clusters.general.ImagePageCommand'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x01, name='query_next_image', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.clusters.general.QueryNextImageCommand'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x08, name='query_specific_file', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.query_specific_file'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x06, name='upgrade_end', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.upgrade_end'>, is_manufacturer_specific=None)]), id='1:0x0019', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0019', status='INITIALIZED', value_attribute=None)], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, supported_features=<UpdateEntityFeature.INSTALL|SPECIFIC_VERSION|PROGRESS: 7>)}, neighbors=[], routes=[], endpoint_names=[EndpointNameInfo(name='NON_COLOR_CONTROLLER')], pairing_status=<DevicePairingStatus.INITIALIZED: 4>), new_join=False, event_type='zha_gateway_message', event='device_fully_initialized') (1 listeners)
2025-04-17 19:09:39.860 DEBUG (MainThread) [zha] (ZHAGatewayProxy) handling event protocol for event: DeviceFullInitEvent(device_info=ExtendedDeviceInfoWithPairingStatus(ieee=6c:5c:b1:ff:fe:2c:3b:88, nwk=0xA4A7, manufacturer='IKEA of Sweden', model='RODRET Dimmer', name='IKEA of Sweden RODRET Dimmer', quirk_applied=True, quirk_class='zhaquirks.ikea.twobtnremote.IkeaRodretRemote2Btn', quirk_id=None, manufacturer_code=4476, power_source='Battery or Unknown', lqi=57, rssi=None, last_seen='2025-04-17T19:09:39', available=True, device_type='EndDevice', signature={'node_descriptor': NodeDescriptor(logical_type=<LogicalType.EndDevice: 2>, complex_descriptor_available=0, user_descriptor_available=0, reserved=0, aps_flags=0, frequency_band=<FrequencyBand.Freq2400MHz: 8>, mac_capability_flags=<MACCapabilityFlags.AllocateAddress: 128>, manufacturer_code=4476, maximum_buffer_size=82, maximum_incoming_transfer_size=82, server_mask=11264, maximum_outgoing_transfer_size=82, descriptor_capability_field=<DescriptorCapability.NONE: 0>, *allocate_address=True, *is_alternate_pan_coordinator=False, *is_coordinator=False, *is_end_device=True, *is_full_function_device=False, *is_mains_powered=False, *is_receiver_on_when_idle=False, *is_router=False, *is_security_capable=False), 'endpoints': {1: {'profile_id': '0x0104', 'device_type': '0x0820', 'input_clusters': ['0x0000', '0x0001', '0x0003', '0x0020', '0x1000', '0xfc7c'], 'output_clusters': ['0x0003', '0x0004', '0x0006', '0x0008', '0x0019', '0x1000']}}, 'manufacturer': 'IKEA of Sweden', 'model': 'RODRET Dimmer'}, active_coordinator=False, entities={'6c:5c:b1:ff:fe:2c:3b:88-1-3': CommandButtonEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-3', platform=<Platform.BUTTON: 'button'>, class_name='IdentifyButton', translation_key=None, device_class=<ButtonDeviceClass.IDENTIFY: 'identify'>, state_class=None, entity_category=<EntityCategory.DIAGNOSTIC: 'diagnostic'>, entity_registry_enabled_default=True, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='IdentifyClusterHandler', generic_id='cluster_handler_0x0003', endpoint_id=1, cluster=ClusterInfo(id=3, name='Identify', type='server', commands=[ZCLCommandDef(id=0x00, name='identify', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.identify'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x01, name='identify_query', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.identify_query'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x40, name='trigger_effect', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.trigger_effect'>, is_manufacturer_specific=None)]), id='1:0x0003', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0003', status='INITIALIZED', value_attribute=None)], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, command='identify', args=[5], kwargs={}), '6c:5c:b1:ff:fe:2c:3b:88-1-1': SensorEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-1', platform=<Platform.SENSOR: 'sensor'>, class_name='Battery', translation_key=None, device_class=<SensorDeviceClass.BATTERY: 'battery'>, state_class=<SensorStateClass.MEASUREMENT: 'measurement'>, entity_category=<EntityCategory.DIAGNOSTIC: 'diagnostic'>, entity_registry_enabled_default=True, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='PowerConfigurationClusterHandler', generic_id='cluster_handler_0x0001', endpoint_id=1, cluster=ClusterInfo(id=1, name='Power Configuration', type='server', commands=[]), id='1:0x0001', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0001', status='INITIALIZED', value_attribute='battery_voltage')], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, attribute='battery_percentage_remaining', decimals=1, divisor=1, multiplier=1, unit='%'), '6c:5c:b1:ff:fe:2c:3b:88-1-0-rssi': SensorEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-0-rssi', platform=<Platform.SENSOR: 'sensor'>, class_name='RSSISensor', translation_key='rssi', device_class=<SensorDeviceClass.SIGNAL_STRENGTH: 'signal_strength'>, state_class=<SensorStateClass.MEASUREMENT: 'measurement'>, entity_category=<EntityCategory.DIAGNOSTIC: 'diagnostic'>, entity_registry_enabled_default=False, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='BasicClusterHandler', generic_id='cluster_handler_0x0000', endpoint_id=1, cluster=ClusterInfo(id=0, name='Basic', type='server', commands=[ZCLCommandDef(id=0x00, name='reset_fact_default', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.reset_fact_default'>, is_manufacturer_specific=None)]), id='1:0x0000', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0000', status='INITIALIZED', value_attribute=None)], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, attribute=None, decimals=1, divisor=1, multiplier=1, unit='dBm'), '6c:5c:b1:ff:fe:2c:3b:88-1-0-lqi': SensorEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-0-lqi', platform=<Platform.SENSOR: 'sensor'>, class_name='LQISensor', translation_key='lqi', device_class=None, state_class=<SensorStateClass.MEASUREMENT: 'measurement'>, entity_category=<EntityCategory.DIAGNOSTIC: 'diagnostic'>, entity_registry_enabled_default=False, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='BasicClusterHandler', generic_id='cluster_handler_0x0000', endpoint_id=1, cluster=ClusterInfo(id=0, name='Basic', type='server', commands=[ZCLCommandDef(id=0x00, name='reset_fact_default', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.reset_fact_default'>, is_manufacturer_specific=None)]), id='1:0x0000', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0000', status='INITIALIZED', value_attribute=None)], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, attribute=None, decimals=1, divisor=1, multiplier=1, unit=None), '6c:5c:b1:ff:fe:2c:3b:88-1-25-firmware_update': UpdateEntityInfo(fallback_name=None, unique_id='6c:5c:b1:ff:fe:2c:3b:88-1-25-firmware_update', platform=<Platform.UPDATE: 'update'>, class_name='FirmwareUpdateEntity', translation_key=None, device_class=<UpdateDeviceClass.FIRMWARE: 'firmware'>, state_class=None, entity_category=<EntityCategory.CONFIG: 'config'>, entity_registry_enabled_default=True, enabled=True, primary=False, cluster_handlers=[ClusterHandlerInfo(class_name='OtaClientClusterHandler', generic_id='cluster_handler_0x0019', endpoint_id=1, cluster=ClusterInfo(id=25, name='Ota', type='client', commands=[ZCLCommandDef(id=0x03, name='image_block', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.clusters.general.ImageBlockCommand'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x04, name='image_page', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.clusters.general.ImagePageCommand'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x01, name='query_next_image', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.clusters.general.QueryNextImageCommand'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x08, name='query_specific_file', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.query_specific_file'>, is_manufacturer_specific=None), ZCLCommandDef(id=0x06, name='upgrade_end', direction=<Direction.Client_to_Server: 0>, schema=<class 'zigpy.zcl.foundation.upgrade_end'>, is_manufacturer_specific=None)]), id='1:0x0019', unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0019', status='INITIALIZED', value_attribute=None)], device_ieee=6c:5c:b1:ff:fe:2c:3b:88, endpoint_id=1, available=True, group_id=None, supported_features=<UpdateEntityFeature.INSTALL|SPECIFIC_VERSION|PROGRESS: 7>)}, neighbors=[], routes=[], endpoint_names=[EndpointNameInfo(name='NON_COLOR_CONTROLLER')], pairing_status=<DevicePairingStatus.INITIALIZED: 4>), new_join=False, event_type='zha_gateway_message', event='device_fully_initialized')
2025-04-17 19:09:39.985 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:61:22:f9:ad:05-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:09:39.985 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-1794-summation_delivered: polling for updated state
2025-04-17 19:09:39.985 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-1794-summation_delivered: polling current state
2025-04-17 19:09:39.985 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: async_update
2025-04-17 19:09:39.986 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:09:39.986 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=63, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:39.986 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:09:39.986 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 39, 986724, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), dst_ep=1, source_route=None, extended_timeout=False, tsn=63, profile_id=260, cluster_id=1794, data=Serialized[b'\x00?\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:39.987 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x689F), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=63, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x3F\x00\x00\x00\x00\x02')
2025-04-17 19:09:39.998 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:40.002 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=63)
2025-04-17 19:09:40.038 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0x689F, Relays=[])
2025-04-17 19:09:40.038 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0x689F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=114, SecurityUse=<Bool.false: 0>, TimeStamp=456970, TSN=0, Data=b'\x18\x3F\x01\x00\x00\x00\x25\xC7\x02\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x689F, MsgResultRadius=29)
2025-04-17 19:09:40.038 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 40, 38756, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18?\x01\x00\x00\x00%\xc7\x02\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=114, rssi=None)
2025-04-17 19:09:40.039 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Received ZCL frame: b'\x18?\x01\x00\x00\x00%\xc7\x02\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:09:40.039 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=63, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:40.039 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=711)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:09:40.039 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[711]
2025-04-17 19:09:40.039 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=711, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:40.039 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:09:40.039 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:40.040 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: Got attributes: {'current_summ_delivered': 711, 'status': <bitmap8: 0>}
2025-04-17 19:09:40.783 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:09:40.983 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:fb:20:a9:7a:66-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:09:40.983 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:fb:20:a9:7a:66-1-1794-summation_delivered: polling for updated state
2025-04-17 19:09:40.983 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:fb:20:a9:7a:66-1-1794-summation_delivered: polling current state
2025-04-17 19:09:40.983 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0702]: async_update
2025-04-17 19:09:40.983 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:09:40.983 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=32, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:40.984 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:09:40.984 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 40, 984268, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D1E), dst_ep=1, source_route=None, extended_timeout=False, tsn=32, profile_id=260, cluster_id=1794, data=Serialized[b'\x00 \x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:40.984 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x7D1E), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=32, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x20\x00\x00\x00\x00\x02')
2025-04-17 19:09:40.996 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:41.000 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=32)
2025-04-17 19:09:41.028 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0x7D1E, Relays=[])
2025-04-17 19:09:41.028 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0x7D1E, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=126, SecurityUse=<Bool.false: 0>, TimeStamp=518855, TSN=0, Data=b'\x18\x20\x01\x00\x00\x00\x25\xF4\x01\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x7D1E, MsgResultRadius=29)
2025-04-17 19:09:41.028 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 41, 28673, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D1E), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18 \x01\x00\x00\x00%\xf4\x01\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=126, rssi=None)
2025-04-17 19:09:41.029 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0702] Received ZCL frame: b'\x18 \x01\x00\x00\x00%\xf4\x01\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:09:41.029 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=32, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:41.029 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=500)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:09:41.029 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[500]
2025-04-17 19:09:41.029 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=500, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:41.029 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:09:41.029 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:41.029 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0702]: Got attributes: {'current_summ_delivered': 500, 'status': <bitmap8: 0>}
2025-04-17 19:09:41.175 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=3, SrcAddr=0xA4A7, SrcEndpoint=1, DstEndpoint=2, WasBroadcast=<Bool.true: 1>, LQI=45, SecurityUse=<Bool.false: 0>, TimeStamp=527798, TSN=0, Data=b'\x11\x01\x01', MacSrcAddr=0xB6F6, MsgResultRadius=9)
2025-04-17 19:09:41.175 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=3, SrcAddr=0xA4A7, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.true: 1>, LQI=45, SecurityUse=<Bool.false: 0>, TimeStamp=527798, TSN=0, Data=b'\x11\x01\x01', MacSrcAddr=0xB6F6, MsgResultRadius=9)
2025-04-17 19:09:41.175 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 41, 175970, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.Broadcast: 15>, address=<BroadcastAddress.ALL_ROUTERS_AND_COORDINATOR: 65532>), dst_ep=2, source_route=None, extended_timeout=False, tsn=0, profile_id=49246, cluster_id=3, data=Serialized[b'\x11\x01\x01'], tx_options=<TransmitOptions.NONE: 0>, radius=9, non_member_radius=0, lqi=45, rssi=None)
2025-04-17 19:09:41.176 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Received ZCL frame: b'\x11\x01\x01'
2025-04-17 19:09:41.176 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x11>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=0, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=True, *is_general=False), tsn=1, command_id=1, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:41.176 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Decoded ZCL frame: Identify:identify_query()
2025-04-17 19:09:41.176 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Received command 0x01 (TSN 1): identify_query()
2025-04-17 19:09:41.176 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] No explicit handler for cluster command 0x01: identify_query()
2025-04-17 19:09:41.176 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0003]: received 'identify_query' command with identify_query() args on cluster_id '3' tsn '1'
2025-04-17 19:09:41.177 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 41, 177058, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.Broadcast: 15>, address=<BroadcastAddress.ALL_ROUTERS_AND_COORDINATOR: 65532>), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=3, data=Serialized[b'\x11\x01\x01'], tx_options=<TransmitOptions.NONE: 0>, radius=9, non_member_radius=0, lqi=45, rssi=None)
2025-04-17 19:09:41.177 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Received ZCL frame: b'\x11\x01\x01'
2025-04-17 19:09:41.177 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x11>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=0, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=True, *is_general=False), tsn=1, command_id=1, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:41.177 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Decoded ZCL frame: Identify:identify_query()
2025-04-17 19:09:41.177 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Received command 0x01 (TSN 1): identify_query()
2025-04-17 19:09:41.177 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] No explicit handler for cluster command 0x01: identify_query()
2025-04-17 19:09:41.177 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0003]: received 'identify_query' command with identify_query() args on cluster_id '3' tsn '1'
2025-04-17 19:09:41.375 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x689F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=117, SecurityUse=<Bool.false: 0>, TimeStamp=540772, TSN=0, Data=b'\x18\x44\x0A\x05\x05\x21\xEA\x00', MacSrcAddr=0x689F, MsgResultRadius=29)
2025-04-17 19:09:41.375 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 41, 375580, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18D\n\x05\x05!\xea\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=117, rssi=None)
2025-04-17 19:09:41.375 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Received ZCL frame: b'\x18D\n\x05\x05!\xea\x00'
2025-04-17 19:09:41.376 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=68, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:41.376 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=234))])
2025-04-17 19:09:41.376 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Received command 0x0A (TSN 68): Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=234))])
2025-04-17 19:09:41.376 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Attribute report received: rms_voltage=234
2025-04-17 19:09:41.376 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[234]
2025-04-17 19:09:41.376 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=234, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:41.376 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:61:22:f9:ad:05-1-2820-rms_voltage', device_ieee=a4:c1:38:61:22:f9:ad:05, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:09:41.376 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lava_lampe_bleue_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:61:22:f9:ad:05-1-2820-rms_voltage', device_ieee=a4:c1:38:61:22:f9:ad:05, endpoint_id=1, group_id=None)
2025-04-17 19:09:42.980 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.ConcentratorInd.Callback(NWK=0x32B8, IEEE=28:68:47:ff:fe:56:9f:f8, PktCost=1)
2025-04-17 19:09:42.980 DEBUG (MainThread) [zigpy_znp.api] Command was not handled
2025-04-17 19:09:43.429 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:fb:20:a9:7a:66-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:09:43.430 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:fb:20:a9:7a:66-1-2820: polling for updated state
2025-04-17 19:09:43.430 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:fb:20:a9:7a:66-1-2820: polling current state
2025-04-17 19:09:43.430 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: async_update
2025-04-17 19:09:43.430 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:09:43.430 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=33, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:43.430 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:09:43.431 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 43, 431030, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D1E), dst_ep=1, source_route=None, extended_timeout=False, tsn=33, profile_id=260, cluster_id=2820, data=Serialized[b'\x00!\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:43.431 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x7D1E), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=33, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x21\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:09:43.449 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:43.449 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=33)
2025-04-17 19:09:43.470 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x7D1E, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=123, SecurityUse=<Bool.false: 0>, TimeStamp=671584, TSN=0, Data=b'\x18\x21\x01\x0B\x05\x00\x29\x19\x00\x08\x05\x00\x21\x6D\x00\x05\x05\x00\x21\xEA\x00', MacSrcAddr=0x7D1E, MsgResultRadius=29)
2025-04-17 19:09:43.470 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 43, 470232, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D1E), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18!\x01\x0b\x05\x00)\x19\x00\x08\x05\x00!m\x00\x05\x05\x00!\xea\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=123, rssi=None)
2025-04-17 19:09:43.470 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Received ZCL frame: b'\x18!\x01\x0b\x05\x00)\x19\x00\x08\x05\x00!m\x00\x05\x05\x00!\xea\x00'
2025-04-17 19:09:43.470 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=33, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:43.471 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=25)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=109)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=234))])
2025-04-17 19:09:43.471 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[25]
2025-04-17 19:09:43.471 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=25, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:43.471 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:fb:20:a9:7a:66-1-2820', device_ieee=a4:c1:38:fb:20:a9:7a:66, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:09:43.471 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lava_lampe_rouge_power: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:fb:20:a9:7a:66-1-2820', device_ieee=a4:c1:38:fb:20:a9:7a:66, endpoint_id=1, group_id=None)
2025-04-17 19:09:43.471 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[109]
2025-04-17 19:09:43.471 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=109, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:43.471 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[234]
2025-04-17 19:09:43.471 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=234, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:43.471 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: Got attributes: {'active_power': 25, 'rms_current': 109, 'rms_voltage': 234}
2025-04-17 19:09:43.723 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:f3:e0:79:d4:a0-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:09:43.723 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:f3:e0:79:d4:a0-1-1794-summation_delivered: polling for updated state
2025-04-17 19:09:43.723 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:f3:e0:79:d4:a0-1-1794-summation_delivered: polling current state
2025-04-17 19:09:43.723 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: async_update
2025-04-17 19:09:43.723 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:09:43.723 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=42, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:43.724 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:09:43.724 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 43, 724198, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), dst_ep=1, source_route=None, extended_timeout=False, tsn=42, profile_id=260, cluster_id=1794, data=Serialized[b'\x00*\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:43.724 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x7D24), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=42, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x2A\x00\x00\x00\x00\x02')
2025-04-17 19:09:43.746 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:43.746 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=42)
2025-04-17 19:09:43.772 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0x7D24, Relays=[])
2025-04-17 19:09:43.773 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0x7D24, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=129, SecurityUse=<Bool.false: 0>, TimeStamp=690390, TSN=0, Data=b'\x18\x2A\x01\x00\x00\x00\x25\x65\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x7D24, MsgResultRadius=29)
2025-04-17 19:09:43.773 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 43, 773241, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18*\x01\x00\x00\x00%e\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=129, rssi=None)
2025-04-17 19:09:43.773 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Received ZCL frame: b'\x18*\x01\x00\x00\x00%e\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:09:43.773 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=42, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:43.774 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=101)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:09:43.774 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[101]
2025-04-17 19:09:43.774 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=101, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:43.774 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:09:43.774 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:43.774 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: Got attributes: {'current_summ_delivered': 101, 'status': <bitmap8: 0>}
2025-04-17 19:09:44.133 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:61:22:f9:ad:05-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:09:44.133 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-2820: polling for updated state
2025-04-17 19:09:44.133 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-2820: polling current state
2025-04-17 19:09:44.133 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: async_update
2025-04-17 19:09:44.133 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:09:44.133 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=64, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:44.134 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:09:44.134 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 44, 134357, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), dst_ep=1, source_route=None, extended_timeout=False, tsn=64, profile_id=260, cluster_id=2820, data=Serialized[b'\x00@\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:44.134 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x689F), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=64, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x40\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:09:44.146 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:44.150 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=64)
2025-04-17 19:09:44.173 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x689F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=114, SecurityUse=<Bool.false: 0>, TimeStamp=715527, TSN=0, Data=b'\x18\x40\x01\x0B\x05\x00\x29\x00\x00\x08\x05\x00\x21\x00\x00\x05\x05\x00\x21\xEB\x00', MacSrcAddr=0x689F, MsgResultRadius=29)
2025-04-17 19:09:44.173 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 44, 173246, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18@\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xeb\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=114, rssi=None)
2025-04-17 19:09:44.173 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Received ZCL frame: b'\x18@\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xeb\x00'
2025-04-17 19:09:44.173 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=64, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:44.174 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=0)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=0)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=235))])
2025-04-17 19:09:44.174 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[0]
2025-04-17 19:09:44.174 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=0, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:44.174 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[0]
2025-04-17 19:09:44.174 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=0, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:44.174 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[235]
2025-04-17 19:09:44.174 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=235, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:44.174 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:61:22:f9:ad:05-1-2820-rms_voltage', device_ieee=a4:c1:38:61:22:f9:ad:05, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:09:44.174 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lava_lampe_bleue_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:61:22:f9:ad:05-1-2820-rms_voltage', device_ieee=a4:c1:38:61:22:f9:ad:05, endpoint_id=1, group_id=None)
2025-04-17 19:09:44.174 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: Got attributes: {'active_power': 0, 'rms_current': 0, 'rms_voltage': 235}
2025-04-17 19:09:44.506 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xB12F, Relays=[0x32B8])
2025-04-17 19:09:44.517 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0xB12F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=60, SecurityUse=<Bool.false: 0>, TimeStamp=737388, TSN=0, Data=b'\x08\xF4\x0A\x05\x05\x21\xEA\x00\x08\x05\x21\x00\x00\x0B\x05\x29\x00\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:09:44.517 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 44, 517806, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x08\xf4\n\x05\x05!\xea\x00\x08\x05!\x00\x00\x0b\x05)\x00\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=60, rssi=None)
2025-04-17 19:09:44.518 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Received ZCL frame: b'\x08\xf4\n\x05\x05!\xea\x00\x08\x05!\x00\x00\x0b\x05)\x00\x00'
2025-04-17 19:09:44.518 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=244, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:44.518 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=234)), Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=0)), Attribute(attrid=0x050B, value=TypeValue(type=int16s, value=0))])
2025-04-17 19:09:44.518 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Received command 0x0A (TSN 244): Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=234)), Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=0)), Attribute(attrid=0x050B, value=TypeValue(type=int16s, value=0))])
2025-04-17 19:09:44.519 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Attribute report received: rms_voltage=234, rms_current=0, active_power=0
2025-04-17 19:09:44.519 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[234]
2025-04-17 19:09:44.519 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=234, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:44.519 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:e7:5d:17:99:21-1-2820-rms_voltage', device_ieee=a4:c1:38:e7:5d:17:99:21, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:09:44.519 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.chambre_lampe_rouge_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:e7:5d:17:99:21-1-2820-rms_voltage', device_ieee=a4:c1:38:e7:5d:17:99:21, endpoint_id=1, group_id=None)
2025-04-17 19:09:44.519 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[0]
2025-04-17 19:09:44.519 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=0, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:44.519 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[0]
2025-04-17 19:09:44.519 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=0, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:44.519 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Sending reply header: ZCLHeader(frame_control=FrameControl<0x10>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=244, command_id=<GeneralCommand.Default_Response: 11>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:44.520 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Sending reply: Default_Response(command_id=10, status=<Status.SUCCESS: 0>)
2025-04-17 19:09:44.520 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 44, 520388, tzinfo=datetime.timezone.utc), priority=<PacketPriority.LOW: -1>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), dst_ep=1, source_route=None, extended_timeout=False, tsn=244, profile_id=260, cluster_id=2820, data=Serialized[b'\x10\xf4\x0b\n\x00'], tx_options=<TransmitOptions.ACK: 1>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:44.521 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xB12F), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=244, Options=<TransmitOptions.ACK_REQUEST|SUPPRESS_ROUTE_DISC_NETWORK: 48>, Radius=0, Data=b'\x10\xF4\x0B\x0A\x00')
2025-04-17 19:09:44.533 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:44.565 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=244)
2025-04-17 19:09:44.587 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0xB12F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=60, SecurityUse=<Bool.false: 0>, TimeStamp=741778, TSN=0, Data=b'\x08\xF5\x0A\x00\x00\x25\x04\x00\x00\x00\x00\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:09:44.587 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 44, 587371, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x08\xf5\n\x00\x00%\x04\x00\x00\x00\x00\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=60, rssi=None)
2025-04-17 19:09:44.587 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Received ZCL frame: b'\x08\xf5\n\x00\x00%\x04\x00\x00\x00\x00\x00'
2025-04-17 19:09:44.587 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=245, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:44.588 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Report_Attributes(attribute_reports=[Attribute(attrid=0x0000, value=TypeValue(type=uint48_t, value=4))])
2025-04-17 19:09:44.588 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Received command 0x0A (TSN 245): Report_Attributes(attribute_reports=[Attribute(attrid=0x0000, value=TypeValue(type=uint48_t, value=4))])
2025-04-17 19:09:44.588 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Attribute report received: current_summ_delivered=4
2025-04-17 19:09:44.588 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[4]
2025-04-17 19:09:44.588 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=4, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:44.588 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Sending reply header: ZCLHeader(frame_control=FrameControl<0x10>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=245, command_id=<GeneralCommand.Default_Response: 11>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:44.589 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Sending reply: Default_Response(command_id=10, status=<Status.SUCCESS: 0>)
2025-04-17 19:09:44.589 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 44, 589245, tzinfo=datetime.timezone.utc), priority=<PacketPriority.LOW: -1>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), dst_ep=1, source_route=None, extended_timeout=False, tsn=245, profile_id=260, cluster_id=1794, data=Serialized[b'\x10\xf5\x0b\n\x00'], tx_options=<TransmitOptions.ACK: 1>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:44.589 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xB12F), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=245, Options=<TransmitOptions.ACK_REQUEST|SUPPRESS_ROUTE_DISC_NETWORK: 48>, Radius=0, Data=b'\x10\xF5\x0B\x0A\x00')
2025-04-17 19:09:44.601 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:44.632 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=245)
2025-04-17 19:09:45.234 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=96, SecurityUse=<Bool.false: 0>, TimeStamp=781976, TSN=0, Data=b'\x18\x0D\x0A\x08\x05\x21\x42\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:09:45.234 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 45, 234953, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\r\n\x08\x05!B\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=96, rssi=None)
2025-04-17 19:09:45.235 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received ZCL frame: b'\x18\r\n\x08\x05!B\x00'
2025-04-17 19:09:45.235 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=13, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:45.235 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=66))])
2025-04-17 19:09:45.235 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received command 0x0A (TSN 13): Report_Attributes(attribute_reports=[Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=66))])
2025-04-17 19:09:45.236 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Attribute report received: rms_current=66
2025-04-17 19:09:45.236 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[66]
2025-04-17 19:09:45.236 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=66, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:45.466 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:e7:5d:17:99:21-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:09:45.466 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:e7:5d:17:99:21-1-2820: polling for updated state
2025-04-17 19:09:45.466 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:e7:5d:17:99:21-1-2820: polling current state
2025-04-17 19:09:45.466 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: async_update
2025-04-17 19:09:45.466 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:09:45.466 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=206, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:45.467 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:09:45.467 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 45, 467215, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), dst_ep=1, source_route=None, extended_timeout=False, tsn=206, profile_id=260, cluster_id=2820, data=Serialized[b'\x00\xce\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:45.467 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xB12F), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=206, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xCE\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:09:45.475 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:45.487 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=206)
2025-04-17 19:09:45.530 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0xB12F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=60, SecurityUse=<Bool.false: 0>, TimeStamp=800325, TSN=0, Data=b'\x18\xCE\x01\x0B\x05\x00\x29\x00\x00\x08\x05\x00\x21\x00\x00\x05\x05\x00\x21\xEB\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:09:45.530 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 45, 530322, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\xce\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xeb\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=60, rssi=None)
2025-04-17 19:09:45.530 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Received ZCL frame: b'\x18\xce\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xeb\x00'
2025-04-17 19:09:45.530 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=206, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:45.531 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=0)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=0)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=235))])
2025-04-17 19:09:45.531 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[0]
2025-04-17 19:09:45.531 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=0, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:45.531 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[0]
2025-04-17 19:09:45.531 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=0, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:45.531 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[235]
2025-04-17 19:09:45.531 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=235, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:45.531 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:e7:5d:17:99:21-1-2820-rms_voltage', device_ieee=a4:c1:38:e7:5d:17:99:21, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:09:45.531 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.chambre_lampe_rouge_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:e7:5d:17:99:21-1-2820-rms_voltage', device_ieee=a4:c1:38:e7:5d:17:99:21, endpoint_id=1, group_id=None)
2025-04-17 19:09:45.531 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: Got attributes: {'active_power': 0, 'rms_current': 0, 'rms_voltage': 235}
2025-04-17 19:09:46.796 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0x7D24, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=129, SecurityUse=<Bool.false: 0>, TimeStamp=878876, TSN=0, Data=b'\x18\x44\x0A\x00\x00\x25\x65\x00\x00\x00\x00\x00', MacSrcAddr=0x7D24, MsgResultRadius=29)
2025-04-17 19:09:46.797 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 46, 797067, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18D\n\x00\x00%e\x00\x00\x00\x00\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=129, rssi=None)
2025-04-17 19:09:46.797 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Received ZCL frame: b'\x18D\n\x00\x00%e\x00\x00\x00\x00\x00'
2025-04-17 19:09:46.797 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=68, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:46.797 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Report_Attributes(attribute_reports=[Attribute(attrid=0x0000, value=TypeValue(type=uint48_t, value=101))])
2025-04-17 19:09:46.798 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Received command 0x0A (TSN 68): Report_Attributes(attribute_reports=[Attribute(attrid=0x0000, value=TypeValue(type=uint48_t, value=101))])
2025-04-17 19:09:46.798 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Attribute report received: current_summ_delivered=101
2025-04-17 19:09:46.798 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[101]
2025-04-17 19:09:46.798 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=101, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:46.798 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0x7D24, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=126, SecurityUse=<Bool.false: 0>, TimeStamp=879070, TSN=0, Data=b'\x18\x45\x0A\x00\x02\x18\x00', MacSrcAddr=0x7D24, MsgResultRadius=29)
2025-04-17 19:09:46.798 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 46, 798922, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18E\n\x00\x02\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=126, rssi=None)
2025-04-17 19:09:46.799 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Received ZCL frame: b'\x18E\n\x00\x02\x18\x00'
2025-04-17 19:09:46.799 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=69, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:46.799 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Report_Attributes(attribute_reports=[Attribute(attrid=0x0200, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:09:46.799 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Received command 0x0A (TSN 69): Report_Attributes(attribute_reports=[Attribute(attrid=0x0200, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:09:46.800 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Attribute report received: status=<bitmap8: 0>
2025-04-17 19:09:46.800 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:09:46.800 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:47.280 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0xB12F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=909111, TSN=0, Data=b'\x18\xF6\x0A\x00\x00\x25\x04\x00\x00\x00\x00\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:09:47.280 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 47, 280557, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18\xf6\n\x00\x00%\x04\x00\x00\x00\x00\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:09:47.280 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Received ZCL frame: b'\x18\xf6\n\x00\x00%\x04\x00\x00\x00\x00\x00'
2025-04-17 19:09:47.281 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=246, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:47.281 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Report_Attributes(attribute_reports=[Attribute(attrid=0x0000, value=TypeValue(type=uint48_t, value=4))])
2025-04-17 19:09:47.281 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Received command 0x0A (TSN 246): Report_Attributes(attribute_reports=[Attribute(attrid=0x0000, value=TypeValue(type=uint48_t, value=4))])
2025-04-17 19:09:47.281 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Attribute report received: current_summ_delivered=4
2025-04-17 19:09:47.281 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[4]
2025-04-17 19:09:47.281 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=4, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:47.283 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0xB12F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=909540, TSN=0, Data=b'\x18\xF7\x0A\x00\x02\x18\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:09:47.283 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 47, 283668, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18\xf7\n\x00\x02\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:09:47.284 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Received ZCL frame: b'\x18\xf7\n\x00\x02\x18\x00'
2025-04-17 19:09:47.284 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=247, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:47.284 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Report_Attributes(attribute_reports=[Attribute(attrid=0x0200, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:09:47.284 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Received command 0x0A (TSN 247): Report_Attributes(attribute_reports=[Attribute(attrid=0x0200, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:09:47.284 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Attribute report received: status=<bitmap8: 0>
2025-04-17 19:09:47.284 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:09:47.284 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:47.814 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:f3:e0:79:d4:a0-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:09:47.814 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:f3:e0:79:d4:a0-1-2820: polling for updated state
2025-04-17 19:09:47.814 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:f3:e0:79:d4:a0-1-2820: polling current state
2025-04-17 19:09:47.815 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: async_update
2025-04-17 19:09:47.815 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:09:47.815 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=43, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:47.815 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:09:47.815 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 47, 815787, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), dst_ep=1, source_route=None, extended_timeout=False, tsn=43, profile_id=260, cluster_id=2820, data=Serialized[b'\x00+\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:47.816 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x7D24), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=43, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x2B\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:09:47.829 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:47.838 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=43)
2025-04-17 19:09:47.860 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x7D24, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=129, SecurityUse=<Bool.false: 0>, TimeStamp=946012, TSN=0, Data=b'\x18\x2B\x01\x0B\x05\x00\x29\x00\x00\x08\x05\x00\x21\x00\x00\x05\x05\x00\x21\xEB\x00', MacSrcAddr=0x7D24, MsgResultRadius=29)
2025-04-17 19:09:47.860 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 47, 860955, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18+\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xeb\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=129, rssi=None)
2025-04-17 19:09:47.861 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Received ZCL frame: b'\x18+\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xeb\x00'
2025-04-17 19:09:47.861 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=43, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:47.861 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=0)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=0)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=235))])
2025-04-17 19:09:47.861 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[0]
2025-04-17 19:09:47.862 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=0, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:47.862 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[0]
2025-04-17 19:09:47.862 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=0, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:47.862 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[235]
2025-04-17 19:09:47.862 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=235, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:47.862 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:f3:e0:79:d4:a0-1-2820-rms_voltage', device_ieee=a4:c1:38:f3:e0:79:d4:a0, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:09:47.862 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_guirlande_bleue_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:f3:e0:79:d4:a0-1-2820-rms_voltage', device_ieee=a4:c1:38:f3:e0:79:d4:a0, endpoint_id=1, group_id=None)
2025-04-17 19:09:47.862 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: Got attributes: {'active_power': 0, 'rms_current': 0, 'rms_voltage': 235}
2025-04-17 19:09:49.331 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:03:75:85:ed:14-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:09:49.331 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-2820: polling for updated state
2025-04-17 19:09:49.331 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-2820: polling current state
2025-04-17 19:09:49.331 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: async_update
2025-04-17 19:09:49.331 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:09:49.332 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=188, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:49.332 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:09:49.332 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 49, 332582, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), dst_ep=1, source_route=None, extended_timeout=False, tsn=188, profile_id=260, cluster_id=2820, data=Serialized[b'\x00\xbc\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:49.332 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x6CCC), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=188, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xBC\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:09:49.345 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:49.349 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=188)
2025-04-17 19:09:49.372 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=99, SecurityUse=<Bool.false: 0>, TimeStamp=1040483, TSN=0, Data=b'\x18\xBC\x01\x0B\x05\x00\x29\x08\x00\x08\x05\x00\x21\x42\x00\x05\x05\x00\x21\xEB\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:09:49.372 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 49, 372658, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\xbc\x01\x0b\x05\x00)\x08\x00\x08\x05\x00!B\x00\x05\x05\x00!\xeb\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=99, rssi=None)
2025-04-17 19:09:49.373 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received ZCL frame: b'\x18\xbc\x01\x0b\x05\x00)\x08\x00\x08\x05\x00!B\x00\x05\x05\x00!\xeb\x00'
2025-04-17 19:09:49.373 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=188, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:49.373 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=8)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=66)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=235))])
2025-04-17 19:09:49.373 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[8]
2025-04-17 19:09:49.373 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=8, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:49.373 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[66]
2025-04-17 19:09:49.373 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=66, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:49.374 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[235]
2025-04-17 19:09:49.374 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=235, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:49.374 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: Got attributes: {'active_power': 8, 'rms_current': 66, 'rms_voltage': 235}
2025-04-17 19:09:50.663 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x7D1E, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=123, SecurityUse=<Bool.false: 0>, TimeStamp=1121274, TSN=0, Data=b'\x18\xED\x0A\x08\x05\x21\x6E\x00', MacSrcAddr=0x7D1E, MsgResultRadius=29)
2025-04-17 19:09:50.663 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 50, 663610, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D1E), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\xed\n\x08\x05!n\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=123, rssi=None)
2025-04-17 19:09:50.663 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Received ZCL frame: b'\x18\xed\n\x08\x05!n\x00'
2025-04-17 19:09:50.664 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=237, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:50.664 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=110))])
2025-04-17 19:09:50.664 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Received command 0x0A (TSN 237): Report_Attributes(attribute_reports=[Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=110))])
2025-04-17 19:09:50.664 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Attribute report received: rms_current=110
2025-04-17 19:09:50.664 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[110]
2025-04-17 19:09:50.664 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=110, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:54.746 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:09:54.772 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:03:75:85:ed:14-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:09:54.772 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-2820: polling for updated state
2025-04-17 19:09:54.772 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-2820: polling current state
2025-04-17 19:09:54.772 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: async_update
2025-04-17 19:09:54.772 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:09:54.772 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=189, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:54.773 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:09:54.773 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 54, 773324, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), dst_ep=1, source_route=None, extended_timeout=False, tsn=189, profile_id=260, cluster_id=2820, data=Serialized[b'\x00\xbd\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:54.773 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x6CCC), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=189, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xBD\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:09:54.786 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:54.792 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=189)
2025-04-17 19:09:55.743 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:09:55.796 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=25, SrcAddr=0xA4A7, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=1442060, TSN=0, Data=b'\x01\x02\x01\x01\x7C\x11\xCD\x11\x47\x00\x00\x01\x00\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:09:55.796 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 55, 796983, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=25, data=Serialized[b'\x01\x02\x01\x01|\x11\xcd\x11G\x00\x00\x01\x00\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:09:55.797 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0019] Received ZCL frame: b'\x01\x02\x01\x01|\x11\xcd\x11G\x00\x00\x01\x00\x00'
2025-04-17 19:09:55.797 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0019] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x01>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=0, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=True, *is_general=False), tsn=2, command_id=1, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:55.797 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0019] Decoded ZCL frame: Ota:QueryNextImageCommand(field_control=<FieldControl.HardwareVersion: 1>, manufacturer_code=4476, image_type=4557, current_file_version=16777287, hardware_version=0)
2025-04-17 19:09:55.797 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0019] Received command 0x01 (TSN 2): QueryNextImageCommand(field_control=<FieldControl.HardwareVersion: 1>, manufacturer_code=4476, image_type=4557, current_file_version=16777287, hardware_version=0)
2025-04-17 19:09:55.798 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: cluster_handler[ota] attribute_updated - cluster[Ota] attr[current_file_version] value[16777287]
2025-04-17 19:09:55.798 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=2, attribute_name='current_file_version', attribute_value=16777287, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0019', cluster_id=25, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:55.798 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0019] Sending reply header: ZCLHeader(frame_control=FrameControl<0x19>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=False, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=True, *is_general=False), tsn=2, command_id=2, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:55.798 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0019] Sending reply: query_next_image_response(status=<Status.NO_IMAGE_AVAILABLE: 152>, manufacturer_code=None, image_type=None, file_version=None, image_size=None)
2025-04-17 19:09:55.798 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x02 request
2025-04-17 19:09:55.798 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 55, 798842, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), dst_ep=1, source_route=None, extended_timeout=True, tsn=2, profile_id=260, cluster_id=25, data=Serialized[b'\x19\x02\x02\x98'], tx_options=<TransmitOptions.ACK: 1>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:55.799 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xA4A7), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=25, TSN=2, Options=<TransmitOptions.ACK_REQUEST|SUPPRESS_ROUTE_DISC_NETWORK: 48>, Radius=0, Data=b'\x19\x02\x02\x98')
2025-04-17 19:09:55.810 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:56.759 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:09:56.810 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=2)
2025-04-17 19:09:57.377 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x689F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=114, SecurityUse=<Bool.false: 0>, TimeStamp=1540890, TSN=0, Data=b'\x18\x45\x0A\x05\x05\x21\xEC\x00', MacSrcAddr=0x689F, MsgResultRadius=29)
2025-04-17 19:09:57.377 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 57, 377470, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18E\n\x05\x05!\xec\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=114, rssi=None)
2025-04-17 19:09:57.377 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Received ZCL frame: b'\x18E\n\x05\x05!\xec\x00'
2025-04-17 19:09:57.377 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=69, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:57.378 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=236))])
2025-04-17 19:09:57.378 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Received command 0x0A (TSN 69): Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=236))])
2025-04-17 19:09:57.378 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Attribute report received: rms_voltage=236
2025-04-17 19:09:57.378 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[236]
2025-04-17 19:09:57.378 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=236, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:57.378 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:61:22:f9:ad:05-1-2820-rms_voltage', device_ieee=a4:c1:38:61:22:f9:ad:05, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:09:57.378 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lava_lampe_bleue_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:61:22:f9:ad:05-1-2820-rms_voltage', device_ieee=a4:c1:38:61:22:f9:ad:05, endpoint_id=1, group_id=None)
2025-04-17 19:09:57.417 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:55:8b:3b:3e:9b-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:09:57.417 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:55:8b:3b:3e:9b-1-1794-summation_delivered: polling for updated state
2025-04-17 19:09:57.417 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:55:8b:3b:3e:9b-1-1794-summation_delivered: polling current state
2025-04-17 19:09:57.417 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0702]: async_update
2025-04-17 19:09:57.417 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:09:57.417 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=213, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:57.418 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:09:57.418 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 57, 418449, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB6F6), dst_ep=1, source_route=None, extended_timeout=False, tsn=213, profile_id=260, cluster_id=1794, data=Serialized[b'\x00\xd5\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:57.418 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xB6F6), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=213, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xD5\x00\x00\x00\x00\x02')
2025-04-17 19:09:57.430 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:57.433 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=213)
2025-04-17 19:09:57.453 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xB6F6, Relays=[])
2025-04-17 19:09:57.469 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0xB6F6, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=42, SecurityUse=<Bool.false: 0>, TimeStamp=1546600, TSN=0, Data=b'\x18\xD5\x01\x00\x00\x00\x25\xCA\x01\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0xB6F6, MsgResultRadius=29)
2025-04-17 19:09:57.470 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 57, 470126, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB6F6), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18\xd5\x01\x00\x00\x00%\xca\x01\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=42, rssi=None)
2025-04-17 19:09:57.470 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0702] Received ZCL frame: b'\x18\xd5\x01\x00\x00\x00%\xca\x01\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:09:57.470 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=213, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:57.471 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=458)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:09:57.471 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[458]
2025-04-17 19:09:57.471 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=458, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:57.471 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:09:57.471 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:09:57.471 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0702]: Got attributes: {'current_summ_delivered': 458, 'status': <bitmap8: 0>}
2025-04-17 19:09:58.987 DEBUG (MainThread) [zigpy.application] Feeding watchdog
2025-04-17 19:09:58.988 DEBUG (MainThread) [zigpy_znp.api] Sending request: SYS.Ping.Req()
2025-04-17 19:09:58.992 DEBUG (MainThread) [zigpy_znp.api] Received command: SYS.Ping.Rsp(Capabilities=<MTCapabilities.SYS|AF|ZDO|UTIL|GP|APP_CNF: 1625>)
2025-04-17 19:09:59.392 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:55:8b:3b:3e:9b-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:09:59.392 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:55:8b:3b:3e:9b-1-2820: polling for updated state
2025-04-17 19:09:59.392 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:55:8b:3b:3e:9b-1-2820: polling current state
2025-04-17 19:09:59.392 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: async_update
2025-04-17 19:09:59.392 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:09:59.392 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=214, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:59.393 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:09:59.393 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 59, 393433, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB6F6), dst_ep=1, source_route=None, extended_timeout=False, tsn=214, profile_id=260, cluster_id=2820, data=Serialized[b'\x00\xd6\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:59.393 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xB6F6), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=214, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xD6\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:09:59.406 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:59.409 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=214)
2025-04-17 19:09:59.437 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0xB6F6, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=42, SecurityUse=<Bool.false: 0>, TimeStamp=1669569, TSN=0, Data=b'\x18\xD6\x01\x0B\x05\x00\x29\x00\x00\x08\x05\x00\x21\x00\x00\x05\x05\x00\x21\xEC\x00', MacSrcAddr=0xB6F6, MsgResultRadius=29)
2025-04-17 19:09:59.438 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 59, 438018, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB6F6), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\xd6\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=42, rssi=None)
2025-04-17 19:09:59.438 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Received ZCL frame: b'\x18\xd6\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'
2025-04-17 19:09:59.438 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=214, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:09:59.438 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=0)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=0)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=236))])
2025-04-17 19:09:59.439 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[0]
2025-04-17 19:09:59.439 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=0, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:59.439 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[0]
2025-04-17 19:09:59.439 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=0, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:59.439 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[236]
2025-04-17 19:09:59.439 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=236, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:09:59.439 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: Got attributes: {'active_power': 0, 'rms_current': 0, 'rms_voltage': 236}
2025-04-17 19:09:59.739 DEBUG (MainThread) [homeassistant.components.zha.websocket_api] Reconfiguring node with ieee_address: 6c:5c:b1:ff:fe:2c:3b:88
2025-04-17 19:09:59.740 DEBUG (MainThread) [zha.zigbee.device] [0xA4A7](RODRET Dimmer): started configuration
2025-04-17 19:09:59.740 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:ZDO](RODRET Dimmer): 'async_configure' stage succeeded
2025-04-17 19:09:59.740 DEBUG (MainThread) [zha.zigbee.device] [0xA4A7](RODRET Dimmer): applying quirks custom device configuration
2025-04-17 19:09:59.740 DEBUG (MainThread) [zha.application.discovery] Discovering entities for device: 6c:5c:b1:ff:fe:2c:3b:88-IKEA of Sweden RODRET Dimmer
2025-04-17 19:09:59.740 DEBUG (MainThread) [zha.application.discovery] Discovering entities for endpoint: 6c:5c:b1:ff:fe:2c:3b:88-1
2025-04-17 19:09:59.740 DEBUG (MainThread) [zha.application.discovery] 'update' platform -> 'FirmwareUpdateEntity' using ['ota']
2025-04-17 19:09:59.741 DEBUG (MainThread) [zha.application.discovery] Attempting to discover quirks v2 entities for device: 6c:5c:b1:ff:fe:2c:3b:88-IKEA of Sweden RODRET Dimmer
2025-04-17 19:09:59.741 DEBUG (MainThread) [zha.application.discovery] Device: 6c:5c:b1:ff:fe:2c:3b:88-IKEA of Sweden RODRET Dimmer is not a quirks v2 device - skipping discover_quirks_v2_entities
2025-04-17 19:09:59.741 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: Performing cluster binding
2025-04-17 19:09:59.742 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x19 request
2025-04-17 19:09:59.742 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 9, 59, 742152, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=0, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), dst_ep=0, source_route=None, extended_timeout=True, tsn=25, profile_id=0, cluster_id=<ZDOCmd.Bind_req: 0x0021>, data=Serialized[b'\x19\x88;,\xfe\xff\xb1\\l\x01\x01\x00\x03$\xf0\x8a/\x00K\x12\x00\x01'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:09:59.742 DEBUG (MainThread) [zigpy_znp.api] Sending request: ZDO.ExtRouteChk.Req(Dst=0xA4A7, RtStatus=<RouteStatus.ACTIVE: 1>, Options=<RouteOptions.MTO_ROUTE|NO_ROUTE_CACHE: 3>)
2025-04-17 19:09:59.742 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0003]: Configuring cluster attribute reporting
2025-04-17 19:09:59.742 DEBUG (MainThread) [zha] Emitting event zha_channel_configure_reporting with data ClusterConfigureReportingEvent(cluster_name='Identify', cluster_id=3, attributes={}, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0003', event_type='zha_channel_message', event='zha_channel_configure_reporting') (1 listeners)
2025-04-17 19:09:59.742 DEBUG (MainThread) [zha] (ZHADeviceProxy) handling event protocol for event: ClusterConfigureReportingEvent(cluster_name='Identify', cluster_id=3, attributes={}, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0003', event_type='zha_channel_message', event='zha_channel_configure_reporting')
2025-04-17 19:09:59.742 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0003]: finished cluster handler configuration
2025-04-17 19:09:59.742 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0000]: Configuring cluster attribute reporting
2025-04-17 19:09:59.742 DEBUG (MainThread) [zha] Emitting event zha_channel_configure_reporting with data ClusterConfigureReportingEvent(cluster_name='Basic', cluster_id=0, attributes={}, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0000', event_type='zha_channel_message', event='zha_channel_configure_reporting') (1 listeners)
2025-04-17 19:09:59.742 DEBUG (MainThread) [zha] (ZHADeviceProxy) handling event protocol for event: ClusterConfigureReportingEvent(cluster_name='Basic', cluster_id=0, attributes={}, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0000', event_type='zha_channel_message', event='zha_channel_configure_reporting')
2025-04-17 19:09:59.742 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0000]: finished cluster handler configuration
2025-04-17 19:09:59.742 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: Performing cluster binding
2025-04-17 19:09:59.743 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x1a request
2025-04-17 19:09:59.743 DEBUG (MainThread) [zigpy.device] Device concurrency (1) reached, delaying device request (0 enqueued)
2025-04-17 19:09:59.743 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x1000] Sending request header: ZCLHeader(frame_control=FrameControl<0x01>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=True, *is_general=False), tsn=27, command_id=65, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:09:59.743 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x1000] Sending request: get_group_identifiers(start_index=0)
2025-04-17 19:09:59.743 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x1b request
2025-04-17 19:09:59.743 DEBUG (MainThread) [zigpy.device] Device concurrency (1) reached, delaying device request (1 enqueued)
2025-04-17 19:09:59.743 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: finished cluster handler configuration
2025-04-17 19:09:59.743 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0008]: Performing cluster binding
2025-04-17 19:09:59.743 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x1c request
2025-04-17 19:09:59.743 DEBUG (MainThread) [zigpy.device] Device concurrency (1) reached, delaying device request (2 enqueued)
2025-04-17 19:09:59.744 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0006]: Performing cluster binding
2025-04-17 19:09:59.744 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x1d request
2025-04-17 19:09:59.744 DEBUG (MainThread) [zigpy.device] Device concurrency (1) reached, delaying device request (3 enqueued)
2025-04-17 19:09:59.744 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: finished cluster handler configuration
2025-04-17 19:09:59.751 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.ExtRouteChk.Rsp(Status=<RoutingStatus.SUCCESS: 0>)
2025-04-17 19:09:59.751 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xA4A7), DstEndpoint=0, DstPanId=0x0000, SrcEndpoint=0, ClusterId=33, TSN=25, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x19\x88\x3B\x2C\xFE\xFF\xB1\x5C\x6C\x01\x01\x00\x03\x24\xF0\x8A\x2F\x00\x4B\x12\x00\x01')
2025-04-17 19:09:59.764 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:09:59.794 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: failed to get attributes '['active_power', 'rms_current', 'rms_voltage']' on 'electrical_measurement' cluster: 
2025-04-17 19:10:00.236 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=99, SecurityUse=<Bool.false: 0>, TimeStamp=1719592, TSN=0, Data=b'\x18\x0E\x0A\x08\x05\x21\x3F\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:10:00.237 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 0, 237606, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\x0e\n\x08\x05!?\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=99, rssi=None)
2025-04-17 19:10:00.238 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received ZCL frame: b'\x18\x0e\n\x08\x05!?\x00'
2025-04-17 19:10:00.238 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=14, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:00.238 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=63))])
2025-04-17 19:10:00.238 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received command 0x0A (TSN 14): Report_Attributes(attribute_reports=[Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=63))])
2025-04-17 19:10:00.238 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Attribute report received: rms_current=63
2025-04-17 19:10:00.238 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[63]
2025-04-17 19:10:00.238 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=63, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:00.584 DEBUG (MainThread) [zha.decorators] [<Task pending name='global-updater_GlobalUpdater' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.helpers::GlobalUpdater.update_listeners]
2025-04-17 19:10:00.584 DEBUG (MainThread) [zha.application.helpers] Global updater interval starting
2025-04-17 19:10:00.584 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.584 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-0-rssi: polling for updated state
2025-04-17 19:10:00.584 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.584 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-0-lqi: polling for updated state
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:f3:e0:79:d4:a0-1-0-rssi: polling for updated state
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:f3:e0:79:d4:a0-1-0-lqi: polling for updated state
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:f3:e0:79:d4:a0-1-0-lqi', device_ieee=a4:c1:38:f3:e0:79:d4:a0, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:00.585 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_guirlande_bleue_lqi: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:f3:e0:79:d4:a0-1-0-lqi', device_ieee=a4:c1:38:f3:e0:79:d4:a0, endpoint_id=1, group_id=None)
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-0-rssi: polling for updated state
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-0-lqi: polling for updated state
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:fb:20:a9:7a:66-1-0-rssi: polling for updated state
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:fb:20:a9:7a:66-1-0-lqi: polling for updated state
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:fb:20:a9:7a:66-1-0-lqi', device_ieee=a4:c1:38:fb:20:a9:7a:66, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:00.585 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lava_lampe_rouge_lqi: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:fb:20:a9:7a:66-1-0-lqi', device_ieee=a4:c1:38:fb:20:a9:7a:66, endpoint_id=1, group_id=None)
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:55:8b:3b:3e:9b-1-0-rssi: polling for updated state
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:55:8b:3b:3e:9b-1-0-lqi: polling for updated state
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:55:8b:3b:3e:9b-1-0-lqi', device_ieee=a4:c1:38:55:8b:3b:3e:9b, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:00.585 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lampe_rouge_lqi: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:55:8b:3b:3e:9b-1-0-lqi', device_ieee=a4:c1:38:55:8b:3b:3e:9b, endpoint_id=1, group_id=None)
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.platforms] d4:48:67:ff:fe:60:83:04-1-0-rssi: polling for updated state
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.platforms] d4:48:67:ff:fe:60:83:04-1-0-lqi: polling for updated state
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.platforms] d4:48:67:ff:fe:2a:a6:61-1-0-rssi: polling for updated state
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.platforms] d4:48:67:ff:fe:2a:a6:61-1-0-lqi: polling for updated state
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.585 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:e7:5d:17:99:21-1-0-rssi: polling for updated state
2025-04-17 19:10:00.586 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.586 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:e7:5d:17:99:21-1-0-lqi: polling for updated state
2025-04-17 19:10:00.586 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:e7:5d:17:99:21-1-0-lqi', device_ieee=a4:c1:38:e7:5d:17:99:21, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:00.586 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.chambre_lampe_rouge_lqi: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:e7:5d:17:99:21-1-0-lqi', device_ieee=a4:c1:38:e7:5d:17:99:21, endpoint_id=1, group_id=None)
2025-04-17 19:10:00.586 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.586 DEBUG (MainThread) [zha.application.platforms] 44:e2:f8:ff:fe:09:32:3f-1-0-lqi: polling for updated state
2025-04-17 19:10:00.586 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.586 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1-0-rssi: polling for updated state
2025-04-17 19:10:00.586 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:00.586 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1-0-lqi: polling for updated state
2025-04-17 19:10:00.586 DEBUG (MainThread) [zha.application.helpers] Global updater interval finished
2025-04-17 19:10:00.666 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=0, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=93, SecurityUse=<Bool.false: 0>, TimeStamp=1746737, TSN=0, Data=b'\x08\x0F\x0A\x01\x00\x20\x4E\xE2\xFF\x20\x38\xE4\xFF\x20\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:10:00.666 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 0, 666838, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=0, data=Serialized[b'\x08\x0f\n\x01\x00 N\xe2\xff 8\xe4\xff \x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=93, rssi=None)
2025-04-17 19:10:00.667 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0000] Received ZCL frame: b'\x08\x0f\n\x01\x00 N\xe2\xff 8\xe4\xff \x00'
2025-04-17 19:10:00.667 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0000] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=15, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:00.667 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0000] Decoded ZCL frame: Basic:Report_Attributes(attribute_reports=[Attribute(attrid=0x0001, value=TypeValue(type=uint8_t, value=78)), Attribute(attrid=0xFFE2, value=TypeValue(type=uint8_t, value=56)), Attribute(attrid=0xFFE4, value=TypeValue(type=uint8_t, value=0))])
2025-04-17 19:10:00.667 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0000] Received command 0x0A (TSN 15): Report_Attributes(attribute_reports=[Attribute(attrid=0x0001, value=TypeValue(type=uint8_t, value=78)), Attribute(attrid=0xFFE2, value=TypeValue(type=uint8_t, value=56)), Attribute(attrid=0xFFE4, value=TypeValue(type=uint8_t, value=0))])
2025-04-17 19:10:00.668 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0000] Attribute report received: app_version=78, 0xFFE2=56, 0xFFE4=0
2025-04-17 19:10:00.668 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0000]: cluster_handler[basic] attribute_updated - cluster[Basic] attr[app_version] value[78]
2025-04-17 19:10:00.668 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1, attribute_name='app_version', attribute_value=78, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0000', cluster_id=0, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (2 listeners)
2025-04-17 19:10:00.668 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:03:75:85:ed:14-1-0-lqi', device_ieee=a4:c1:38:03:75:85:ed:14, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:00.668 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lampe_tv_lqi: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:03:75:85:ed:14-1-0-lqi', device_ieee=a4:c1:38:03:75:85:ed:14, endpoint_id=1, group_id=None)
2025-04-17 19:10:00.668 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0000]: cluster_handler[basic] attribute_updated - cluster[Basic] attr[65506] value[56]
2025-04-17 19:10:00.668 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=65506, attribute_name=65506, attribute_value=56, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0000', cluster_id=0, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (2 listeners)
2025-04-17 19:10:00.668 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0000]: cluster_handler[basic] attribute_updated - cluster[Basic] attr[65508] value[0]
2025-04-17 19:10:00.668 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=65508, attribute_name=65508, attribute_value=0, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0000', cluster_id=0, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (2 listeners)
2025-04-17 19:10:00.668 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0000] Sending reply header: ZCLHeader(frame_control=FrameControl<0x10>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=15, command_id=<GeneralCommand.Default_Response: 11>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:00.669 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0000] Sending reply: Default_Response(command_id=10, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:00.669 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 0, 669276, tzinfo=datetime.timezone.utc), priority=<PacketPriority.LOW: -1>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), dst_ep=1, source_route=None, extended_timeout=False, tsn=15, profile_id=260, cluster_id=0, data=Serialized[b'\x10\x0f\x0b\n\x00'], tx_options=<TransmitOptions.ACK: 1>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:00.670 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x6CCC), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=0, TSN=15, Options=<TransmitOptions.ACK_REQUEST|SUPPRESS_ROUTE_DISC_NETWORK: 48>, Radius=0, Data=b'\x10\x0F\x0B\x0A\x00')
2025-04-17 19:10:00.682 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:00.698 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=15)
2025-04-17 19:10:04.199 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:03:75:85:ed:14-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:04.199 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-1794-summation_delivered: polling for updated state
2025-04-17 19:10:04.199 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-1794-summation_delivered: polling current state
2025-04-17 19:10:04.199 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: async_update
2025-04-17 19:10:04.199 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:10:04.199 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=190, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:04.199 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:10:04.200 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 4, 200115, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), dst_ep=1, source_route=None, extended_timeout=False, tsn=190, profile_id=260, cluster_id=1794, data=Serialized[b'\x00\xbe\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:04.200 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x6CCC), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=190, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xBE\x00\x00\x00\x00\x02')
2025-04-17 19:10:04.212 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:04.216 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=190)
2025-04-17 19:10:04.239 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=96, SecurityUse=<Bool.false: 0>, TimeStamp=1969675, TSN=0, Data=b'\x18\xBE\x01\x00\x00\x00\x25\x1D\x04\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:10:04.239 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 4, 239362, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18\xbe\x01\x00\x00\x00%\x1d\x04\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=96, rssi=None)
2025-04-17 19:10:04.239 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Received ZCL frame: b'\x18\xbe\x01\x00\x00\x00%\x1d\x04\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:10:04.239 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=190, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:04.240 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=1053)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:10:04.240 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[1053]
2025-04-17 19:10:04.240 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=1053, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:04.240 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:10:04.240 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:04.240 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: Got attributes: {'current_summ_delivered': 1053, 'status': <bitmap8: 0>}
2025-04-17 19:10:05.449 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:10:05.498 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.BindRsp.Callback(Src=0xA4A7, Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:05.498 DEBUG (MainThread) [zigpy_znp.api] Command was not handled
2025-04-17 19:10:05.498 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.MsgCbIncoming.Callback(Src=0xA4A7, IsBroadcast=<Bool.false: 0>, ClusterId=32801, SecurityUse=0, TSN=25, MacDst=0x0000, Data=b'\x00')
2025-04-17 19:10:05.498 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 5, 498617, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=0, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=0, source_route=None, extended_timeout=False, tsn=25, profile_id=0, cluster_id=32801, data=Serialized[b'\x19\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:05.498 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: bound 'power' cluster: Status.SUCCESS
2025-04-17 19:10:05.499 DEBUG (MainThread) [zha] Emitting event zha_channel_bind with data ClusterBindEvent(cluster_name='Power Configuration', cluster_id=1, success=True, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0001', event_type='zha_channel_message', event='zha_channel_bind') (1 listeners)
2025-04-17 19:10:05.499 DEBUG (MainThread) [zha] (ZHADeviceProxy) handling event protocol for event: ClusterBindEvent(cluster_name='Power Configuration', cluster_id=1, success=True, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0001', event_type='zha_channel_message', event='zha_channel_bind')
2025-04-17 19:10:05.499 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: Configuring cluster attribute reporting
2025-04-17 19:10:05.499 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0001] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=30, command_id=<GeneralCommand.Configure_Reporting: 6>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:05.499 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0001] Sending request: Configure_Reporting(config_records=[AttributeReportingConfig(direction=0, attrid=0x0020, datatype=<DataTypeId.uint8: 32>, min_interval=3600, max_interval=10800, reportable_change=1), AttributeReportingConfig(direction=0, attrid=0x0021, datatype=<DataTypeId.uint8: 32>, min_interval=3600, max_interval=10800, reportable_change=1)])
2025-04-17 19:10:05.499 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x1e request
2025-04-17 19:10:05.499 DEBUG (MainThread) [zigpy.device] Device concurrency (1) reached, delaying device request (4 enqueued)
2025-04-17 19:10:05.499 DEBUG (MainThread) [zigpy.device] Previously delayed device request is now running, delayed by 5.76s
2025-04-17 19:10:05.499 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 5, 499958, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=0, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), dst_ep=0, source_route=None, extended_timeout=True, tsn=26, profile_id=0, cluster_id=<ZDOCmd.Bind_req: 0x0021>, data=Serialized[b'\x1a\x88;,\xfe\xff\xb1\\l\x01 \x00\x03$\xf0\x8a/\x00K\x12\x00\x01'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:05.500 DEBUG (MainThread) [zigpy_znp.api] Sending request: ZDO.ExtRouteChk.Req(Dst=0xA4A7, RtStatus=<RouteStatus.ACTIVE: 1>, Options=<RouteOptions.MTO_ROUTE|NO_ROUTE_CACHE: 3>)
2025-04-17 19:10:05.504 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.ExtRouteChk.Rsp(Status=<RoutingStatus.SUCCESS: 0>)
2025-04-17 19:10:05.505 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xA4A7), DstEndpoint=0, DstPanId=0x0000, SrcEndpoint=0, ClusterId=33, TSN=26, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x1A\x88\x3B\x2C\xFE\xFF\xB1\x5C\x6C\x01\x20\x00\x03\x24\xF0\x8A\x2F\x00\x4B\x12\x00\x01')
2025-04-17 19:10:05.517 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:06.446 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:10:06.495 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.BindRsp.Callback(Src=0xA4A7, Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:06.495 DEBUG (MainThread) [zigpy_znp.api] Command was not handled
2025-04-17 19:10:06.495 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.MsgCbIncoming.Callback(Src=0xA4A7, IsBroadcast=<Bool.false: 0>, ClusterId=32801, SecurityUse=0, TSN=26, MacDst=0x0000, Data=b'\x00')
2025-04-17 19:10:06.495 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 6, 495595, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=0, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=0, source_route=None, extended_timeout=False, tsn=26, profile_id=0, cluster_id=32801, data=Serialized[b'\x1a\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:06.495 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: bound 'poll_control' cluster: Status.SUCCESS
2025-04-17 19:10:06.496 DEBUG (MainThread) [zha] Emitting event zha_channel_bind with data ClusterBindEvent(cluster_name='Poll Control', cluster_id=32, success=True, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0020', event_type='zha_channel_message', event='zha_channel_bind') (1 listeners)
2025-04-17 19:10:06.496 DEBUG (MainThread) [zha] (ZHADeviceProxy) handling event protocol for event: ClusterBindEvent(cluster_name='Poll Control', cluster_id=32, success=True, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0020', event_type='zha_channel_message', event='zha_channel_bind')
2025-04-17 19:10:06.496 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: Configuring cluster attribute reporting
2025-04-17 19:10:06.496 DEBUG (MainThread) [zha] Emitting event zha_channel_configure_reporting with data ClusterConfigureReportingEvent(cluster_name='Poll Control', cluster_id=32, attributes={}, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0020', event_type='zha_channel_message', event='zha_channel_configure_reporting') (1 listeners)
2025-04-17 19:10:06.496 DEBUG (MainThread) [zha] (ZHADeviceProxy) handling event protocol for event: ClusterConfigureReportingEvent(cluster_name='Poll Control', cluster_id=32, attributes={}, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0020', event_type='zha_channel_message', event='zha_channel_configure_reporting')
2025-04-17 19:10:06.496 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: Performing cluster handler specific configuration
2025-04-17 19:10:06.496 DEBUG (MainThread) [zigpy.util] Tries remaining: 3
2025-04-17 19:10:06.496 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0020] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=31, command_id=<GeneralCommand.Write_Attributes: 2>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:06.496 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0020] Sending request: Write_Attributes(attributes=[Attribute(attrid=0x0000, value=TypeValue(type=uint32_t, value=13200))])
2025-04-17 19:10:06.497 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x1f request
2025-04-17 19:10:06.497 DEBUG (MainThread) [zigpy.device] Device concurrency (1) reached, delaying device request (4 enqueued)
2025-04-17 19:10:06.497 DEBUG (MainThread) [zigpy.device] Previously delayed device request is now running, delayed by 6.75s
2025-04-17 19:10:06.497 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 6, 497146, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), dst_ep=1, source_route=None, extended_timeout=True, tsn=27, profile_id=260, cluster_id=4096, data=Serialized[b'\x01\x1bA\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:06.497 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xA4A7), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=4096, TSN=27, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x01\x1B\x41\x00')
2025-04-17 19:10:06.508 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:06.513 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=27)
2025-04-17 19:10:07.450 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:10:07.508 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=4096, SrcAddr=0xA4A7, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=63, SecurityUse=<Bool.false: 0>, TimeStamp=2174068, TSN=0, Data=b'\x19\x1B\x41\x01\x00\x01\x83\x6B\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:10:07.508 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 7, 508562, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=4096, data=Serialized[b'\x19\x1bA\x01\x00\x01\x83k\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=63, rssi=None)
2025-04-17 19:10:07.508 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x1000] Received ZCL frame: b'\x19\x1bA\x01\x00\x01\x83k\x00'
2025-04-17 19:10:07.509 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x1000] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x19>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=True, *is_general=False), tsn=27, command_id=65, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:07.509 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x1000] Decoded ZCL frame: LightLink:get_group_identifiers_rsp(total=1, start_index=0, group_info_records=[GroupInfoRecord(group_id=0x6B83, group_type=0)])
2025-04-17 19:10:07.509 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x1000]: Adding coordinator to 0x6b83 group id
2025-04-17 19:10:07.509 DEBUG (MainThread) [zigpy.endpoint] [0x0000:2] Cannot add 0x6b83 group, no groups cluster
2025-04-17 19:10:07.509 DEBUG (MainThread) [zigpy.endpoint] [0x0000:1] Cannot add 0x6b83 group, no groups cluster
2025-04-17 19:10:07.509 DEBUG (MainThread) [zigpy.device] Previously delayed device request is now running, delayed by 7.77s
2025-04-17 19:10:07.509 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 7, 509815, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=0, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), dst_ep=0, source_route=None, extended_timeout=True, tsn=28, profile_id=0, cluster_id=<ZDOCmd.Bind_req: 0x0021>, data=Serialized[b'\x1c\x88;,\xfe\xff\xb1\\l\x01\x08\x00\x03$\xf0\x8a/\x00K\x12\x00\x01'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:07.509 DEBUG (MainThread) [zigpy_znp.api] Sending request: ZDO.ExtRouteChk.Req(Dst=0xA4A7, RtStatus=<RouteStatus.ACTIVE: 1>, Options=<RouteOptions.MTO_ROUTE|NO_ROUTE_CACHE: 3>)
2025-04-17 19:10:07.514 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.ExtRouteChk.Rsp(Status=<RoutingStatus.SUCCESS: 0>)
2025-04-17 19:10:07.514 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xA4A7), DstEndpoint=0, DstPanId=0x0000, SrcEndpoint=0, ClusterId=33, TSN=28, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x1C\x88\x3B\x2C\xFE\xFF\xB1\x5C\x6C\x01\x08\x00\x03\x24\xF0\x8A\x2F\x00\x4B\x12\x00\x01')
2025-04-17 19:10:07.527 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:08.464 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:10:08.512 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.BindRsp.Callback(Src=0xA4A7, Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:08.512 DEBUG (MainThread) [zigpy_znp.api] Command was not handled
2025-04-17 19:10:08.513 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.MsgCbIncoming.Callback(Src=0xA4A7, IsBroadcast=<Bool.false: 0>, ClusterId=32801, SecurityUse=0, TSN=28, MacDst=0x0000, Data=b'\x00')
2025-04-17 19:10:08.513 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 8, 513166, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=0, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=0, source_route=None, extended_timeout=False, tsn=28, profile_id=0, cluster_id=32801, data=Serialized[b'\x1c\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:08.513 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0008]: bound 'level' cluster: Status.SUCCESS
2025-04-17 19:10:08.513 DEBUG (MainThread) [zha] Emitting event zha_channel_bind with data ClusterBindEvent(cluster_name='Level control', cluster_id=8, success=True, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0008', event_type='zha_channel_message', event='zha_channel_bind') (1 listeners)
2025-04-17 19:10:08.513 DEBUG (MainThread) [zha] (ZHADeviceProxy) handling event protocol for event: ClusterBindEvent(cluster_name='Level control', cluster_id=8, success=True, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0008', event_type='zha_channel_message', event='zha_channel_bind')
2025-04-17 19:10:08.513 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0008]: finished cluster handler configuration
2025-04-17 19:10:08.513 DEBUG (MainThread) [zigpy.device] Previously delayed device request is now running, delayed by 8.77s
2025-04-17 19:10:08.513 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 8, 513745, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=0, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), dst_ep=0, source_route=None, extended_timeout=True, tsn=29, profile_id=0, cluster_id=<ZDOCmd.Bind_req: 0x0021>, data=Serialized[b'\x1d\x88;,\xfe\xff\xb1\\l\x01\x06\x00\x03$\xf0\x8a/\x00K\x12\x00\x01'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:08.513 DEBUG (MainThread) [zigpy_znp.api] Sending request: ZDO.ExtRouteChk.Req(Dst=0xA4A7, RtStatus=<RouteStatus.ACTIVE: 1>, Options=<RouteOptions.MTO_ROUTE|NO_ROUTE_CACHE: 3>)
2025-04-17 19:10:08.518 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.ExtRouteChk.Rsp(Status=<RoutingStatus.SUCCESS: 0>)
2025-04-17 19:10:08.518 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xA4A7), DstEndpoint=0, DstPanId=0x0000, SrcEndpoint=0, ClusterId=33, TSN=29, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x1D\x88\x3B\x2C\xFE\xFF\xB1\x5C\x6C\x01\x06\x00\x03\x24\xF0\x8A\x2F\x00\x4B\x12\x00\x01')
2025-04-17 19:10:08.531 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:09.467 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:10:09.518 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.BindRsp.Callback(Src=0xA4A7, Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:09.518 DEBUG (MainThread) [zigpy_znp.api] Command was not handled
2025-04-17 19:10:09.518 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.MsgCbIncoming.Callback(Src=0xA4A7, IsBroadcast=<Bool.false: 0>, ClusterId=32801, SecurityUse=0, TSN=29, MacDst=0x0000, Data=b'\x00')
2025-04-17 19:10:09.518 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 9, 518639, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=0, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=0, source_route=None, extended_timeout=False, tsn=29, profile_id=0, cluster_id=32801, data=Serialized[b'\x1d\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:09.518 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0006]: bound 'on_off' cluster: Status.SUCCESS
2025-04-17 19:10:09.519 DEBUG (MainThread) [zha] Emitting event zha_channel_bind with data ClusterBindEvent(cluster_name='On/Off', cluster_id=6, success=True, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0006', event_type='zha_channel_message', event='zha_channel_bind') (1 listeners)
2025-04-17 19:10:09.519 DEBUG (MainThread) [zha] (ZHADeviceProxy) handling event protocol for event: ClusterBindEvent(cluster_name='On/Off', cluster_id=6, success=True, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0006', event_type='zha_channel_message', event='zha_channel_bind')
2025-04-17 19:10:09.519 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0006]: finished cluster handler configuration
2025-04-17 19:10:09.519 DEBUG (MainThread) [zigpy.device] Previously delayed device request is now running, delayed by 4.02s
2025-04-17 19:10:09.519 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 9, 519262, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), dst_ep=1, source_route=None, extended_timeout=True, tsn=30, profile_id=260, cluster_id=1, data=Serialized[b'\x00\x1e\x06\x00 \x00 \x10\x0e0*\x01\x00!\x00 \x10\x0e0*\x01'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:09.519 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xA4A7), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1, TSN=30, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x1E\x06\x00\x20\x00\x20\x10\x0E\x30\x2A\x01\x00\x21\x00\x20\x10\x0E\x30\x2A\x01')
2025-04-17 19:10:09.532 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:09.536 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=30)
2025-04-17 19:10:09.559 DEBUG (MainThread) [zha.decorators] [<Task pending name='device-availability-checker_DeviceAvailabilityChecker' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.helpers::DeviceAvailabilityChecker.check_device_availability]
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.application.helpers] Device availability checker interval starting
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.application.helpers] Checking device availability
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0x6CCC](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0x6CCC](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0x7D24](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0x7D24](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0x689F](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0x689F](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0x7D1E](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0x7D1E](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0xB6F6](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0xB6F6](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0x579D](ZBMINIL2): Device seen - marking the device available and resetting counter
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0x579D](ZBMINIL2): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0x7012](SNZB-02P): Device seen - marking the device available and resetting counter
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0x7012](SNZB-02P): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0xB12F](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0xB12F](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0x45AF](ZBMINIL2): Device seen - marking the device available and resetting counter
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0x45AF](ZBMINIL2): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0xEAC6](SNZB-02P): last_seen is 83132.76351451874 seconds ago and ping attempts have been exhausted, marking the device unavailable
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0xEAC6](SNZB-02P): Update device availability -  device available: False - new availability: False - changed: False
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0x32B8](TRADFRI Driver 30W): Device seen - marking the device available and resetting counter
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0x32B8](TRADFRI Driver 30W): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0xA4A7](RODRET Dimmer): Device seen - marking the device available and resetting counter
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.zigbee.device] [0xA4A7](RODRET Dimmer): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:09.560 DEBUG (MainThread) [zha.application.helpers] Device availability checker interval finished
2025-04-17 19:10:09.810 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:e7:5d:17:99:21-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:09.810 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:e7:5d:17:99:21-1-1794-summation_delivered: polling for updated state
2025-04-17 19:10:09.810 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:e7:5d:17:99:21-1-1794-summation_delivered: polling current state
2025-04-17 19:10:09.810 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: async_update
2025-04-17 19:10:09.810 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:10:09.810 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=207, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:09.811 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:10:09.811 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 9, 811293, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), dst_ep=1, source_route=None, extended_timeout=False, tsn=207, profile_id=260, cluster_id=1794, data=Serialized[b'\x00\xcf\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:09.811 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xB12F), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=207, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xCF\x00\x00\x00\x00\x02')
2025-04-17 19:10:09.823 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:09.830 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=207)
2025-04-17 19:10:09.871 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0xB12F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=63, SecurityUse=<Bool.false: 0>, TimeStamp=2321666, TSN=0, Data=b'\x18\xCF\x01\x00\x00\x00\x25\x04\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:10:09.871 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 9, 871220, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18\xcf\x01\x00\x00\x00%\x04\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=63, rssi=None)
2025-04-17 19:10:09.871 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Received ZCL frame: b'\x18\xcf\x01\x00\x00\x00%\x04\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:10:09.871 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=207, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:09.872 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=4)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:10:09.872 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[4]
2025-04-17 19:10:09.872 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=4, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:09.872 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:10:09.872 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:09.872 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: Got attributes: {'current_summ_delivered': 4, 'status': <bitmap8: 0>}
2025-04-17 19:10:09.898 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x6B83, ClusterId=6, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=63, SecurityUse=<Bool.false: 0>, TimeStamp=2323494, TSN=0, Data=b'\x00\x56\x00\x00\x00', MacSrcAddr=0x32B8, MsgResultRadius=11)
2025-04-17 19:10:09.898 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 9, 898495, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.Group: 1>, address=0x6B83), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=6, data=Serialized[b'\x00V\x00\x00\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=11, non_member_radius=0, lqi=63, rssi=None)
2025-04-17 19:10:09.898 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Received ZCL frame: b'\x00V\x00\x00\x00'
2025-04-17 19:10:09.898 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=86, command_id=0, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:09.899 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Decoded ZCL frame: OnOff:Read_Attributes(attribute_ids=[0])
2025-04-17 19:10:09.899 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Received command 0x00 (TSN 86): Read_Attributes(attribute_ids=[0])
2025-04-17 19:10:09.899 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Sending reply header: ZCLHeader(frame_control=FrameControl<0x10>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=86, command_id=<GeneralCommand.Read_Attributes_rsp: 1>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:09.899 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Sending reply: Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.UNSUPPORTED_ATTRIBUTE: 134>, value=None)])
2025-04-17 19:10:09.900 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 9, 900093, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=86, profile_id=260, cluster_id=6, data=Serialized[b'\x10V\x01\x00\x00\x86'], tx_options=<TransmitOptions.ACK: 1>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:09.900 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=6, TSN=86, Options=<TransmitOptions.ACK_REQUEST|SUPPRESS_ROUTE_DISC_NETWORK: 48>, Radius=0, Data=b'\x10\x56\x01\x00\x00\x86')
2025-04-17 19:10:09.927 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:09.952 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=86)
2025-04-17 19:10:10.040 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:61:22:f9:ad:05-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:10.040 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-1794-summation_delivered: polling for updated state
2025-04-17 19:10:10.040 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-1794-summation_delivered: polling current state
2025-04-17 19:10:10.040 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: async_update
2025-04-17 19:10:10.040 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:10:10.041 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=65, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:10.041 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:10:10.041 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 10, 41630, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), dst_ep=1, source_route=None, extended_timeout=False, tsn=65, profile_id=260, cluster_id=1794, data=Serialized[b'\x00A\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:10.041 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x689F), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=65, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x41\x00\x00\x00\x00\x02')
2025-04-17 19:10:10.053 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:10.058 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=65)
2025-04-17 19:10:10.075 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0x689F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=114, SecurityUse=<Bool.false: 0>, TimeStamp=2334767, TSN=0, Data=b'\x18\x41\x01\x00\x00\x00\x25\xC7\x02\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x689F, MsgResultRadius=29)
2025-04-17 19:10:10.075 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 10, 75852, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18A\x01\x00\x00\x00%\xc7\x02\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=114, rssi=None)
2025-04-17 19:10:10.076 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Received ZCL frame: b'\x18A\x01\x00\x00\x00%\xc7\x02\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:10:10.076 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=65, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:10.076 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=711)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:10:10.076 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[711]
2025-04-17 19:10:10.076 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=711, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:10.077 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:10:10.077 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:10.077 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: Got attributes: {'current_summ_delivered': 711, 'status': <bitmap8: 0>}
2025-04-17 19:10:11.130 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=0, SrcAddr=0x689F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=111, SecurityUse=<Bool.false: 0>, TimeStamp=2400736, TSN=0, Data=b'\x08\x46\x0A\x01\x00\x20\x50\xE2\xFF\x20\x38\xE4\xFF\x20\x00', MacSrcAddr=0x689F, MsgResultRadius=29)
2025-04-17 19:10:11.130 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 11, 130817, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=0, data=Serialized[b'\x08F\n\x01\x00 P\xe2\xff 8\xe4\xff \x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=111, rssi=None)
2025-04-17 19:10:11.131 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0000] Received ZCL frame: b'\x08F\n\x01\x00 P\xe2\xff 8\xe4\xff \x00'
2025-04-17 19:10:11.131 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0000] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=70, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:11.131 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0000] Decoded ZCL frame: Basic:Report_Attributes(attribute_reports=[Attribute(attrid=0x0001, value=TypeValue(type=uint8_t, value=80)), Attribute(attrid=0xFFE2, value=TypeValue(type=uint8_t, value=56)), Attribute(attrid=0xFFE4, value=TypeValue(type=uint8_t, value=0))])
2025-04-17 19:10:11.131 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0000] Received command 0x0A (TSN 70): Report_Attributes(attribute_reports=[Attribute(attrid=0x0001, value=TypeValue(type=uint8_t, value=80)), Attribute(attrid=0xFFE2, value=TypeValue(type=uint8_t, value=56)), Attribute(attrid=0xFFE4, value=TypeValue(type=uint8_t, value=0))])
2025-04-17 19:10:11.132 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0000] Attribute report received: app_version=80, 0xFFE2=56, 0xFFE4=0
2025-04-17 19:10:11.132 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0000]: cluster_handler[basic] attribute_updated - cluster[Basic] attr[app_version] value[80]
2025-04-17 19:10:11.132 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1, attribute_name='app_version', attribute_value=80, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0000', cluster_id=0, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (2 listeners)
2025-04-17 19:10:11.132 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:61:22:f9:ad:05-1-0-lqi', device_ieee=a4:c1:38:61:22:f9:ad:05, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:11.132 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lava_lampe_bleue_lqi: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:61:22:f9:ad:05-1-0-lqi', device_ieee=a4:c1:38:61:22:f9:ad:05, endpoint_id=1, group_id=None)
2025-04-17 19:10:11.132 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0000]: cluster_handler[basic] attribute_updated - cluster[Basic] attr[65506] value[56]
2025-04-17 19:10:11.132 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=65506, attribute_name=65506, attribute_value=56, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0000', cluster_id=0, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (2 listeners)
2025-04-17 19:10:11.132 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0000]: cluster_handler[basic] attribute_updated - cluster[Basic] attr[65508] value[0]
2025-04-17 19:10:11.132 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=65508, attribute_name=65508, attribute_value=0, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0000', cluster_id=0, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (2 listeners)
2025-04-17 19:10:11.132 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0000] Sending reply header: ZCLHeader(frame_control=FrameControl<0x10>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=70, command_id=<GeneralCommand.Default_Response: 11>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:11.133 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0000] Sending reply: Default_Response(command_id=10, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:11.133 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 11, 133303, tzinfo=datetime.timezone.utc), priority=<PacketPriority.LOW: -1>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), dst_ep=1, source_route=None, extended_timeout=False, tsn=70, profile_id=260, cluster_id=0, data=Serialized[b'\x10F\x0b\n\x00'], tx_options=<TransmitOptions.ACK: 1>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:11.134 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x689F), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=0, TSN=70, Options=<TransmitOptions.ACK_REQUEST|SUPPRESS_ROUTE_DISC_NETWORK: 48>, Radius=0, Data=b'\x10\x46\x0B\x0A\x00')
2025-04-17 19:10:11.146 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:11.161 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=70)
2025-04-17 19:10:11.446 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:10:11.504 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1, SrcAddr=0xA4A7, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=2423875, TSN=0, Data=b'\x18\x1E\x07\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:10:11.504 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 11, 504919, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1, data=Serialized[b'\x18\x1e\x07\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:10:11.505 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0001] Received ZCL frame: b'\x18\x1e\x07\x00'
2025-04-17 19:10:11.505 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0001] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=30, command_id=7, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:11.506 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0001] Decoded ZCL frame: PowerConfig1AAACluster:Configure_Reporting_rsp(status_records=[ConfigureReportingResponseRecord(status=<Status.SUCCESS: 0>)])
2025-04-17 19:10:11.506 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: Successfully configured reporting for '{'battery_voltage': (3600, 10800, 1), 'battery_percentage_remaining': (3600, 10800, 1)}' on 'power' cluster: [ConfigureReportingResponseRecord(status=<Status.SUCCESS: 0>)]
2025-04-17 19:10:11.506 DEBUG (MainThread) [zha] Emitting event zha_channel_configure_reporting with data ClusterConfigureReportingEvent(cluster_name='Power Configuration', cluster_id=1, attributes={'battery_voltage': {'min': 3600, 'max': 10800, 'id': 'battery_voltage', 'name': 'battery_voltage', 'change': 1, 'status': 'SUCCESS'}, 'battery_percentage_remaining': {'min': 3600, 'max': 10800, 'id': 'battery_percentage_remaining', 'name': 'battery_percentage_remaining', 'change': 1, 'status': 'SUCCESS'}}, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0001', event_type='zha_channel_message', event='zha_channel_configure_reporting') (1 listeners)
2025-04-17 19:10:11.506 DEBUG (MainThread) [zha] (ZHADeviceProxy) handling event protocol for event: ClusterConfigureReportingEvent(cluster_name='Power Configuration', cluster_id=1, attributes={'battery_voltage': {'min': 3600, 'max': 10800, 'id': 'battery_voltage', 'name': 'battery_voltage', 'change': 1, 'status': 'SUCCESS'}, 'battery_percentage_remaining': {'min': 3600, 'max': 10800, 'id': 'battery_percentage_remaining', 'name': 'battery_percentage_remaining', 'change': 1, 'status': 'SUCCESS'}}, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0001', event_type='zha_channel_message', event='zha_channel_configure_reporting')
2025-04-17 19:10:11.507 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: finished cluster handler configuration
2025-04-17 19:10:11.507 DEBUG (MainThread) [zigpy.device] Previously delayed device request is now running, delayed by 5.01s
2025-04-17 19:10:11.507 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 11, 507203, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), dst_ep=1, source_route=None, extended_timeout=True, tsn=31, profile_id=260, cluster_id=32, data=Serialized[b'\x00\x1f\x02\x00\x00#\x903\x00\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:11.507 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xA4A7), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=32, TSN=31, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x1F\x02\x00\x00\x23\x90\x33\x00\x00')
2025-04-17 19:10:11.515 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:11.527 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=31)
2025-04-17 19:10:11.595 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x6B83, ClusterId=6, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=2429579, TSN=0, Data=b'\x00\x57\x00\x00\x00', MacSrcAddr=0x32B8, MsgResultRadius=11)
2025-04-17 19:10:11.595 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 11, 595822, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.Group: 1>, address=0x6B83), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=6, data=Serialized[b'\x00W\x00\x00\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=11, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:10:11.596 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Received ZCL frame: b'\x00W\x00\x00\x00'
2025-04-17 19:10:11.596 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=87, command_id=0, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:11.596 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Decoded ZCL frame: OnOff:Read_Attributes(attribute_ids=[0])
2025-04-17 19:10:11.596 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Received command 0x00 (TSN 87): Read_Attributes(attribute_ids=[0])
2025-04-17 19:10:11.597 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Sending reply header: ZCLHeader(frame_control=FrameControl<0x10>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=87, command_id=<GeneralCommand.Read_Attributes_rsp: 1>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:11.597 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Sending reply: Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.UNSUPPORTED_ATTRIBUTE: 134>, value=None)])
2025-04-17 19:10:11.597 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 11, 597405, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=87, profile_id=260, cluster_id=6, data=Serialized[b'\x10W\x01\x00\x00\x86'], tx_options=<TransmitOptions.ACK: 1>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:11.597 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=6, TSN=87, Options=<TransmitOptions.ACK_REQUEST|SUPPRESS_ROUTE_DISC_NETWORK: 48>, Radius=0, Data=b'\x10\x57\x01\x00\x00\x86')
2025-04-17 19:10:11.614 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:11.626 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=87)
2025-04-17 19:10:12.454 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:10:12.508 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=32, SrcAddr=0xA4A7, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=2486640, TSN=0, Data=b'\x18\x1F\x04\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:10:12.509 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 12, 509132, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=32, data=Serialized[b'\x18\x1f\x04\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:10:12.509 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0020] Received ZCL frame: b'\x18\x1f\x04\x00'
2025-04-17 19:10:12.509 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0020] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=31, command_id=4, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:12.509 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0020] Decoded ZCL frame: PollControl:Write_Attributes_rsp(status_records=[WriteAttributesStatusRecord(status=<Status.SUCCESS: 0>)])
2025-04-17 19:10:12.510 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: cluster_handler[poll_control] attribute_updated - cluster[Poll Control] attr[checkin_interval] value[13200]
2025-04-17 19:10:12.510 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='checkin_interval', attribute_value=13200, cluster_handler_unique_id='6c:5c:b1:ff:fe:2c:3b:88:1:0x0020', cluster_id=32, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (0 listeners)
2025-04-17 19:10:12.510 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: finished cluster handler configuration
2025-04-17 19:10:12.510 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0001]: 'async_configure' stage succeeded
2025-04-17 19:10:12.510 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0003]: 'async_configure' stage succeeded
2025-04-17 19:10:12.510 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0000]: 'async_configure' stage succeeded
2025-04-17 19:10:12.510 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0020]: 'async_configure' stage succeeded
2025-04-17 19:10:12.510 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x1000]: 'async_configure' stage succeeded
2025-04-17 19:10:12.510 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: 'async_configure' stage succeeded
2025-04-17 19:10:12.510 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0008]: 'async_configure' stage succeeded
2025-04-17 19:10:12.510 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0006]: 'async_configure' stage succeeded
2025-04-17 19:10:12.510 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xA4A7:1:0x0019]: 'async_configure' stage succeeded
2025-04-17 19:10:12.510 DEBUG (MainThread) [zha] Emitting event zha_channel_cfg_done with data ClusterHandlerConfigurationComplete(device_ieee=6c:5c:b1:ff:fe:2c:3b:88, unique_id=6c:5c:b1:ff:fe:2c:3b:88, event_type='zha_channel_message', event='zha_channel_cfg_done') (1 listeners)
2025-04-17 19:10:12.510 DEBUG (MainThread) [zha] (ZHADeviceProxy) handling event protocol for event: ClusterHandlerConfigurationComplete(device_ieee=6c:5c:b1:ff:fe:2c:3b:88, unique_id=6c:5c:b1:ff:fe:2c:3b:88, event_type='zha_channel_message', event='zha_channel_cfg_done')
2025-04-17 19:10:12.510 DEBUG (MainThread) [zha.zigbee.device] [0xA4A7](RODRET Dimmer): completed configuration
2025-04-17 19:10:12.510 DEBUG (MainThread) [zigpy.util] Tries remaining: 3
2025-04-17 19:10:12.511 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Sending request header: ZCLHeader(frame_control=FrameControl<0x01>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=True, *is_general=False), tsn=32, command_id=64, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:12.511 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Sending request: trigger_effect(effect_id=<EffectIdentifier.Okay: 2>, effect_variant=<EffectVariant.Default: 0>)
2025-04-17 19:10:12.511 DEBUG (MainThread) [zigpy.device] [0xa4a7] Extending timeout for 0x20 request
2025-04-17 19:10:12.511 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 12, 511683, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), dst_ep=1, source_route=None, extended_timeout=True, tsn=32, profile_id=260, cluster_id=3, data=Serialized[b'\x01 @\x02\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:12.512 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xA4A7), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=3, TSN=32, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x01\x20\x40\x02\x00')
2025-04-17 19:10:12.520 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:12.534 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=32)
2025-04-17 19:10:13.294 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x6B83, ClusterId=6, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=60, SecurityUse=<Bool.false: 0>, TimeStamp=2535448, TSN=0, Data=b'\x00\x58\x00\x00\x00', MacSrcAddr=0x32B8, MsgResultRadius=11)
2025-04-17 19:10:13.294 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 13, 294603, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.Group: 1>, address=0x6B83), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=6, data=Serialized[b'\x00X\x00\x00\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=11, non_member_radius=0, lqi=60, rssi=None)
2025-04-17 19:10:13.294 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Received ZCL frame: b'\x00X\x00\x00\x00'
2025-04-17 19:10:13.295 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=88, command_id=0, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:13.295 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Decoded ZCL frame: OnOff:Read_Attributes(attribute_ids=[0])
2025-04-17 19:10:13.295 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Received command 0x00 (TSN 88): Read_Attributes(attribute_ids=[0])
2025-04-17 19:10:13.295 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Sending reply header: ZCLHeader(frame_control=FrameControl<0x10>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=88, command_id=<GeneralCommand.Read_Attributes_rsp: 1>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:13.296 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Sending reply: Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.UNSUPPORTED_ATTRIBUTE: 134>, value=None)])
2025-04-17 19:10:13.296 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 13, 296245, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=88, profile_id=260, cluster_id=6, data=Serialized[b'\x10X\x01\x00\x00\x86'], tx_options=<TransmitOptions.ACK: 1>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:13.296 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=6, TSN=88, Options=<TransmitOptions.ACK_REQUEST|SUPPRESS_ROUTE_DISC_NETWORK: 48>, Radius=0, Data=b'\x10\x58\x01\x00\x00\x86')
2025-04-17 19:10:13.312 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:13.332 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=88)
2025-04-17 19:10:13.453 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:10:13.507 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=3, SrcAddr=0xA4A7, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=60, SecurityUse=<Bool.false: 0>, TimeStamp=2549061, TSN=0, Data=b'\x08\x20\x0B\x40\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:10:13.507 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 13, 507769, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=3, data=Serialized[b'\x08 \x0b@\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=60, rssi=None)
2025-04-17 19:10:13.508 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Received ZCL frame: b'\x08 \x0b@\x00'
2025-04-17 19:10:13.508 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=32, command_id=11, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:13.508 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0003] Decoded ZCL frame: Identify:Default_Response(command_id=64, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:15.031 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:fb:20:a9:7a:66-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:15.032 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:fb:20:a9:7a:66-1-1794-summation_delivered: polling for updated state
2025-04-17 19:10:15.032 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:fb:20:a9:7a:66-1-1794-summation_delivered: polling current state
2025-04-17 19:10:15.032 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0702]: async_update
2025-04-17 19:10:15.032 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:10:15.032 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=34, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:15.032 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:10:15.033 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 15, 33140, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D1E), dst_ep=1, source_route=None, extended_timeout=False, tsn=34, profile_id=260, cluster_id=1794, data=Serialized[b'\x00"\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:15.033 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x7D1E), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=34, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x22\x00\x00\x00\x00\x02')
2025-04-17 19:10:15.045 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:15.050 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=34)
2025-04-17 19:10:15.071 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0x7D1E, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=123, SecurityUse=<Bool.false: 0>, TimeStamp=2646730, TSN=0, Data=b'\x18\x22\x01\x00\x00\x00\x25\xF4\x01\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x7D1E, MsgResultRadius=29)
2025-04-17 19:10:15.072 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 15, 72156, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D1E), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18"\x01\x00\x00\x00%\xf4\x01\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=123, rssi=None)
2025-04-17 19:10:15.072 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0702] Received ZCL frame: b'\x18"\x01\x00\x00\x00%\xf4\x01\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:10:15.072 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=34, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:15.073 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=500)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:10:15.074 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[500]
2025-04-17 19:10:15.074 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=500, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:15.075 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:10:15.075 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:15.075 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0702]: Got attributes: {'current_summ_delivered': 500, 'status': <bitmap8: 0>}
2025-04-17 19:10:18.473 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:fb:20:a9:7a:66-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:18.473 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:fb:20:a9:7a:66-1-2820: polling for updated state
2025-04-17 19:10:18.473 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:fb:20:a9:7a:66-1-2820: polling current state
2025-04-17 19:10:18.473 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: async_update
2025-04-17 19:10:18.473 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:10:18.473 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=35, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:18.474 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:10:18.474 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 18, 474211, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D1E), dst_ep=1, source_route=None, extended_timeout=False, tsn=35, profile_id=260, cluster_id=2820, data=Serialized[b'\x00#\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:18.474 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x7D1E), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=35, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x23\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:10:18.486 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:18.497 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=35)
2025-04-17 19:10:18.520 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x7D1E, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=123, SecurityUse=<Bool.false: 0>, TimeStamp=2862234, TSN=0, Data=b'\x18\x23\x01\x0B\x05\x00\x29\x1A\x00\x08\x05\x00\x21\x6E\x00\x05\x05\x00\x21\xEB\x00', MacSrcAddr=0x7D1E, MsgResultRadius=29)
2025-04-17 19:10:18.520 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 18, 520438, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D1E), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18#\x01\x0b\x05\x00)\x1a\x00\x08\x05\x00!n\x00\x05\x05\x00!\xeb\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=123, rssi=None)
2025-04-17 19:10:18.520 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Received ZCL frame: b'\x18#\x01\x0b\x05\x00)\x1a\x00\x08\x05\x00!n\x00\x05\x05\x00!\xeb\x00'
2025-04-17 19:10:18.520 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=35, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:18.521 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=26)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=110)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=235))])
2025-04-17 19:10:18.521 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[26]
2025-04-17 19:10:18.521 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=26, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:18.521 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:fb:20:a9:7a:66-1-2820', device_ieee=a4:c1:38:fb:20:a9:7a:66, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:18.521 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lava_lampe_rouge_power: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:fb:20:a9:7a:66-1-2820', device_ieee=a4:c1:38:fb:20:a9:7a:66, endpoint_id=1, group_id=None)
2025-04-17 19:10:18.521 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[110]
2025-04-17 19:10:18.521 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=110, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:18.522 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[235]
2025-04-17 19:10:18.522 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=235, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:18.522 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:fb:20:a9:7a:66-1-2820-rms_voltage', device_ieee=a4:c1:38:fb:20:a9:7a:66, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:18.522 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lava_lampe_rouge_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:fb:20:a9:7a:66-1-2820-rms_voltage', device_ieee=a4:c1:38:fb:20:a9:7a:66, endpoint_id=1, group_id=None)
2025-04-17 19:10:18.522 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: Got attributes: {'active_power': 26, 'rms_current': 110, 'rms_voltage': 235}
2025-04-17 19:10:19.775 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:f3:e0:79:d4:a0-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:19.775 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:f3:e0:79:d4:a0-1-1794-summation_delivered: polling for updated state
2025-04-17 19:10:19.776 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:f3:e0:79:d4:a0-1-1794-summation_delivered: polling current state
2025-04-17 19:10:19.776 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: async_update
2025-04-17 19:10:19.776 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:10:19.776 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=44, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:19.776 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:10:19.776 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 19, 776831, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), dst_ep=1, source_route=None, extended_timeout=False, tsn=44, profile_id=260, cluster_id=1794, data=Serialized[b'\x00,\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:19.777 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x7D24), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=44, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x2C\x00\x00\x00\x00\x02')
2025-04-17 19:10:19.788 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:19.795 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=44)
2025-04-17 19:10:19.817 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0x7D24, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=126, SecurityUse=<Bool.false: 0>, TimeStamp=2943305, TSN=0, Data=b'\x18\x2C\x01\x00\x00\x00\x25\x65\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x7D24, MsgResultRadius=29)
2025-04-17 19:10:19.817 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 19, 817230, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18,\x01\x00\x00\x00%e\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=126, rssi=None)
2025-04-17 19:10:19.817 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Received ZCL frame: b'\x18,\x01\x00\x00\x00%e\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:10:19.817 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=44, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:19.818 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=101)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:10:19.818 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[101]
2025-04-17 19:10:19.818 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=101, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:19.818 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:10:19.818 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:19.818 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: Got attributes: {'current_summ_delivered': 101, 'status': <bitmap8: 0>}
2025-04-17 19:10:19.864 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:f3:e0:79:d4:a0-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:19.865 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:f3:e0:79:d4:a0-1-2820: polling for updated state
2025-04-17 19:10:19.865 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:f3:e0:79:d4:a0-1-2820: polling current state
2025-04-17 19:10:19.865 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: async_update
2025-04-17 19:10:19.865 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:10:19.865 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=45, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:19.865 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:10:19.865 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 19, 865866, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), dst_ep=1, source_route=None, extended_timeout=False, tsn=45, profile_id=260, cluster_id=2820, data=Serialized[b'\x00-\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:19.866 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x7D24), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=45, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x2D\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:10:19.878 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:19.882 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=45)
2025-04-17 19:10:19.905 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x7D24, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=126, SecurityUse=<Bool.false: 0>, TimeStamp=2948795, TSN=0, Data=b'\x18\x2D\x01\x0B\x05\x00\x29\x00\x00\x08\x05\x00\x21\x00\x00\x05\x05\x00\x21\xEC\x00', MacSrcAddr=0x7D24, MsgResultRadius=29)
2025-04-17 19:10:19.905 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 19, 905350, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18-\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=126, rssi=None)
2025-04-17 19:10:19.905 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Received ZCL frame: b'\x18-\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'
2025-04-17 19:10:19.905 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=45, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:19.906 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=0)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=0)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=236))])
2025-04-17 19:10:19.906 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[0]
2025-04-17 19:10:19.906 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=0, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:19.906 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[0]
2025-04-17 19:10:19.906 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=0, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:19.906 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[236]
2025-04-17 19:10:19.906 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=236, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:19.906 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:f3:e0:79:d4:a0-1-2820-rms_voltage', device_ieee=a4:c1:38:f3:e0:79:d4:a0, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:19.906 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_guirlande_bleue_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:f3:e0:79:d4:a0-1-2820-rms_voltage', device_ieee=a4:c1:38:f3:e0:79:d4:a0, endpoint_id=1, group_id=None)
2025-04-17 19:10:19.906 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: Got attributes: {'active_power': 0, 'rms_current': 0, 'rms_voltage': 236}
2025-04-17 19:10:20.177 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:61:22:f9:ad:05-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:20.177 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-2820: polling for updated state
2025-04-17 19:10:20.177 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-2820: polling current state
2025-04-17 19:10:20.177 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: async_update
2025-04-17 19:10:20.177 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:10:20.177 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=66, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:20.178 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:10:20.178 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 20, 178449, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), dst_ep=1, source_route=None, extended_timeout=False, tsn=66, profile_id=260, cluster_id=2820, data=Serialized[b'\x00B\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:20.178 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x689F), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=66, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x42\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:10:20.190 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:20.194 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=66)
2025-04-17 19:10:20.217 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x689F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=114, SecurityUse=<Bool.false: 0>, TimeStamp=2968308, TSN=0, Data=b'\x18\x42\x01\x0B\x05\x00\x29\x00\x00\x08\x05\x00\x21\x00\x00\x05\x05\x00\x21\xEC\x00', MacSrcAddr=0x689F, MsgResultRadius=29)
2025-04-17 19:10:20.217 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 20, 217641, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18B\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=114, rssi=None)
2025-04-17 19:10:20.217 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Received ZCL frame: b'\x18B\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'
2025-04-17 19:10:20.218 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=66, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:20.218 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=0)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=0)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=236))])
2025-04-17 19:10:20.218 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[0]
2025-04-17 19:10:20.218 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=0, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:20.218 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[0]
2025-04-17 19:10:20.218 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=0, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:20.218 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[236]
2025-04-17 19:10:20.218 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=236, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:20.219 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: Got attributes: {'active_power': 0, 'rms_current': 0, 'rms_voltage': 236}
2025-04-17 19:10:24.535 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:e7:5d:17:99:21-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:24.535 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:e7:5d:17:99:21-1-2820: polling for updated state
2025-04-17 19:10:24.535 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:e7:5d:17:99:21-1-2820: polling current state
2025-04-17 19:10:24.535 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: async_update
2025-04-17 19:10:24.535 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:10:24.536 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=208, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:24.536 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:10:24.536 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 24, 536636, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), dst_ep=1, source_route=None, extended_timeout=False, tsn=208, profile_id=260, cluster_id=2820, data=Serialized[b'\x00\xd0\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:24.536 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xB12F), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=208, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xD0\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:10:24.549 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:24.553 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=208)
2025-04-17 19:10:24.595 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0xB12F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=60, SecurityUse=<Bool.false: 0>, TimeStamp=3241933, TSN=0, Data=b'\x18\xD0\x01\x0B\x05\x00\x29\x00\x00\x08\x05\x00\x21\x00\x00\x05\x05\x00\x21\xEC\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:10:24.595 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 24, 595795, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\xd0\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=60, rssi=None)
2025-04-17 19:10:24.596 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Received ZCL frame: b'\x18\xd0\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'
2025-04-17 19:10:24.596 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=208, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:24.596 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=0)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=0)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=236))])
2025-04-17 19:10:24.597 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[0]
2025-04-17 19:10:24.597 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=0, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:24.597 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[0]
2025-04-17 19:10:24.597 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=0, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:24.597 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[236]
2025-04-17 19:10:24.597 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=236, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:24.597 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:e7:5d:17:99:21-1-2820-rms_voltage', device_ieee=a4:c1:38:e7:5d:17:99:21, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:24.597 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.chambre_lampe_rouge_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:e7:5d:17:99:21-1-2820-rms_voltage', device_ieee=a4:c1:38:e7:5d:17:99:21, endpoint_id=1, group_id=None)
2025-04-17 19:10:24.597 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: Got attributes: {'active_power': 0, 'rms_current': 0, 'rms_voltage': 236}
2025-04-17 19:10:25.240 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=96, SecurityUse=<Bool.false: 0>, TimeStamp=3282322, TSN=0, Data=b'\x18\x10\x0A\x08\x05\x21\x43\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:10:25.240 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 25, 240234, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\x10\n\x08\x05!C\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=96, rssi=None)
2025-04-17 19:10:25.240 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received ZCL frame: b'\x18\x10\n\x08\x05!C\x00'
2025-04-17 19:10:25.240 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=16, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:25.241 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=67))])
2025-04-17 19:10:25.241 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received command 0x0A (TSN 16): Report_Attributes(attribute_reports=[Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=67))])
2025-04-17 19:10:25.241 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Attribute report received: rms_current=67
2025-04-17 19:10:25.241 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[67]
2025-04-17 19:10:25.241 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=67, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:27.375 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:03:75:85:ed:14-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:27.375 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-2820: polling for updated state
2025-04-17 19:10:27.375 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-2820: polling current state
2025-04-17 19:10:27.375 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: async_update
2025-04-17 19:10:27.375 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:10:27.375 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=191, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:27.376 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:10:27.376 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 27, 376333, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), dst_ep=1, source_route=None, extended_timeout=False, tsn=191, profile_id=260, cluster_id=2820, data=Serialized[b'\x00\xbf\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:27.376 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x6CCC), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=191, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xBF\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:10:27.388 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:27.393 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=191)
2025-04-17 19:10:27.416 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=99, SecurityUse=<Bool.false: 0>, TimeStamp=3418220, TSN=0, Data=b'\x18\xBF\x01\x0B\x05\x00\x29\x08\x00\x08\x05\x00\x21\x41\x00\x05\x05\x00\x21\xEC\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:10:27.416 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 27, 416388, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\xbf\x01\x0b\x05\x00)\x08\x00\x08\x05\x00!A\x00\x05\x05\x00!\xec\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=99, rssi=None)
2025-04-17 19:10:27.416 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received ZCL frame: b'\x18\xbf\x01\x0b\x05\x00)\x08\x00\x08\x05\x00!A\x00\x05\x05\x00!\xec\x00'
2025-04-17 19:10:27.416 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=191, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:27.417 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=8)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=65)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=236))])
2025-04-17 19:10:27.417 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[8]
2025-04-17 19:10:27.417 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=8, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:27.417 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[65]
2025-04-17 19:10:27.417 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=65, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:27.417 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[236]
2025-04-17 19:10:27.417 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=236, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:27.417 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:03:75:85:ed:14-1-2820-rms_voltage', device_ieee=a4:c1:38:03:75:85:ed:14, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:27.417 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lampe_tv_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:03:75:85:ed:14-1-2820-rms_voltage', device_ieee=a4:c1:38:03:75:85:ed:14, endpoint_id=1, group_id=None)
2025-04-17 19:10:27.418 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: Got attributes: {'active_power': 8, 'rms_current': 65, 'rms_voltage': 236}
2025-04-17 19:10:28.994 DEBUG (MainThread) [zigpy.application] Feeding watchdog
2025-04-17 19:10:28.994 DEBUG (MainThread) [zigpy_znp.api] Sending request: SYS.Ping.Req()
2025-04-17 19:10:28.998 DEBUG (MainThread) [zigpy_znp.api] Received command: SYS.Ping.Rsp(Capabilities=<MTCapabilities.SYS|AF|ZDO|UTIL|GP|APP_CNF: 1625>)
2025-04-17 19:10:30.240 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=93, SecurityUse=<Bool.false: 0>, TimeStamp=3594849, TSN=0, Data=b'\x18\x11\x0A\x08\x05\x21\x40\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:10:30.240 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 30, 240655, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\x11\n\x08\x05!@\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=93, rssi=None)
2025-04-17 19:10:30.241 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received ZCL frame: b'\x18\x11\n\x08\x05!@\x00'
2025-04-17 19:10:30.241 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=17, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:30.241 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=64))])
2025-04-17 19:10:30.241 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received command 0x0A (TSN 17): Report_Attributes(attribute_reports=[Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=64))])
2025-04-17 19:10:30.241 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Attribute report received: rms_current=64
2025-04-17 19:10:30.241 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[64]
2025-04-17 19:10:30.241 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=64, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:35.440 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:55:8b:3b:3e:9b-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:35.440 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:55:8b:3b:3e:9b-1-2820: polling for updated state
2025-04-17 19:10:35.440 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:55:8b:3b:3e:9b-1-2820: polling current state
2025-04-17 19:10:35.440 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: async_update
2025-04-17 19:10:35.440 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:10:35.440 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=215, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:35.441 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:10:35.441 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 35, 441185, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB6F6), dst_ep=1, source_route=None, extended_timeout=False, tsn=215, profile_id=260, cluster_id=2820, data=Serialized[b'\x00\xd7\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:35.441 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xB6F6), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=215, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xD7\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:10:35.453 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:35.459 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=215)
2025-04-17 19:10:35.487 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0xB6F6, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=45, SecurityUse=<Bool.false: 0>, TimeStamp=3922680, TSN=0, Data=b'\x18\xD7\x01\x0B\x05\x00\x29\x00\x00\x08\x05\x00\x21\x00\x00\x05\x05\x00\x21\xEC\x00', MacSrcAddr=0xB6F6, MsgResultRadius=29)
2025-04-17 19:10:35.487 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 35, 487548, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB6F6), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\xd7\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=45, rssi=None)
2025-04-17 19:10:35.487 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Received ZCL frame: b'\x18\xd7\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'
2025-04-17 19:10:35.488 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=215, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:35.488 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=0)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=0)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=236))])
2025-04-17 19:10:35.488 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[0]
2025-04-17 19:10:35.488 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=0, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:35.488 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[0]
2025-04-17 19:10:35.488 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=0, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:35.488 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[236]
2025-04-17 19:10:35.488 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=236, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:35.488 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: Got attributes: {'active_power': 0, 'rms_current': 0, 'rms_voltage': 236}
2025-04-17 19:10:36.242 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:03:75:85:ed:14-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:36.242 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-1794-summation_delivered: polling for updated state
2025-04-17 19:10:36.242 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-1794-summation_delivered: polling current state
2025-04-17 19:10:36.242 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: async_update
2025-04-17 19:10:36.242 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:10:36.242 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=192, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:36.243 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:10:36.243 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 36, 243474, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), dst_ep=1, source_route=None, extended_timeout=False, tsn=192, profile_id=260, cluster_id=1794, data=Serialized[b'\x00\xc0\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:36.243 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x6CCC), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=192, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xC0\x00\x00\x00\x00\x02')
2025-04-17 19:10:36.255 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:36.261 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=192)
2025-04-17 19:10:36.283 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=96, SecurityUse=<Bool.false: 0>, TimeStamp=3972429, TSN=0, Data=b'\x18\xC0\x01\x00\x00\x00\x25\x1D\x04\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:10:36.283 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 36, 283350, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18\xc0\x01\x00\x00\x00%\x1d\x04\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=96, rssi=None)
2025-04-17 19:10:36.283 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Received ZCL frame: b'\x18\xc0\x01\x00\x00\x00%\x1d\x04\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:10:36.283 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=192, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:36.284 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=1053)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:10:36.284 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[1053]
2025-04-17 19:10:36.284 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=1053, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:36.284 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:10:36.284 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:36.284 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: Got attributes: {'current_summ_delivered': 1053, 'status': <bitmap8: 0>}
2025-04-17 19:10:40.078 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:61:22:f9:ad:05-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:40.078 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-1794-summation_delivered: polling for updated state
2025-04-17 19:10:40.078 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-1794-summation_delivered: polling current state
2025-04-17 19:10:40.078 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: async_update
2025-04-17 19:10:40.078 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:10:40.078 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=67, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:40.079 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:10:40.079 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 40, 79306, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), dst_ep=1, source_route=None, extended_timeout=False, tsn=67, profile_id=260, cluster_id=1794, data=Serialized[b'\x00C\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:40.079 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x689F), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=67, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x43\x00\x00\x00\x00\x02')
2025-04-17 19:10:40.091 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:40.095 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=67)
2025-04-17 19:10:40.117 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0x689F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=117, SecurityUse=<Bool.false: 0>, TimeStamp=4212097, TSN=0, Data=b'\x18\x43\x01\x00\x00\x00\x25\xC7\x02\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x689F, MsgResultRadius=29)
2025-04-17 19:10:40.117 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 40, 117811, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18C\x01\x00\x00\x00%\xc7\x02\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=117, rssi=None)
2025-04-17 19:10:40.118 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Received ZCL frame: b'\x18C\x01\x00\x00\x00%\xc7\x02\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:10:40.118 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=67, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:40.118 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=711)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:10:40.118 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[711]
2025-04-17 19:10:40.118 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=711, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:40.119 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:10:40.119 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:40.119 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: Got attributes: {'current_summ_delivered': 711, 'status': <bitmap8: 0>}
2025-04-17 19:10:40.587 DEBUG (MainThread) [zha.decorators] [<Task pending name='global-updater_GlobalUpdater' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.helpers::GlobalUpdater.update_listeners]
2025-04-17 19:10:40.587 DEBUG (MainThread) [zha.application.helpers] Global updater interval starting
2025-04-17 19:10:40.587 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.587 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-0-rssi: polling for updated state
2025-04-17 19:10:40.587 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.587 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-0-lqi: polling for updated state
2025-04-17 19:10:40.587 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:03:75:85:ed:14-1-0-lqi', device_ieee=a4:c1:38:03:75:85:ed:14, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:40.587 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lampe_tv_lqi: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:03:75:85:ed:14-1-0-lqi', device_ieee=a4:c1:38:03:75:85:ed:14, endpoint_id=1, group_id=None)
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:f3:e0:79:d4:a0-1-0-rssi: polling for updated state
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:f3:e0:79:d4:a0-1-0-lqi: polling for updated state
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:f3:e0:79:d4:a0-1-0-lqi', device_ieee=a4:c1:38:f3:e0:79:d4:a0, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:40.588 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_guirlande_bleue_lqi: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:f3:e0:79:d4:a0-1-0-lqi', device_ieee=a4:c1:38:f3:e0:79:d4:a0, endpoint_id=1, group_id=None)
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-0-rssi: polling for updated state
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-0-lqi: polling for updated state
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:61:22:f9:ad:05-1-0-lqi', device_ieee=a4:c1:38:61:22:f9:ad:05, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:40.588 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lava_lampe_bleue_lqi: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:61:22:f9:ad:05-1-0-lqi', device_ieee=a4:c1:38:61:22:f9:ad:05, endpoint_id=1, group_id=None)
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:fb:20:a9:7a:66-1-0-rssi: polling for updated state
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:fb:20:a9:7a:66-1-0-lqi: polling for updated state
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:55:8b:3b:3e:9b-1-0-rssi: polling for updated state
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:55:8b:3b:3e:9b-1-0-lqi: polling for updated state
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:55:8b:3b:3e:9b-1-0-lqi', device_ieee=a4:c1:38:55:8b:3b:3e:9b, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:40.588 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lampe_rouge_lqi: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:55:8b:3b:3e:9b-1-0-lqi', device_ieee=a4:c1:38:55:8b:3b:3e:9b, endpoint_id=1, group_id=None)
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.platforms] d4:48:67:ff:fe:60:83:04-1-0-rssi: polling for updated state
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.platforms] d4:48:67:ff:fe:60:83:04-1-0-lqi: polling for updated state
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.platforms] d4:48:67:ff:fe:2a:a6:61-1-0-rssi: polling for updated state
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.platforms] d4:48:67:ff:fe:2a:a6:61-1-0-lqi: polling for updated state
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:e7:5d:17:99:21-1-0-rssi: polling for updated state
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:e7:5d:17:99:21-1-0-lqi: polling for updated state
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:e7:5d:17:99:21-1-0-lqi', device_ieee=a4:c1:38:e7:5d:17:99:21, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:40.588 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.chambre_lampe_rouge_lqi: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:e7:5d:17:99:21-1-0-lqi', device_ieee=a4:c1:38:e7:5d:17:99:21, endpoint_id=1, group_id=None)
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.588 DEBUG (MainThread) [zha.application.platforms] 44:e2:f8:ff:fe:09:32:3f-1-0-lqi: polling for updated state
2025-04-17 19:10:40.589 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.589 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1-0-rssi: polling for updated state
2025-04-17 19:10:40.589 DEBUG (MainThread) [zha.application.helpers] Global updater running update callback
2025-04-17 19:10:40.589 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1-0-lqi: polling for updated state
2025-04-17 19:10:40.589 DEBUG (MainThread) [zha.application.helpers] Global updater interval finished
2025-04-17 19:10:40.630 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:10:40.684 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=6, SrcAddr=0xA4A7, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=54, SecurityUse=<Bool.false: 0>, TimeStamp=4247644, TSN=0, Data=b'\x11\x0A\x01', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:10:40.684 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 40, 684976, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=6, data=Serialized[b'\x11\n\x01'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=54, rssi=None)
2025-04-17 19:10:40.685 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0006] Received ZCL frame: b'\x11\n\x01'
2025-04-17 19:10:40.685 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0006] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x11>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=0, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=True, *is_general=False), tsn=10, command_id=1, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:40.685 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0006] Decoded ZCL frame: OnOff:on()
2025-04-17 19:10:40.685 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0006] Received command 0x01 (TSN 10): on()
2025-04-17 19:10:40.685 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0006] No explicit handler for cluster command 0x01: on()
2025-04-17 19:10:40.686 DEBUG (MainThread) [zha] Emitting event zha_event with data ZHAEvent(device_ieee=6c:5c:b1:ff:fe:2c:3b:88, unique_id='6c:5c:b1:ff:fe:2c:3b:88', data={'unique_id': '6c:5c:b1:ff:fe:2c:3b:88:1:0x0006', 'endpoint_id': 1, 'cluster_id': 6, 'command': 'on', 'args': [], 'params': {}}, event_type='zha_event', event='zha_event') (1 listeners)
2025-04-17 19:10:40.686 DEBUG (MainThread) [zha] (ZHADeviceProxy) handling event protocol for event: ZHAEvent(device_ieee=6c:5c:b1:ff:fe:2c:3b:88, unique_id='6c:5c:b1:ff:fe:2c:3b:88', data={'unique_id': '6c:5c:b1:ff:fe:2c:3b:88:1:0x0006', 'endpoint_id': 1, 'cluster_id': 6, 'command': 'on', 'args': [], 'params': {}}, event_type='zha_event', event='zha_event')
2025-04-17 19:10:40.687 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:10:40.689 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: setting transitioning flag to True
2025-04-17 19:10:40.689 DEBUG (MainThread) [zigpy.util] Tries remaining: 3
2025-04-17 19:10:40.689 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Sending request header: ZCLHeader(frame_control=FrameControl<0x01>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=True, *is_general=False), tsn=8, command_id=1, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:40.690 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Sending request: on()
2025-04-17 19:10:40.691 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 40, 691515, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=8, profile_id=260, cluster_id=6, data=Serialized[b'\x01\x08\x01'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:40.691 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=6, TSN=8, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x01\x08\x01')
2025-04-17 19:10:40.703 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:40.707 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=8)
2025-04-17 19:10:40.738 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=6, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=54, SecurityUse=<Bool.false: 0>, TimeStamp=4251003, TSN=0, Data=b'\x08\x08\x0B\x01\x00', MacSrcAddr=0x32B8, MsgResultRadius=29)
2025-04-17 19:10:40.738 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 40, 738660, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=6, data=Serialized[b'\x08\x08\x0b\x01\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=54, rssi=None)
2025-04-17 19:10:40.739 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Received ZCL frame: b'\x08\x08\x0b\x01\x00'
2025-04-17 19:10:40.739 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=8, command_id=11, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:40.739 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Decoded ZCL frame: OnOff:Default_Response(command_id=1, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:40.739 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: handling color commands after turning on/level
2025-04-17 19:10:40.739 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: starting transitioning timer for 1.25
2025-04-17 19:10:40.739 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: turned on: {'on_off': Default_Response(command_id=1, status=<Status.SUCCESS: 0>)}
2025-04-17 19:10:40.739 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.LIGHT: 'light'>, unique_id='28:68:47:ff:fe:56:9f:f8-1', device_ieee=28:68:47:ff:fe:56:9f:f8, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:40.739 DEBUG (MainThread) [homeassistant.components.zha.entity] light.cuisine_plans_de_travail: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.LIGHT: 'light'>, unique_id='28:68:47:ff:fe:56:9f:f8-1', device_ieee=28:68:47:ff:fe:56:9f:f8, endpoint_id=1, group_id=None)
2025-04-17 19:10:40.757 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=6, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=54, SecurityUse=<Bool.false: 0>, TimeStamp=4252147, TSN=0, Data=b'\x08\x59\x0A\x00\x00\x10\x01', MacSrcAddr=0x32B8, MsgResultRadius=29)
2025-04-17 19:10:40.757 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 40, 757338, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=6, data=Serialized[b'\x08Y\n\x00\x00\x10\x01'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=54, rssi=None)
2025-04-17 19:10:40.757 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Received ZCL frame: b'\x08Y\n\x00\x00\x10\x01'
2025-04-17 19:10:40.757 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=89, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:40.758 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Decoded ZCL frame: OnOff:Report_Attributes(attribute_reports=[Attribute(attrid=0x0000, value=TypeValue(type=Bool, value=<Bool.true: 1>))])
2025-04-17 19:10:40.758 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Received command 0x0A (TSN 89): Report_Attributes(attribute_reports=[Attribute(attrid=0x0000, value=TypeValue(type=Bool, value=<Bool.true: 1>))])
2025-04-17 19:10:40.758 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Attribute report received: on_off=<Bool.true: 1>
2025-04-17 19:10:40.758 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x32B8:1:0x0006]: cluster_handler[on_off] attribute_updated - cluster[On/Off] attr[on_off] value[Bool.true]
2025-04-17 19:10:40.758 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='on_off', attribute_value=<Bool.true: 1>, cluster_handler_unique_id='28:68:47:ff:fe:56:9f:f8:1:0x0006', cluster_id=6, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (2 listeners)
2025-04-17 19:10:40.758 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: received onoff Bool.true while transitioning - skipping update
2025-04-17 19:10:40.758 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Sending reply header: ZCLHeader(frame_control=FrameControl<0x10>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=89, command_id=<GeneralCommand.Default_Response: 11>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:40.759 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Sending reply: Default_Response(command_id=10, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:40.759 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 40, 759240, tzinfo=datetime.timezone.utc), priority=<PacketPriority.LOW: -1>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=89, profile_id=260, cluster_id=6, data=Serialized[b'\x10Y\x0b\n\x00'], tx_options=<TransmitOptions.ACK: 1>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:40.759 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=6, TSN=89, Options=<TransmitOptions.ACK_REQUEST|SUPPRESS_ROUTE_DISC_NETWORK: 48>, Radius=0, Data=b'\x10\x59\x0B\x0A\x00')
2025-04-17 19:10:40.771 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:40.787 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=89)
2025-04-17 19:10:41.794 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:03:75:85:ed:14-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:41.795 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-2820: polling for updated state
2025-04-17 19:10:41.795 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-2820: polling current state
2025-04-17 19:10:41.795 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: async_update
2025-04-17 19:10:41.795 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:10:41.795 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=193, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:41.795 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:10:41.796 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 41, 796012, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), dst_ep=1, source_route=None, extended_timeout=False, tsn=193, profile_id=260, cluster_id=2820, data=Serialized[b'\x00\xc1\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:41.796 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x6CCC), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=193, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xC1\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:10:41.808 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:41.812 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=193)
2025-04-17 19:10:41.834 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=99, SecurityUse=<Bool.false: 0>, TimeStamp=4319397, TSN=0, Data=b'\x18\xC1\x01\x0B\x05\x00\x29\x08\x00\x08\x05\x00\x21\x40\x00\x05\x05\x00\x21\xEC\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:10:41.835 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 41, 835214, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\xc1\x01\x0b\x05\x00)\x08\x00\x08\x05\x00!@\x00\x05\x05\x00!\xec\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=99, rssi=None)
2025-04-17 19:10:41.835 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received ZCL frame: b'\x18\xc1\x01\x0b\x05\x00)\x08\x00\x08\x05\x00!@\x00\x05\x05\x00!\xec\x00'
2025-04-17 19:10:41.835 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=193, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:41.836 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=8)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=64)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=236))])
2025-04-17 19:10:41.836 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[8]
2025-04-17 19:10:41.836 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=8, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:41.836 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[64]
2025-04-17 19:10:41.836 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=64, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:41.836 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[236]
2025-04-17 19:10:41.836 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=236, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:41.836 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: Got attributes: {'active_power': 8, 'rms_current': 64, 'rms_voltage': 236}
2025-04-17 19:10:41.990 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: transition complete - future attribute reports will write HA state
2025-04-17 19:10:42.473 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:55:8b:3b:3e:9b-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:42.473 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:55:8b:3b:3e:9b-1-1794-summation_delivered: polling for updated state
2025-04-17 19:10:42.473 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:55:8b:3b:3e:9b-1-1794-summation_delivered: polling current state
2025-04-17 19:10:42.473 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0702]: async_update
2025-04-17 19:10:42.473 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:10:42.473 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=216, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:42.474 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:10:42.474 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 42, 474410, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB6F6), dst_ep=1, source_route=None, extended_timeout=False, tsn=216, profile_id=260, cluster_id=1794, data=Serialized[b'\x00\xd8\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:42.474 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xB6F6), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=216, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xD8\x00\x00\x00\x00\x02')
2025-04-17 19:10:42.486 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:42.489 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=216)
2025-04-17 19:10:42.522 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0xB6F6, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=45, SecurityUse=<Bool.false: 0>, TimeStamp=4362392, TSN=0, Data=b'\x18\xD8\x01\x00\x00\x00\x25\xCA\x01\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0xB6F6, MsgResultRadius=29)
2025-04-17 19:10:42.522 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 42, 522597, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB6F6), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18\xd8\x01\x00\x00\x00%\xca\x01\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=45, rssi=None)
2025-04-17 19:10:42.522 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0702] Received ZCL frame: b'\x18\xd8\x01\x00\x00\x00%\xca\x01\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:10:42.523 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=216, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:42.523 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=458)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:10:42.523 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[458]
2025-04-17 19:10:42.523 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=458, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:42.523 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:10:42.523 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:42.523 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0702]: Got attributes: {'current_summ_delivered': 458, 'status': <bitmap8: 0>}
2025-04-17 19:10:43.259 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:10:43.321 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=8, SrcAddr=0xA4A7, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=4412385, TSN=0, Data=b'\x11\x0B\x01\x01\x53\x00\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:10:43.321 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 43, 321221, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=8, data=Serialized[b'\x11\x0b\x01\x01S\x00\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:10:43.321 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0008] Received ZCL frame: b'\x11\x0b\x01\x01S\x00\x00'
2025-04-17 19:10:43.321 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0008] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x11>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=0, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=True, *is_general=False), tsn=11, command_id=1, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:43.322 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0008] Decoded ZCL frame: LevelControl:move(move_mode=<MoveMode.Down: 1>, rate=83, options_mask=<OptionsMask: 0>, options_override=<Options: 0>)
2025-04-17 19:10:43.322 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0008] Received command 0x01 (TSN 11): move(move_mode=<MoveMode.Down: 1>, rate=83, options_mask=<OptionsMask: 0>, options_override=<Options: 0>)
2025-04-17 19:10:43.322 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0008] No explicit handler for cluster command 0x01: move(move_mode=<MoveMode.Down: 1>, rate=83, options_mask=<OptionsMask: 0>, options_override=<Options: 0>)
2025-04-17 19:10:43.322 DEBUG (MainThread) [zha] Emitting event zha_event with data ZHAEvent(device_ieee=6c:5c:b1:ff:fe:2c:3b:88, unique_id='6c:5c:b1:ff:fe:2c:3b:88', data={'unique_id': '6c:5c:b1:ff:fe:2c:3b:88:1:0x0008', 'endpoint_id': 1, 'cluster_id': 8, 'command': 'move', 'args': [<MoveMode.Down: 1>, 83, <OptionsMask: 0>, <Options: 0>], 'params': {'move_mode': <MoveMode.Down: 1>, 'rate': 83, 'options_mask': <OptionsMask: 0>, 'options_override': <Options: 0>}}, event_type='zha_event', event='zha_event') (1 listeners)
2025-04-17 19:10:43.322 DEBUG (MainThread) [zha] (ZHADeviceProxy) handling event protocol for event: ZHAEvent(device_ieee=6c:5c:b1:ff:fe:2c:3b:88, unique_id='6c:5c:b1:ff:fe:2c:3b:88', data={'unique_id': '6c:5c:b1:ff:fe:2c:3b:88:1:0x0008', 'endpoint_id': 1, 'cluster_id': 8, 'command': 'move', 'args': [<MoveMode.Down: 1>, 83, <OptionsMask: 0>, <Options: 0>], 'params': {'move_mode': <MoveMode.Down: 1>, 'rate': 83, 'options_mask': <OptionsMask: 0>, 'options_override': <Options: 0>}}, event_type='zha_event', event='zha_event')
2025-04-17 19:10:43.322 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:10:43.324 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: setting transitioning flag to True
2025-04-17 19:10:43.324 DEBUG (MainThread) [zigpy.util] Tries remaining: 3
2025-04-17 19:10:43.324 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending request header: ZCLHeader(frame_control=FrameControl<0x01>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=True, *is_general=False), tsn=9, command_id=4, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:43.325 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending request: move_to_level_with_on_off(level=244, transition_time=1)
2025-04-17 19:10:43.325 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 43, 325275, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=9, profile_id=260, cluster_id=8, data=Serialized[b'\x01\t\x04\xf4\x01\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:43.328 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=8, TSN=9, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x01\x09\x04\xF4\x01\x00')
2025-04-17 19:10:43.340 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:43.345 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=9)
2025-04-17 19:10:43.370 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=8, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=4415505, TSN=0, Data=b'\x08\x09\x0B\x04\x00', MacSrcAddr=0x32B8, MsgResultRadius=29)
2025-04-17 19:10:43.370 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 43, 370664, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=8, data=Serialized[b'\x08\t\x0b\x04\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:10:43.371 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Received ZCL frame: b'\x08\t\x0b\x04\x00'
2025-04-17 19:10:43.371 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=9, command_id=11, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:43.371 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame: LevelControl:Default_Response(command_id=4, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:43.371 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: handling color commands after turning on/level
2025-04-17 19:10:43.371 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: starting transitioning timer for 0.35
2025-04-17 19:10:43.371 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: turned on: {'move_to_level_with_on_off': Default_Response(command_id=4, status=<Status.SUCCESS: 0>)}
2025-04-17 19:10:43.371 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.LIGHT: 'light'>, unique_id='28:68:47:ff:fe:56:9f:f8-1', device_ieee=28:68:47:ff:fe:56:9f:f8, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:43.371 DEBUG (MainThread) [homeassistant.components.zha.entity] light.cuisine_plans_de_travail: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.LIGHT: 'light'>, unique_id='28:68:47:ff:fe:56:9f:f8-1', device_ieee=28:68:47:ff:fe:56:9f:f8, endpoint_id=1, group_id=None)
2025-04-17 19:10:43.428 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: setting transitioning flag to True
2025-04-17 19:10:43.428 DEBUG (MainThread) [zigpy.util] Tries remaining: 3
2025-04-17 19:10:43.428 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending request header: ZCLHeader(frame_control=FrameControl<0x01>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=True, *is_general=False), tsn=10, command_id=4, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:43.429 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending request: move_to_level_with_on_off(level=234, transition_time=1)
2025-04-17 19:10:43.429 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 43, 429327, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=10, profile_id=260, cluster_id=8, data=Serialized[b'\x01\n\x04\xea\x01\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:43.429 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=8, TSN=10, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x01\x0A\x04\xEA\x01\x00')
2025-04-17 19:10:43.441 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:43.445 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=10)
2025-04-17 19:10:43.489 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=8, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=4422096, TSN=0, Data=b'\x08\x0A\x0B\x04\x00', MacSrcAddr=0x32B8, MsgResultRadius=29)
2025-04-17 19:10:43.490 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=8, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=54, SecurityUse=<Bool.false: 0>, TimeStamp=4422690, TSN=0, Data=b'\x08\x5A\x0A\x00\x00\x20\xF4', MacSrcAddr=0x32B8, MsgResultRadius=29)
2025-04-17 19:10:43.490 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 43, 490270, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=8, data=Serialized[b'\x08\n\x0b\x04\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:10:43.490 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Received ZCL frame: b'\x08\n\x0b\x04\x00'
2025-04-17 19:10:43.490 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=10, command_id=11, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:43.490 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame: LevelControl:Default_Response(command_id=4, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:43.491 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 43, 491150, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=8, data=Serialized[b'\x08Z\n\x00\x00 \xf4'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=54, rssi=None)
2025-04-17 19:10:43.491 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Received ZCL frame: b'\x08Z\n\x00\x00 \xf4'
2025-04-17 19:10:43.491 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=90, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:43.491 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame: LevelControl:Report_Attributes(attribute_reports=[Attribute(attrid=0x0000, value=TypeValue(type=uint8_t, value=244))])
2025-04-17 19:10:43.491 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Received command 0x0A (TSN 90): Report_Attributes(attribute_reports=[Attribute(attrid=0x0000, value=TypeValue(type=uint8_t, value=244))])
2025-04-17 19:10:43.492 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Attribute report received: current_level=244
2025-04-17 19:10:43.492 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x32B8:1:0x0008]: received attribute: 0 update with value: 244
2025-04-17 19:10:43.492 DEBUG (MainThread) [zha] Emitting event cluster_handler_level_changed with data LevelChangeEvent(level=244, event='cluster_handler_set_level', event_type='cluster_handler_event') (1 listeners)
2025-04-17 19:10:43.492 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: received level change event LevelChangeEvent(level=244, event='cluster_handler_set_level', event_type='cluster_handler_event') while transitioning - skipping update
2025-04-17 19:10:43.492 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: handling color commands after turning on/level
2025-04-17 19:10:43.492 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: starting transitioning timer for 0.35
2025-04-17 19:10:43.492 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: turned on: {'move_to_level_with_on_off': Default_Response(command_id=4, status=<Status.SUCCESS: 0>)}
2025-04-17 19:10:43.492 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.LIGHT: 'light'>, unique_id='28:68:47:ff:fe:56:9f:f8-1', device_ieee=28:68:47:ff:fe:56:9f:f8, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:43.492 DEBUG (MainThread) [homeassistant.components.zha.entity] light.cuisine_plans_de_travail: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.LIGHT: 'light'>, unique_id='28:68:47:ff:fe:56:9f:f8-1', device_ieee=28:68:47:ff:fe:56:9f:f8, endpoint_id=1, group_id=None)
2025-04-17 19:10:43.492 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending reply header: ZCLHeader(frame_control=FrameControl<0x10>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=90, command_id=<GeneralCommand.Default_Response: 11>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:43.493 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending reply: Default_Response(command_id=10, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:43.493 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 43, 493253, tzinfo=datetime.timezone.utc), priority=<PacketPriority.LOW: -1>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=90, profile_id=260, cluster_id=8, data=Serialized[b'\x10Z\x0b\n\x00'], tx_options=<TransmitOptions.ACK: 1>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:43.493 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=8, TSN=90, Options=<TransmitOptions.ACK_REQUEST|SUPPRESS_ROUTE_DISC_NETWORK: 48>, Radius=0, Data=b'\x10\x5A\x0B\x0A\x00')
2025-04-17 19:10:43.505 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:43.520 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=90)
2025-04-17 19:10:43.531 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: setting transitioning flag to True
2025-04-17 19:10:43.531 DEBUG (MainThread) [zigpy.util] Tries remaining: 3
2025-04-17 19:10:43.532 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending request header: ZCLHeader(frame_control=FrameControl<0x01>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=True, *is_general=False), tsn=11, command_id=4, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:43.532 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending request: move_to_level_with_on_off(level=224, transition_time=1)
2025-04-17 19:10:43.532 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 43, 532557, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=11, profile_id=260, cluster_id=8, data=Serialized[b'\x01\x0b\x04\xe0\x01\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:43.533 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=8, TSN=11, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x01\x0B\x04\xE0\x01\x00')
2025-04-17 19:10:43.544 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:43.548 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=11)
2025-04-17 19:10:43.568 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=8, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=4428178, TSN=0, Data=b'\x08\x0B\x0B\x04\x00', MacSrcAddr=0x32B8, MsgResultRadius=29)
2025-04-17 19:10:43.568 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 43, 568748, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=8, data=Serialized[b'\x08\x0b\x0b\x04\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:10:43.569 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Received ZCL frame: b'\x08\x0b\x0b\x04\x00'
2025-04-17 19:10:43.569 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=11, command_id=11, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:43.569 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame: LevelControl:Default_Response(command_id=4, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:43.569 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: handling color commands after turning on/level
2025-04-17 19:10:43.569 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: starting transitioning timer for 0.35
2025-04-17 19:10:43.569 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: turned on: {'move_to_level_with_on_off': Default_Response(command_id=4, status=<Status.SUCCESS: 0>)}
2025-04-17 19:10:43.569 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.LIGHT: 'light'>, unique_id='28:68:47:ff:fe:56:9f:f8-1', device_ieee=28:68:47:ff:fe:56:9f:f8, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:43.569 DEBUG (MainThread) [homeassistant.components.zha.entity] light.cuisine_plans_de_travail: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.LIGHT: 'light'>, unique_id='28:68:47:ff:fe:56:9f:f8-1', device_ieee=28:68:47:ff:fe:56:9f:f8, endpoint_id=1, group_id=None)
2025-04-17 19:10:43.634 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: setting transitioning flag to True
2025-04-17 19:10:43.634 DEBUG (MainThread) [zigpy.util] Tries remaining: 3
2025-04-17 19:10:43.634 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending request header: ZCLHeader(frame_control=FrameControl<0x01>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=True, *is_general=False), tsn=12, command_id=4, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:43.634 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending request: move_to_level_with_on_off(level=214, transition_time=1)
2025-04-17 19:10:43.635 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 43, 634989, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=12, profile_id=260, cluster_id=8, data=Serialized[b'\x01\x0c\x04\xd6\x01\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:43.635 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=8, TSN=12, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x01\x0C\x04\xD6\x01\x00')
2025-04-17 19:10:43.647 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:43.651 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=12)
2025-04-17 19:10:43.671 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=8, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=4434336, TSN=0, Data=b'\x08\x0C\x0B\x04\x00', MacSrcAddr=0x32B8, MsgResultRadius=29)
2025-04-17 19:10:43.672 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 43, 671994, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=8, data=Serialized[b'\x08\x0c\x0b\x04\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:10:43.672 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Received ZCL frame: b'\x08\x0c\x0b\x04\x00'
2025-04-17 19:10:43.672 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=12, command_id=11, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:43.672 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame: LevelControl:Default_Response(command_id=4, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:43.672 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: handling color commands after turning on/level
2025-04-17 19:10:43.672 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: starting transitioning timer for 0.35
2025-04-17 19:10:43.673 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: turned on: {'move_to_level_with_on_off': Default_Response(command_id=4, status=<Status.SUCCESS: 0>)}
2025-04-17 19:10:43.673 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.LIGHT: 'light'>, unique_id='28:68:47:ff:fe:56:9f:f8-1', device_ieee=28:68:47:ff:fe:56:9f:f8, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:43.673 DEBUG (MainThread) [homeassistant.components.zha.entity] light.cuisine_plans_de_travail: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.LIGHT: 'light'>, unique_id='28:68:47:ff:fe:56:9f:f8-1', device_ieee=28:68:47:ff:fe:56:9f:f8, endpoint_id=1, group_id=None)
2025-04-17 19:10:43.737 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: setting transitioning flag to True
2025-04-17 19:10:43.737 DEBUG (MainThread) [zigpy.util] Tries remaining: 3
2025-04-17 19:10:43.737 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending request header: ZCLHeader(frame_control=FrameControl<0x01>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=True, *is_general=False), tsn=13, command_id=4, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:43.737 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending request: move_to_level_with_on_off(level=204, transition_time=1)
2025-04-17 19:10:43.737 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 43, 737779, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=13, profile_id=260, cluster_id=8, data=Serialized[b'\x01\r\x04\xcc\x01\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:43.738 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=8, TSN=13, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x01\x0D\x04\xCC\x01\x00')
2025-04-17 19:10:43.750 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:43.754 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=13)
2025-04-17 19:10:43.776 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=8, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=4440881, TSN=0, Data=b'\x08\x0D\x0B\x04\x00', MacSrcAddr=0x32B8, MsgResultRadius=29)
2025-04-17 19:10:43.776 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 43, 776670, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=8, data=Serialized[b'\x08\r\x0b\x04\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:10:43.777 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Received ZCL frame: b'\x08\r\x0b\x04\x00'
2025-04-17 19:10:43.777 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=13, command_id=11, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:43.777 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame: LevelControl:Default_Response(command_id=4, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:43.777 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: handling color commands after turning on/level
2025-04-17 19:10:43.777 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: starting transitioning timer for 0.35
2025-04-17 19:10:43.777 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: turned on: {'move_to_level_with_on_off': Default_Response(command_id=4, status=<Status.SUCCESS: 0>)}
2025-04-17 19:10:43.777 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.LIGHT: 'light'>, unique_id='28:68:47:ff:fe:56:9f:f8-1', device_ieee=28:68:47:ff:fe:56:9f:f8, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:43.777 DEBUG (MainThread) [homeassistant.components.zha.entity] light.cuisine_plans_de_travail: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.LIGHT: 'light'>, unique_id='28:68:47:ff:fe:56:9f:f8-1', device_ieee=28:68:47:ff:fe:56:9f:f8, endpoint_id=1, group_id=None)
2025-04-17 19:10:43.814 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:10:43.839 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: setting transitioning flag to True
2025-04-17 19:10:43.839 DEBUG (MainThread) [zigpy.util] Tries remaining: 3
2025-04-17 19:10:43.839 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending request header: ZCLHeader(frame_control=FrameControl<0x01>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=True, *is_general=False), tsn=14, command_id=4, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:43.840 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending request: move_to_level_with_on_off(level=194, transition_time=1)
2025-04-17 19:10:43.840 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 43, 840199, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=14, profile_id=260, cluster_id=8, data=Serialized[b'\x01\x0e\x04\xc2\x01\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:43.840 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=8, TSN=14, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x01\x0E\x04\xC2\x01\x00')
2025-04-17 19:10:43.866 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:43.867 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=14)
2025-04-17 19:10:43.867 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=8, SrcAddr=0xA4A7, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=4446308, TSN=0, Data=b'\x11\x0C\x07', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:10:43.867 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 43, 867408, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=8, data=Serialized[b'\x11\x0c\x07'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:10:43.867 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0008] Received ZCL frame: b'\x11\x0c\x07'
2025-04-17 19:10:43.867 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0008] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x11>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=0, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=True, *is_general=False), tsn=12, command_id=7, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:43.868 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0008] Decoded ZCL frame: LevelControl:stop_with_on_off()
2025-04-17 19:10:43.868 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0008] Received command 0x07 (TSN 12): stop_with_on_off()
2025-04-17 19:10:43.868 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0008] No explicit handler for cluster command 0x07: stop_with_on_off()
2025-04-17 19:10:43.868 DEBUG (MainThread) [zha] Emitting event zha_event with data ZHAEvent(device_ieee=6c:5c:b1:ff:fe:2c:3b:88, unique_id='6c:5c:b1:ff:fe:2c:3b:88', data={'unique_id': '6c:5c:b1:ff:fe:2c:3b:88:1:0x0008', 'endpoint_id': 1, 'cluster_id': 8, 'command': 'stop_with_on_off', 'args': [], 'params': {}}, event_type='zha_event', event='zha_event') (1 listeners)
2025-04-17 19:10:43.868 DEBUG (MainThread) [zha] (ZHADeviceProxy) handling event protocol for event: ZHAEvent(device_ieee=6c:5c:b1:ff:fe:2c:3b:88, unique_id='6c:5c:b1:ff:fe:2c:3b:88', data={'unique_id': '6c:5c:b1:ff:fe:2c:3b:88:1:0x0008', 'endpoint_id': 1, 'cluster_id': 8, 'command': 'stop_with_on_off', 'args': [], 'params': {}}, event_type='zha_event', event='zha_event')
2025-04-17 19:10:43.868 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:10:43.880 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=8, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=4447345, TSN=0, Data=b'\x08\x0E\x0B\x04\x00', MacSrcAddr=0x32B8, MsgResultRadius=29)
2025-04-17 19:10:43.880 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 43, 880384, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=8, data=Serialized[b'\x08\x0e\x0b\x04\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:10:43.880 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Received ZCL frame: b'\x08\x0e\x0b\x04\x00'
2025-04-17 19:10:43.880 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=14, command_id=11, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:43.881 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame: LevelControl:Default_Response(command_id=4, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:43.881 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Received command 0x0B (TSN 14): Default_Response(command_id=4, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:44.254 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.ConcentratorInd.Callback(NWK=0x32B8, IEEE=28:68:47:ff:fe:56:9f:f8, PktCost=1)
2025-04-17 19:10:44.254 DEBUG (MainThread) [zigpy_znp.api] Command was not handled
2025-04-17 19:10:44.482 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=8, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=4484679, TSN=0, Data=b'\x08\x5B\x0A\x00\x00\x20\xC2', MacSrcAddr=0x32B8, MsgResultRadius=29)
2025-04-17 19:10:44.482 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 44, 482862, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=8, data=Serialized[b'\x08[\n\x00\x00 \xc2'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:10:44.483 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Received ZCL frame: b'\x08[\n\x00\x00 \xc2'
2025-04-17 19:10:44.483 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=91, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:44.483 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame: LevelControl:Report_Attributes(attribute_reports=[Attribute(attrid=0x0000, value=TypeValue(type=uint8_t, value=194))])
2025-04-17 19:10:44.483 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Received command 0x0A (TSN 91): Report_Attributes(attribute_reports=[Attribute(attrid=0x0000, value=TypeValue(type=uint8_t, value=194))])
2025-04-17 19:10:44.483 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Attribute report received: current_level=194
2025-04-17 19:10:44.484 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x32B8:1:0x0008]: received attribute: 0 update with value: 194
2025-04-17 19:10:44.484 DEBUG (MainThread) [zha] Emitting event cluster_handler_level_changed with data LevelChangeEvent(level=194, event='cluster_handler_set_level', event_type='cluster_handler_event') (1 listeners)
2025-04-17 19:10:44.484 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: received level change event LevelChangeEvent(level=194, event='cluster_handler_set_level', event_type='cluster_handler_event') while transitioning - skipping update
2025-04-17 19:10:44.484 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending reply header: ZCLHeader(frame_control=FrameControl<0x10>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=91, command_id=<GeneralCommand.Default_Response: 11>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:44.484 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending reply: Default_Response(command_id=10, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:44.484 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 44, 484672, tzinfo=datetime.timezone.utc), priority=<PacketPriority.LOW: -1>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=91, profile_id=260, cluster_id=8, data=Serialized[b'\x10[\x0b\n\x00'], tx_options=<TransmitOptions.ACK: 1>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:44.484 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=8, TSN=91, Options=<TransmitOptions.ACK_REQUEST|SUPPRESS_ROUTE_DISC_NETWORK: 48>, Radius=0, Data=b'\x10\x5B\x0B\x0A\x00')
2025-04-17 19:10:44.496 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:44.513 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=91)
2025-04-17 19:10:47.080 DEBUG (MainThread) [zigpy_znp.api] Received command: ZDO.SrcRtgInd.Callback(DstAddr=0xA4A7, Relays=[0x32B8])
2025-04-17 19:10:47.136 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=6, SrcAddr=0xA4A7, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=54, SecurityUse=<Bool.false: 0>, TimeStamp=4650895, TSN=0, Data=b'\x11\x0D\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:10:47.136 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 47, 136955, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xA4A7), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=6, data=Serialized[b'\x11\r\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=54, rssi=None)
2025-04-17 19:10:47.137 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0006] Received ZCL frame: b'\x11\r\x00'
2025-04-17 19:10:47.137 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0006] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x11>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=0, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=True, *is_general=False), tsn=13, command_id=0, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:47.137 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0006] Decoded ZCL frame: OnOff:off()
2025-04-17 19:10:47.137 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0006] Received command 0x00 (TSN 13): off()
2025-04-17 19:10:47.137 DEBUG (MainThread) [zigpy.zcl] [0xA4A7:1:0x0006] No explicit handler for cluster command 0x00: off()
2025-04-17 19:10:47.137 DEBUG (MainThread) [zha] Emitting event zha_event with data ZHAEvent(device_ieee=6c:5c:b1:ff:fe:2c:3b:88, unique_id='6c:5c:b1:ff:fe:2c:3b:88', data={'unique_id': '6c:5c:b1:ff:fe:2c:3b:88:1:0x0006', 'endpoint_id': 1, 'cluster_id': 6, 'command': 'off', 'args': [], 'params': {}}, event_type='zha_event', event='zha_event') (1 listeners)
2025-04-17 19:10:47.138 DEBUG (MainThread) [zha] (ZHADeviceProxy) handling event protocol for event: ZHAEvent(device_ieee=6c:5c:b1:ff:fe:2c:3b:88, unique_id='6c:5c:b1:ff:fe:2c:3b:88', data={'unique_id': '6c:5c:b1:ff:fe:2c:3b:88:1:0x0006', 'endpoint_id': 1, 'cluster_id': 6, 'command': 'off', 'args': [], 'params': {}}, event_type='zha_event', event='zha_event')
2025-04-17 19:10:47.138 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:10:47.139 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: setting transitioning flag to True
2025-04-17 19:10:47.139 DEBUG (MainThread) [zigpy.util] Tries remaining: 3
2025-04-17 19:10:47.139 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Sending request header: ZCLHeader(frame_control=FrameControl<0x01>(frame_type=<FrameType.CLUSTER_COMMAND: 1>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=True, *is_general=False), tsn=15, command_id=0, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:47.139 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Sending request: off()
2025-04-17 19:10:47.139 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 47, 139809, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=15, profile_id=260, cluster_id=6, data=Serialized[b'\x01\x0f\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:47.140 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=6, TSN=15, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x01\x0F\x00')
2025-04-17 19:10:47.151 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:47.156 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=15)
2025-04-17 19:10:47.199 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=6, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=54, SecurityUse=<Bool.false: 0>, TimeStamp=4653997, TSN=0, Data=b'\x08\x0F\x0B\x00\x00', MacSrcAddr=0x32B8, MsgResultRadius=29)
2025-04-17 19:10:47.200 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=6, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=54, SecurityUse=<Bool.false: 0>, TimeStamp=4654423, TSN=0, Data=b'\x08\x5C\x0A\x00\x00\x10\x00', MacSrcAddr=0x32B8, MsgResultRadius=29)
2025-04-17 19:10:47.200 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 47, 200299, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=6, data=Serialized[b'\x08\x0f\x0b\x00\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=54, rssi=None)
2025-04-17 19:10:47.200 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Received ZCL frame: b'\x08\x0f\x0b\x00\x00'
2025-04-17 19:10:47.200 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=15, command_id=11, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:47.201 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Decoded ZCL frame: OnOff:Default_Response(command_id=0, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:47.201 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 47, 201193, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=6, data=Serialized[b'\x08\\\n\x00\x00\x10\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=54, rssi=None)
2025-04-17 19:10:47.201 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Received ZCL frame: b'\x08\\\n\x00\x00\x10\x00'
2025-04-17 19:10:47.201 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=92, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:47.201 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Decoded ZCL frame: OnOff:Report_Attributes(attribute_reports=[Attribute(attrid=0x0000, value=TypeValue(type=Bool, value=<Bool.false: 0>))])
2025-04-17 19:10:47.201 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Received command 0x0A (TSN 92): Report_Attributes(attribute_reports=[Attribute(attrid=0x0000, value=TypeValue(type=Bool, value=<Bool.false: 0>))])
2025-04-17 19:10:47.202 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Attribute report received: on_off=<Bool.false: 0>
2025-04-17 19:10:47.202 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x32B8:1:0x0006]: cluster_handler[on_off] attribute_updated - cluster[On/Off] attr[on_off] value[Bool.false]
2025-04-17 19:10:47.202 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='on_off', attribute_value=<Bool.false: 0>, cluster_handler_unique_id='28:68:47:ff:fe:56:9f:f8:1:0x0006', cluster_id=6, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (2 listeners)
2025-04-17 19:10:47.202 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: received onoff Bool.false while transitioning - skipping update
2025-04-17 19:10:47.202 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: starting transitioning timer for 1.25
2025-04-17 19:10:47.202 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: turned off: Default_Response(command_id=0, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:47.202 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.LIGHT: 'light'>, unique_id='28:68:47:ff:fe:56:9f:f8-1', device_ieee=28:68:47:ff:fe:56:9f:f8, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:47.202 DEBUG (MainThread) [homeassistant.components.zha.entity] light.cuisine_plans_de_travail: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.LIGHT: 'light'>, unique_id='28:68:47:ff:fe:56:9f:f8-1', device_ieee=28:68:47:ff:fe:56:9f:f8, endpoint_id=1, group_id=None)
2025-04-17 19:10:47.202 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Sending reply header: ZCLHeader(frame_control=FrameControl<0x10>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=92, command_id=<GeneralCommand.Default_Response: 11>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:47.203 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Sending reply: Default_Response(command_id=10, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:47.203 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 47, 203256, tzinfo=datetime.timezone.utc), priority=<PacketPriority.LOW: -1>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=92, profile_id=260, cluster_id=6, data=Serialized[b'\x10\\\x0b\n\x00'], tx_options=<TransmitOptions.ACK: 1>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:47.203 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=6, TSN=92, Options=<TransmitOptions.ACK_REQUEST|SUPPRESS_ROUTE_DISC_NETWORK: 48>, Radius=0, Data=b'\x10\x5C\x0B\x0A\x00')
2025-04-17 19:10:47.215 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:47.231 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=92)
2025-04-17 19:10:48.453 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: transition complete - future attribute reports will write HA state
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.decorators] [<Task pending name='device-availability-checker_DeviceAvailabilityChecker' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.helpers::DeviceAvailabilityChecker.check_device_availability]
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.application.helpers] Device availability checker interval starting
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.application.helpers] Checking device availability
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0x6CCC](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0x6CCC](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0x7D24](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0x7D24](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0x689F](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0x689F](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0x7D1E](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0x7D1E](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0xB6F6](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0xB6F6](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0x579D](ZBMINIL2): Device seen - marking the device available and resetting counter
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0x579D](ZBMINIL2): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0x7012](SNZB-02P): Device seen - marking the device available and resetting counter
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0x7012](SNZB-02P): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0xB12F](TS011F): Device seen - marking the device available and resetting counter
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0xB12F](TS011F): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0x45AF](ZBMINIL2): Device seen - marking the device available and resetting counter
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0x45AF](ZBMINIL2): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0xEAC6](SNZB-02P): last_seen is 83171.76461625099 seconds ago and ping attempts have been exhausted, marking the device unavailable
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0xEAC6](SNZB-02P): Update device availability -  device available: False - new availability: False - changed: False
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0x32B8](TRADFRI Driver 30W): Device seen - marking the device available and resetting counter
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0x32B8](TRADFRI Driver 30W): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0xA4A7](RODRET Dimmer): Device seen - marking the device available and resetting counter
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.zigbee.device] [0xA4A7](RODRET Dimmer): Update device availability -  device available: True - new availability: True - changed: False
2025-04-17 19:10:48.561 DEBUG (MainThread) [zha.application.helpers] Device availability checker interval finished
2025-04-17 19:10:49.076 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:fb:20:a9:7a:66-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:49.076 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:fb:20:a9:7a:66-1-1794-summation_delivered: polling for updated state
2025-04-17 19:10:49.076 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:fb:20:a9:7a:66-1-1794-summation_delivered: polling current state
2025-04-17 19:10:49.076 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0702]: async_update
2025-04-17 19:10:49.076 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:10:49.076 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=36, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:49.077 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:10:49.077 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 49, 77391, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D1E), dst_ep=1, source_route=None, extended_timeout=False, tsn=36, profile_id=260, cluster_id=1794, data=Serialized[b'\x00$\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:49.077 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x7D1E), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=36, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x24\x00\x00\x00\x00\x02')
2025-04-17 19:10:49.089 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:49.092 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=36)
2025-04-17 19:10:49.114 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0x7D1E, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=123, SecurityUse=<Bool.false: 0>, TimeStamp=4774412, TSN=0, Data=b'\x18\x24\x01\x00\x00\x00\x25\xF4\x01\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x7D1E, MsgResultRadius=29)
2025-04-17 19:10:49.114 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 49, 114711, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D1E), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18$\x01\x00\x00\x00%\xf4\x01\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=123, rssi=None)
2025-04-17 19:10:49.115 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0702] Received ZCL frame: b'\x18$\x01\x00\x00\x00%\xf4\x01\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:10:49.115 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=36, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:49.115 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=500)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:10:49.115 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[500]
2025-04-17 19:10:49.115 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=500, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:49.115 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:10:49.115 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:49.116 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0702]: Got attributes: {'current_summ_delivered': 500, 'status': <bitmap8: 0>}
2025-04-17 19:10:51.255 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=99, SecurityUse=<Bool.false: 0>, TimeStamp=4907551, TSN=0, Data=b'\x18\x12\x0A\x08\x05\x21\x3E\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:10:51.255 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 51, 255531, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\x12\n\x08\x05!>\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=99, rssi=None)
2025-04-17 19:10:51.255 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received ZCL frame: b'\x18\x12\n\x08\x05!>\x00'
2025-04-17 19:10:51.255 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=18, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:51.256 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=62))])
2025-04-17 19:10:51.256 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received command 0x0A (TSN 18): Report_Attributes(attribute_reports=[Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=62))])
2025-04-17 19:10:51.256 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Attribute report received: rms_current=62
2025-04-17 19:10:51.256 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[62]
2025-04-17 19:10:51.256 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=62, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:51.257 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=99, SecurityUse=<Bool.false: 0>, TimeStamp=4907738, TSN=0, Data=b'\x18\x13\x0A\x05\x05\x21\xED\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:10:51.257 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 51, 257216, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\x13\n\x05\x05!\xed\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=99, rssi=None)
2025-04-17 19:10:51.257 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received ZCL frame: b'\x18\x13\n\x05\x05!\xed\x00'
2025-04-17 19:10:51.257 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=19, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:51.257 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=237))])
2025-04-17 19:10:51.258 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received command 0x0A (TSN 19): Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=237))])
2025-04-17 19:10:51.258 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Attribute report received: rms_voltage=237
2025-04-17 19:10:51.258 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[237]
2025-04-17 19:10:51.258 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=237, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:51.258 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:03:75:85:ed:14-1-2820-rms_voltage', device_ieee=a4:c1:38:03:75:85:ed:14, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:51.258 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lampe_tv_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:03:75:85:ed:14-1-2820-rms_voltage', device_ieee=a4:c1:38:03:75:85:ed:14, endpoint_id=1, group_id=None)
2025-04-17 19:10:51.671 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x7D1E, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=123, SecurityUse=<Bool.false: 0>, TimeStamp=4934309, TSN=0, Data=b'\x18\xEE\x0A\x05\x05\x21\xEC\x00', MacSrcAddr=0x7D1E, MsgResultRadius=29)
2025-04-17 19:10:51.671 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 51, 671876, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D1E), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\xee\n\x05\x05!\xec\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=123, rssi=None)
2025-04-17 19:10:51.672 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Received ZCL frame: b'\x18\xee\n\x05\x05!\xec\x00'
2025-04-17 19:10:51.672 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=238, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:51.672 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=236))])
2025-04-17 19:10:51.672 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Received command 0x0A (TSN 238): Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=236))])
2025-04-17 19:10:51.672 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Attribute report received: rms_voltage=236
2025-04-17 19:10:51.673 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[236]
2025-04-17 19:10:51.673 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=236, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:51.673 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:fb:20:a9:7a:66-1-2820-rms_voltage', device_ieee=a4:c1:38:fb:20:a9:7a:66, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:51.673 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lava_lampe_rouge_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:fb:20:a9:7a:66-1-2820-rms_voltage', device_ieee=a4:c1:38:fb:20:a9:7a:66, endpoint_id=1, group_id=None)
2025-04-17 19:10:51.873 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:e7:5d:17:99:21-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:51.873 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:e7:5d:17:99:21-1-1794-summation_delivered: polling for updated state
2025-04-17 19:10:51.873 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:e7:5d:17:99:21-1-1794-summation_delivered: polling current state
2025-04-17 19:10:51.873 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: async_update
2025-04-17 19:10:51.873 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:10:51.874 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=209, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:51.874 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:10:51.874 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 51, 874473, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), dst_ep=1, source_route=None, extended_timeout=False, tsn=209, profile_id=260, cluster_id=1794, data=Serialized[b'\x00\xd1\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:51.874 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xB12F), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=209, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xD1\x00\x00\x00\x00\x02')
2025-04-17 19:10:51.886 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:51.892 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=209)
2025-04-17 19:10:51.909 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:f3:e0:79:d4:a0-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:51.909 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:f3:e0:79:d4:a0-1-2820: polling for updated state
2025-04-17 19:10:51.909 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:f3:e0:79:d4:a0-1-2820: polling current state
2025-04-17 19:10:51.909 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: async_update
2025-04-17 19:10:51.909 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:10:51.910 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=46, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:51.910 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:10:51.910 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 51, 910568, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), dst_ep=1, source_route=None, extended_timeout=False, tsn=46, profile_id=260, cluster_id=2820, data=Serialized[b'\x00.\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:51.910 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x7D24), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=46, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x2E\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:10:51.930 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0xB12F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=57, SecurityUse=<Bool.false: 0>, TimeStamp=4950400, TSN=0, Data=b'\x18\xD1\x01\x00\x00\x00\x25\x04\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:10:51.931 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 51, 931017, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18\xd1\x01\x00\x00\x00%\x04\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=57, rssi=None)
2025-04-17 19:10:51.931 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Received ZCL frame: b'\x18\xd1\x01\x00\x00\x00%\x04\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:10:51.931 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=209, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:51.931 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=4)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:10:51.932 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[4]
2025-04-17 19:10:51.932 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=4, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:51.932 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:10:51.932 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:51.932 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0702]: Got attributes: {'current_summ_delivered': 4, 'status': <bitmap8: 0>}
2025-04-17 19:10:51.933 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:51.936 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=46)
2025-04-17 19:10:51.959 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x7D24, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=126, SecurityUse=<Bool.false: 0>, TimeStamp=4952169, TSN=0, Data=b'\x18\x2E\x01\x0B\x05\x00\x29\x00\x00\x08\x05\x00\x21\x00\x00\x05\x05\x00\x21\xEC\x00', MacSrcAddr=0x7D24, MsgResultRadius=29)
2025-04-17 19:10:51.959 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 51, 959330, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18.\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=126, rssi=None)
2025-04-17 19:10:51.959 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Received ZCL frame: b'\x18.\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'
2025-04-17 19:10:51.959 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=46, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:51.960 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=0)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=0)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=236))])
2025-04-17 19:10:51.960 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[0]
2025-04-17 19:10:51.960 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=0, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:51.960 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[0]
2025-04-17 19:10:51.960 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=0, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:51.960 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[236]
2025-04-17 19:10:51.960 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=236, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:51.960 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: Got attributes: {'active_power': 0, 'rms_current': 0, 'rms_voltage': 236}
2025-04-17 19:10:53.523 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:fb:20:a9:7a:66-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:53.523 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:fb:20:a9:7a:66-1-2820: polling for updated state
2025-04-17 19:10:53.524 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:fb:20:a9:7a:66-1-2820: polling current state
2025-04-17 19:10:53.524 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: async_update
2025-04-17 19:10:53.524 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:10:53.524 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=37, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:53.524 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:10:53.524 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 53, 524826, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D1E), dst_ep=1, source_route=None, extended_timeout=False, tsn=37, profile_id=260, cluster_id=2820, data=Serialized[b'\x00%\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:53.525 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x7D1E), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=37, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x25\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:10:53.537 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:53.542 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=37)
2025-04-17 19:10:53.565 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x7D1E, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=123, SecurityUse=<Bool.false: 0>, TimeStamp=5052524, TSN=0, Data=b'\x18\x25\x01\x0B\x05\x00\x29\x1A\x00\x08\x05\x00\x21\x6E\x00\x05\x05\x00\x21\xEB\x00', MacSrcAddr=0x7D1E, MsgResultRadius=29)
2025-04-17 19:10:53.565 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 53, 565222, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D1E), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18%\x01\x0b\x05\x00)\x1a\x00\x08\x05\x00!n\x00\x05\x05\x00!\xeb\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=123, rssi=None)
2025-04-17 19:10:53.565 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Received ZCL frame: b'\x18%\x01\x0b\x05\x00)\x1a\x00\x08\x05\x00!n\x00\x05\x05\x00!\xeb\x00'
2025-04-17 19:10:53.565 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=37, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:53.566 DEBUG (MainThread) [zigpy.zcl] [0x7D1E:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=26)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=110)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=235))])
2025-04-17 19:10:53.566 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[26]
2025-04-17 19:10:53.566 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=26, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:53.566 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[110]
2025-04-17 19:10:53.566 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=110, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:53.566 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[235]
2025-04-17 19:10:53.566 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=235, cluster_handler_unique_id='a4:c1:38:fb:20:a9:7a:66:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:53.566 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:fb:20:a9:7a:66-1-2820-rms_voltage', device_ieee=a4:c1:38:fb:20:a9:7a:66, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:53.566 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lava_lampe_rouge_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:fb:20:a9:7a:66-1-2820-rms_voltage', device_ieee=a4:c1:38:fb:20:a9:7a:66, endpoint_id=1, group_id=None)
2025-04-17 19:10:53.566 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D1E:1:0x0b04]: Got attributes: {'active_power': 26, 'rms_current': 110, 'rms_voltage': 235}
2025-04-17 19:10:55.271 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0xB12F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=60, SecurityUse=<Bool.false: 0>, TimeStamp=5159289, TSN=0, Data=b'\x18\xF8\x0A\x05\x05\x21\xED\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:10:55.271 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 55, 271559, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\xf8\n\x05\x05!\xed\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=60, rssi=None)
2025-04-17 19:10:55.271 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Received ZCL frame: b'\x18\xf8\n\x05\x05!\xed\x00'
2025-04-17 19:10:55.272 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=248, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:55.272 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=237))])
2025-04-17 19:10:55.272 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Received command 0x0A (TSN 248): Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=237))])
2025-04-17 19:10:55.272 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Attribute report received: rms_voltage=237
2025-04-17 19:10:55.272 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[237]
2025-04-17 19:10:55.272 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=237, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:55.272 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:e7:5d:17:99:21-1-2820-rms_voltage', device_ieee=a4:c1:38:e7:5d:17:99:21, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:55.272 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.chambre_lampe_rouge_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:e7:5d:17:99:21-1-2820-rms_voltage', device_ieee=a4:c1:38:e7:5d:17:99:21, endpoint_id=1, group_id=None)
2025-04-17 19:10:55.793 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x7D24, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=126, SecurityUse=<Bool.false: 0>, TimeStamp=5191902, TSN=0, Data=b'\x18\x46\x0A\x05\x05\x21\xED\x00', MacSrcAddr=0x7D24, MsgResultRadius=29)
2025-04-17 19:10:55.793 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 55, 793253, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18F\n\x05\x05!\xed\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=126, rssi=None)
2025-04-17 19:10:55.793 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Received ZCL frame: b'\x18F\n\x05\x05!\xed\x00'
2025-04-17 19:10:55.793 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=70, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:55.794 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=237))])
2025-04-17 19:10:55.794 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Received command 0x0A (TSN 70): Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=237))])
2025-04-17 19:10:55.794 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0b04] Attribute report received: rms_voltage=237
2025-04-17 19:10:55.794 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[237]
2025-04-17 19:10:55.794 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=237, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:55.794 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:f3:e0:79:d4:a0-1-2820-rms_voltage', device_ieee=a4:c1:38:f3:e0:79:d4:a0, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:55.794 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_guirlande_bleue_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:f3:e0:79:d4:a0-1-2820-rms_voltage', device_ieee=a4:c1:38:f3:e0:79:d4:a0, endpoint_id=1, group_id=None)
2025-04-17 19:10:55.819 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:f3:e0:79:d4:a0-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:55.819 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:f3:e0:79:d4:a0-1-1794-summation_delivered: polling for updated state
2025-04-17 19:10:55.819 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:f3:e0:79:d4:a0-1-1794-summation_delivered: polling current state
2025-04-17 19:10:55.820 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: async_update
2025-04-17 19:10:55.820 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:10:55.820 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=47, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:55.820 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:10:55.820 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 55, 820797, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), dst_ep=1, source_route=None, extended_timeout=False, tsn=47, profile_id=260, cluster_id=1794, data=Serialized[b'\x00/\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:55.821 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x7D24), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=47, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x2F\x00\x00\x00\x00\x02')
2025-04-17 19:10:55.832 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:55.836 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=47)
2025-04-17 19:10:55.858 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0x7D24, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=129, SecurityUse=<Bool.false: 0>, TimeStamp=5195906, TSN=0, Data=b'\x18\x2F\x01\x00\x00\x00\x25\x65\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x7D24, MsgResultRadius=29)
2025-04-17 19:10:55.858 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 55, 858528, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18/\x01\x00\x00\x00%e\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=129, rssi=None)
2025-04-17 19:10:55.858 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Received ZCL frame: b'\x18/\x01\x00\x00\x00%e\x00\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:10:55.859 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=47, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:55.859 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=101)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:10:55.859 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[101]
2025-04-17 19:10:55.859 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=101, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:55.859 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:10:55.859 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:55.859 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0702]: Got attributes: {'current_summ_delivered': 101, 'status': <bitmap8: 0>}
2025-04-17 19:10:55.914 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0xB6F6, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=48, SecurityUse=<Bool.false: 0>, TimeStamp=5199464, TSN=0, Data=b'\x18\xD4\x0A\x05\x05\x21\xED\x00', MacSrcAddr=0xB6F6, MsgResultRadius=29)
2025-04-17 19:10:55.914 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 55, 914315, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB6F6), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\xd4\n\x05\x05!\xed\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=48, rssi=None)
2025-04-17 19:10:55.914 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Received ZCL frame: b'\x18\xd4\n\x05\x05!\xed\x00'
2025-04-17 19:10:55.914 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=212, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:55.915 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=237))])
2025-04-17 19:10:55.915 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Received command 0x0A (TSN 212): Report_Attributes(attribute_reports=[Attribute(attrid=0x0505, value=TypeValue(type=uint16_t, value=237))])
2025-04-17 19:10:55.915 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Attribute report received: rms_voltage=237
2025-04-17 19:10:55.915 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[237]
2025-04-17 19:10:55.915 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=237, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:55.915 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:55:8b:3b:3e:9b-1-2820-rms_voltage', device_ieee=a4:c1:38:55:8b:3b:3e:9b, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:55.915 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lampe_rouge_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:55:8b:3b:3e:9b-1-2820-rms_voltage', device_ieee=a4:c1:38:55:8b:3b:3e:9b, endpoint_id=1, group_id=None)
2025-04-17 19:10:56.220 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:61:22:f9:ad:05-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:10:56.220 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-2820: polling for updated state
2025-04-17 19:10:56.220 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-2820: polling current state
2025-04-17 19:10:56.220 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: async_update
2025-04-17 19:10:56.220 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:10:56.220 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=68, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:56.221 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:10:56.221 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 56, 221318, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), dst_ep=1, source_route=None, extended_timeout=False, tsn=68, profile_id=260, cluster_id=2820, data=Serialized[b'\x00D\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:56.221 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x689F), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=68, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x44\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:10:56.233 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:56.238 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=68)
2025-04-17 19:10:56.260 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x689F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=114, SecurityUse=<Bool.false: 0>, TimeStamp=5221031, TSN=0, Data=b'\x18\x44\x01\x0B\x05\x00\x29\x00\x00\x08\x05\x00\x21\x00\x00\x05\x05\x00\x21\xED\x00', MacSrcAddr=0x689F, MsgResultRadius=29)
2025-04-17 19:10:56.261 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 56, 261082, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18D\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xed\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=114, rssi=None)
2025-04-17 19:10:56.261 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Received ZCL frame: b'\x18D\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xed\x00'
2025-04-17 19:10:56.261 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=68, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:56.261 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=0)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=0)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=237))])
2025-04-17 19:10:56.262 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[0]
2025-04-17 19:10:56.262 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=0, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:56.262 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[0]
2025-04-17 19:10:56.262 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=0, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:56.262 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[237]
2025-04-17 19:10:56.262 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=237, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:10:56.262 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:61:22:f9:ad:05-1-2820-rms_voltage', device_ieee=a4:c1:38:61:22:f9:ad:05, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:56.262 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lava_lampe_bleue_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:61:22:f9:ad:05-1-2820-rms_voltage', device_ieee=a4:c1:38:61:22:f9:ad:05, endpoint_id=1, group_id=None)
2025-04-17 19:10:56.262 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0b04]: Got attributes: {'active_power': 0, 'rms_current': 0, 'rms_voltage': 237}
2025-04-17 19:10:57.098 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1029, SrcAddr=0x7012, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=129, SecurityUse=<Bool.false: 0>, TimeStamp=5273457, TSN=0, Data=b'\x08\x54\x0A\x00\x00\x21\xA6\x0E', MacSrcAddr=0x7D24, MsgResultRadius=28)
2025-04-17 19:10:57.098 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 57, 98265, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7012), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1029, data=Serialized[b'\x08T\n\x00\x00!\xa6\x0e'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=129, rssi=None)
2025-04-17 19:10:57.098 DEBUG (MainThread) [zigpy.zcl] [0x7012:1:0x0405] Received ZCL frame: b'\x08T\n\x00\x00!\xa6\x0e'
2025-04-17 19:10:57.098 DEBUG (MainThread) [zigpy.zcl] [0x7012:1:0x0405] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=84, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:57.099 DEBUG (MainThread) [zigpy.zcl] [0x7012:1:0x0405] Decoded ZCL frame: RelativeHumidity:Report_Attributes(attribute_reports=[Attribute(attrid=0x0000, value=TypeValue(type=uint16_t, value=3750))])
2025-04-17 19:10:57.099 DEBUG (MainThread) [zigpy.zcl] [0x7012:1:0x0405] Received command 0x0A (TSN 84): Report_Attributes(attribute_reports=[Attribute(attrid=0x0000, value=TypeValue(type=uint16_t, value=3750))])
2025-04-17 19:10:57.099 DEBUG (MainThread) [zigpy.zcl] [0x7012:1:0x0405] Attribute report received: measured_value=3750
2025-04-17 19:10:57.099 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7012:1:0x0405]: cluster_handler[humidity] attribute_updated - cluster[Relative Humidity Measurement] attr[measured_value] value[3750]
2025-04-17 19:10:57.099 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='measured_value', attribute_value=3750, cluster_handler_unique_id='d4:48:67:ff:fe:2a:a6:61:1:0x0405', cluster_id=1029, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:10:57.099 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='d4:48:67:ff:fe:2a:a6:61-1-1029', device_ieee=d4:48:67:ff:fe:2a:a6:61, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:57.099 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_thermostat_humidity: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='d4:48:67:ff:fe:2a:a6:61-1-1029', device_ieee=d4:48:67:ff:fe:2a:a6:61, endpoint_id=1, group_id=None)
2025-04-17 19:10:57.099 DEBUG (MainThread) [zigpy.zcl] [0x7012:1:0x0405] Sending reply header: ZCLHeader(frame_control=FrameControl<0x10>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=84, command_id=<GeneralCommand.Default_Response: 11>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:57.100 DEBUG (MainThread) [zigpy.zcl] [0x7012:1:0x0405] Sending reply: Default_Response(command_id=10, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:57.100 DEBUG (MainThread) [zigpy.device] [0x7012] Extending timeout for 0x54 request
2025-04-17 19:10:57.100 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 57, 100383, tzinfo=datetime.timezone.utc), priority=<PacketPriority.LOW: -1>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7012), dst_ep=1, source_route=None, extended_timeout=True, tsn=84, profile_id=260, cluster_id=1029, data=Serialized[b'\x10T\x0b\n\x00'], tx_options=<TransmitOptions.ACK: 1>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:57.101 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x7012), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1029, TSN=84, Options=<TransmitOptions.ACK_REQUEST|SUPPRESS_ROUTE_DISC_NETWORK: 48>, Radius=0, Data=b'\x10\x54\x0B\x0A\x00')
2025-04-17 19:10:57.113 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:57.357 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=84)
2025-04-17 19:10:58.447 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=0, SrcAddr=0x7D24, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=129, SecurityUse=<Bool.false: 0>, TimeStamp=5358024, TSN=0, Data=b'\x08\x47\x0A\x01\x00\x20\x50\xE2\xFF\x20\x38\xE4\xFF\x20\x00', MacSrcAddr=0x7D24, MsgResultRadius=29)
2025-04-17 19:10:58.447 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 58, 447325, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=0, data=Serialized[b'\x08G\n\x01\x00 P\xe2\xff 8\xe4\xff \x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=129, rssi=None)
2025-04-17 19:10:58.447 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0000] Received ZCL frame: b'\x08G\n\x01\x00 P\xe2\xff 8\xe4\xff \x00'
2025-04-17 19:10:58.447 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0000] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=71, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:58.448 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0000] Decoded ZCL frame: Basic:Report_Attributes(attribute_reports=[Attribute(attrid=0x0001, value=TypeValue(type=uint8_t, value=80)), Attribute(attrid=0xFFE2, value=TypeValue(type=uint8_t, value=56)), Attribute(attrid=0xFFE4, value=TypeValue(type=uint8_t, value=0))])
2025-04-17 19:10:58.448 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0000] Received command 0x0A (TSN 71): Report_Attributes(attribute_reports=[Attribute(attrid=0x0001, value=TypeValue(type=uint8_t, value=80)), Attribute(attrid=0xFFE2, value=TypeValue(type=uint8_t, value=56)), Attribute(attrid=0xFFE4, value=TypeValue(type=uint8_t, value=0))])
2025-04-17 19:10:58.448 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0000] Attribute report received: app_version=80, 0xFFE2=56, 0xFFE4=0
2025-04-17 19:10:58.448 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0000]: cluster_handler[basic] attribute_updated - cluster[Basic] attr[app_version] value[80]
2025-04-17 19:10:58.448 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1, attribute_name='app_version', attribute_value=80, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0000', cluster_id=0, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (2 listeners)
2025-04-17 19:10:58.448 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:f3:e0:79:d4:a0-1-0-lqi', device_ieee=a4:c1:38:f3:e0:79:d4:a0, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:58.448 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_guirlande_bleue_lqi: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:f3:e0:79:d4:a0-1-0-lqi', device_ieee=a4:c1:38:f3:e0:79:d4:a0, endpoint_id=1, group_id=None)
2025-04-17 19:10:58.448 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0000]: cluster_handler[basic] attribute_updated - cluster[Basic] attr[65506] value[56]
2025-04-17 19:10:58.449 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=65506, attribute_name=65506, attribute_value=56, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0000', cluster_id=0, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (2 listeners)
2025-04-17 19:10:58.449 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x7D24:1:0x0000]: cluster_handler[basic] attribute_updated - cluster[Basic] attr[65508] value[0]
2025-04-17 19:10:58.449 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=65508, attribute_name=65508, attribute_value=0, cluster_handler_unique_id='a4:c1:38:f3:e0:79:d4:a0:1:0x0000', cluster_id=0, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (2 listeners)
2025-04-17 19:10:58.449 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0000] Sending reply header: ZCLHeader(frame_control=FrameControl<0x10>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=71, command_id=<GeneralCommand.Default_Response: 11>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:58.449 DEBUG (MainThread) [zigpy.zcl] [0x7D24:1:0x0000] Sending reply: Default_Response(command_id=10, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:58.449 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 58, 449777, tzinfo=datetime.timezone.utc), priority=<PacketPriority.LOW: -1>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x7D24), dst_ep=1, source_route=None, extended_timeout=False, tsn=71, profile_id=260, cluster_id=0, data=Serialized[b'\x10G\x0b\n\x00'], tx_options=<TransmitOptions.ACK: 1>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:58.451 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x7D24), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=0, TSN=71, Options=<TransmitOptions.ACK_REQUEST|SUPPRESS_ROUTE_DISC_NETWORK: 48>, Radius=0, Data=b'\x10\x47\x0B\x0A\x00')
2025-04-17 19:10:58.463 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:58.478 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=71)
2025-04-17 19:10:58.999 DEBUG (MainThread) [zigpy.application] Feeding watchdog
2025-04-17 19:10:58.999 DEBUG (MainThread) [zigpy_znp.api] Sending request: SYS.Ping.Req()
2025-04-17 19:10:59.004 DEBUG (MainThread) [zigpy_znp.api] Received command: SYS.Ping.Rsp(Capabilities=<MTCapabilities.SYS|AF|ZDO|UTIL|GP|APP_CNF: 1625>)
2025-04-17 19:10:59.454 DEBUG (MainThread) [zha.decorators] [<Task pending name='light_refresh_28:68:47:ff:fe:56:9f:f8-1' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.light::Light._refresh]
2025-04-17 19:10:59.454 DEBUG (MainThread) [zha.application.platforms] 28:68:47:ff:fe:56:9f:f8-1: polling current state
2025-04-17 19:10:59.454 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=16, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:59.454 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Sending request: Read_Attributes(attribute_ids=[0])
2025-04-17 19:10:59.455 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 59, 455060, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=16, profile_id=260, cluster_id=6, data=Serialized[b'\x00\x10\x00\x00\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:59.455 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=6, TSN=16, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x10\x00\x00\x00')
2025-04-17 19:10:59.467 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:59.477 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=16)
2025-04-17 19:10:59.489 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=6, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=54, SecurityUse=<Bool.false: 0>, TimeStamp=5423196, TSN=0, Data=b'\x18\x10\x01\x00\x00\x00\x10\x00', MacSrcAddr=0x32B8, MsgResultRadius=29)
2025-04-17 19:10:59.489 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 59, 489243, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=6, data=Serialized[b'\x18\x10\x01\x00\x00\x00\x10\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=54, rssi=None)
2025-04-17 19:10:59.489 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Received ZCL frame: b'\x18\x10\x01\x00\x00\x00\x10\x00'
2025-04-17 19:10:59.489 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=16, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:59.490 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0006] Decoded ZCL frame: OnOff:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=Bool, value=<Bool.false: 0>))])
2025-04-17 19:10:59.490 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x32B8:1:0x0006]: cluster_handler[on_off] attribute_updated - cluster[On/Off] attr[on_off] value[Bool.false]
2025-04-17 19:10:59.490 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='on_off', attribute_value=<Bool.false: 0>, cluster_handler_unique_id='28:68:47:ff:fe:56:9f:f8:1:0x0006', cluster_id=6, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (2 listeners)
2025-04-17 19:10:59.490 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=17, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:59.490 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Sending request: Read_Attributes(attribute_ids=[0])
2025-04-17 19:10:59.490 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 59, 490926, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), dst_ep=1, source_route=None, extended_timeout=False, tsn=17, profile_id=260, cluster_id=8, data=Serialized[b'\x00\x11\x00\x00\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:59.491 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x32B8), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=8, TSN=17, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x11\x00\x00\x00')
2025-04-17 19:10:59.502 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:59.506 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=17)
2025-04-17 19:10:59.525 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=8, SrcAddr=0x32B8, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=54, SecurityUse=<Bool.false: 0>, TimeStamp=5425156, TSN=0, Data=b'\x18\x11\x01\x00\x00\x00\x20\xC2', MacSrcAddr=0x32B8, MsgResultRadius=29)
2025-04-17 19:10:59.525 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 59, 525779, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x32B8), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=8, data=Serialized[b'\x18\x11\x01\x00\x00\x00 \xc2'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=54, rssi=None)
2025-04-17 19:10:59.526 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Received ZCL frame: b'\x18\x11\x01\x00\x00\x00 \xc2'
2025-04-17 19:10:59.526 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=17, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:59.526 DEBUG (MainThread) [zigpy.zcl] [0x32B8:1:0x0008] Decoded ZCL frame: LevelControl:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint8_t, value=194))])
2025-04-17 19:10:59.527 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x32B8:1:0x0008]: received attribute: 0 update with value: 194
2025-04-17 19:10:59.527 DEBUG (MainThread) [zha] Emitting event cluster_handler_level_changed with data LevelChangeEvent(level=194, event='cluster_handler_set_level', event_type='cluster_handler_event') (1 listeners)
2025-04-17 19:10:59.527 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.LIGHT: 'light'>, unique_id='28:68:47:ff:fe:56:9f:f8-1', device_ieee=28:68:47:ff:fe:56:9f:f8, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:59.527 DEBUG (MainThread) [homeassistant.components.zha.entity] light.cuisine_plans_de_travail: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.LIGHT: 'light'>, unique_id='28:68:47:ff:fe:56:9f:f8-1', device_ieee=28:68:47:ff:fe:56:9f:f8, endpoint_id=1, group_id=None)
2025-04-17 19:10:59.686 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=0, SrcAddr=0xB6F6, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=42, SecurityUse=<Bool.false: 0>, TimeStamp=5435502, TSN=0, Data=b'\x08\xD5\x0A\x01\x00\x20\x4E\xE2\xFF\x20\x38\xE4\xFF\x20\x00', MacSrcAddr=0xB6F6, MsgResultRadius=29)
2025-04-17 19:10:59.686 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 59, 686889, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB6F6), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=0, data=Serialized[b'\x08\xd5\n\x01\x00 N\xe2\xff 8\xe4\xff \x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=42, rssi=None)
2025-04-17 19:10:59.687 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0000] Received ZCL frame: b'\x08\xd5\n\x01\x00 N\xe2\xff 8\xe4\xff \x00'
2025-04-17 19:10:59.687 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0000] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x08>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=213, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:10:59.687 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0000] Decoded ZCL frame: Basic:Report_Attributes(attribute_reports=[Attribute(attrid=0x0001, value=TypeValue(type=uint8_t, value=78)), Attribute(attrid=0xFFE2, value=TypeValue(type=uint8_t, value=56)), Attribute(attrid=0xFFE4, value=TypeValue(type=uint8_t, value=0))])
2025-04-17 19:10:59.687 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0000] Received command 0x0A (TSN 213): Report_Attributes(attribute_reports=[Attribute(attrid=0x0001, value=TypeValue(type=uint8_t, value=78)), Attribute(attrid=0xFFE2, value=TypeValue(type=uint8_t, value=56)), Attribute(attrid=0xFFE4, value=TypeValue(type=uint8_t, value=0))])
2025-04-17 19:10:59.688 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0000] Attribute report received: app_version=78, 0xFFE2=56, 0xFFE4=0
2025-04-17 19:10:59.688 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0000]: cluster_handler[basic] attribute_updated - cluster[Basic] attr[app_version] value[78]
2025-04-17 19:10:59.688 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1, attribute_name='app_version', attribute_value=78, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0000', cluster_id=0, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (2 listeners)
2025-04-17 19:10:59.688 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:55:8b:3b:3e:9b-1-0-lqi', device_ieee=a4:c1:38:55:8b:3b:3e:9b, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:10:59.688 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lampe_rouge_lqi: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:55:8b:3b:3e:9b-1-0-lqi', device_ieee=a4:c1:38:55:8b:3b:3e:9b, endpoint_id=1, group_id=None)
2025-04-17 19:10:59.688 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0000]: cluster_handler[basic] attribute_updated - cluster[Basic] attr[65506] value[56]
2025-04-17 19:10:59.688 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=65506, attribute_name=65506, attribute_value=56, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0000', cluster_id=0, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (2 listeners)
2025-04-17 19:10:59.688 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0000]: cluster_handler[basic] attribute_updated - cluster[Basic] attr[65508] value[0]
2025-04-17 19:10:59.688 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=65508, attribute_name=65508, attribute_value=0, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0000', cluster_id=0, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (2 listeners)
2025-04-17 19:10:59.689 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0000] Sending reply header: ZCLHeader(frame_control=FrameControl<0x10>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=213, command_id=<GeneralCommand.Default_Response: 11>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:10:59.689 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0000] Sending reply: Default_Response(command_id=10, status=<Status.SUCCESS: 0>)
2025-04-17 19:10:59.689 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 10, 59, 689576, tzinfo=datetime.timezone.utc), priority=<PacketPriority.LOW: -1>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB6F6), dst_ep=1, source_route=None, extended_timeout=False, tsn=213, profile_id=260, cluster_id=0, data=Serialized[b'\x10\xd5\x0b\n\x00'], tx_options=<TransmitOptions.ACK: 1>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:10:59.691 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xB6F6), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=0, TSN=213, Options=<TransmitOptions.ACK_REQUEST|SUPPRESS_ROUTE_DISC_NETWORK: 48>, Radius=0, Data=b'\x10\xD5\x0B\x0A\x00')
2025-04-17 19:10:59.703 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:10:59.724 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=213)
2025-04-17 19:11:03.600 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:e7:5d:17:99:21-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:11:03.601 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:e7:5d:17:99:21-1-2820: polling for updated state
2025-04-17 19:11:03.601 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:e7:5d:17:99:21-1-2820: polling current state
2025-04-17 19:11:03.601 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: async_update
2025-04-17 19:11:03.601 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:11:03.601 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=210, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:11:03.601 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:11:03.602 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 11, 3, 601988, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), dst_ep=1, source_route=None, extended_timeout=False, tsn=210, profile_id=260, cluster_id=2820, data=Serialized[b'\x00\xd2\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:11:03.602 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xB12F), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=210, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xD2\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:11:03.614 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:11:03.618 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=210)
2025-04-17 19:11:03.660 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0xB12F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=63, SecurityUse=<Bool.false: 0>, TimeStamp=5683482, TSN=0, Data=b'\x18\xD2\x01\x0B\x05\x00\x29\x00\x00\x08\x05\x00\x21\x00\x00\x05\x05\x00\x21\xEC\x00', MacSrcAddr=0x32B8, MsgResultRadius=28)
2025-04-17 19:11:03.660 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 11, 3, 660381, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB12F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\xd2\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=28, non_member_radius=0, lqi=63, rssi=None)
2025-04-17 19:11:03.660 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Received ZCL frame: b'\x18\xd2\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'
2025-04-17 19:11:03.660 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=210, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:11:03.661 DEBUG (MainThread) [zigpy.zcl] [0xB12F:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=0)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=0)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=236))])
2025-04-17 19:11:03.661 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[0]
2025-04-17 19:11:03.661 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=0, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:11:03.661 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[0]
2025-04-17 19:11:03.661 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=0, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:11:03.661 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[236]
2025-04-17 19:11:03.661 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=236, cluster_handler_unique_id='a4:c1:38:e7:5d:17:99:21:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:11:03.661 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:e7:5d:17:99:21-1-2820-rms_voltage', device_ieee=a4:c1:38:e7:5d:17:99:21, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:11:03.661 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.chambre_lampe_rouge_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:e7:5d:17:99:21-1-2820-rms_voltage', device_ieee=a4:c1:38:e7:5d:17:99:21, endpoint_id=1, group_id=None)
2025-04-17 19:11:03.662 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB12F:1:0x0b04]: Got attributes: {'active_power': 0, 'rms_current': 0, 'rms_voltage': 236}
2025-04-17 19:11:05.423 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:03:75:85:ed:14-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:11:05.423 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-2820: polling for updated state
2025-04-17 19:11:05.423 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-2820: polling current state
2025-04-17 19:11:05.423 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: async_update
2025-04-17 19:11:05.423 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:11:05.423 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=194, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:11:05.424 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:11:05.424 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 11, 5, 424387, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), dst_ep=1, source_route=None, extended_timeout=False, tsn=194, profile_id=260, cluster_id=2820, data=Serialized[b'\x00\xc2\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:11:05.424 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x6CCC), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=194, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xC2\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:11:05.436 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:11:05.442 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=194)
2025-04-17 19:11:05.465 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=102, SecurityUse=<Bool.false: 0>, TimeStamp=5796275, TSN=0, Data=b'\x18\xC2\x01\x0B\x05\x00\x29\x08\x00\x08\x05\x00\x21\x3F\x00\x05\x05\x00\x21\xEC\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:11:05.465 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 11, 5, 465243, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\xc2\x01\x0b\x05\x00)\x08\x00\x08\x05\x00!?\x00\x05\x05\x00!\xec\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=102, rssi=None)
2025-04-17 19:11:05.465 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received ZCL frame: b'\x18\xc2\x01\x0b\x05\x00)\x08\x00\x08\x05\x00!?\x00\x05\x05\x00!\xec\x00'
2025-04-17 19:11:05.465 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=194, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:11:05.466 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=8)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=63)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=236))])
2025-04-17 19:11:05.466 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[8]
2025-04-17 19:11:05.466 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=8, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:11:05.466 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[63]
2025-04-17 19:11:05.466 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=63, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:11:05.466 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[236]
2025-04-17 19:11:05.466 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=236, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:11:05.466 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:03:75:85:ed:14-1-2820-rms_voltage', device_ieee=a4:c1:38:03:75:85:ed:14, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:11:05.466 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lampe_tv_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:03:75:85:ed:14-1-2820-rms_voltage', device_ieee=a4:c1:38:03:75:85:ed:14, endpoint_id=1, group_id=None)
2025-04-17 19:11:05.467 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: Got attributes: {'active_power': 8, 'rms_current': 63, 'rms_voltage': 236}
2025-04-17 19:11:07.244 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=102, SecurityUse=<Bool.false: 0>, TimeStamp=5907620, TSN=0, Data=b'\x18\x14\x0A\x08\x05\x21\x40\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:11:07.245 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 11, 7, 245113, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\x14\n\x08\x05!@\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=102, rssi=None)
2025-04-17 19:11:07.245 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received ZCL frame: b'\x18\x14\n\x08\x05!@\x00'
2025-04-17 19:11:07.245 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=20, command_id=10, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:11:07.245 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Report_Attributes(attribute_reports=[Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=64))])
2025-04-17 19:11:07.246 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Received command 0x0A (TSN 20): Report_Attributes(attribute_reports=[Attribute(attrid=0x0508, value=TypeValue(type=uint16_t, value=64))])
2025-04-17 19:11:07.246 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0b04] Attribute report received: rms_current=64
2025-04-17 19:11:07.246 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[64]
2025-04-17 19:11:07.246 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=64, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:11:08.287 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:03:75:85:ed:14-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:11:08.287 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-1794-summation_delivered: polling for updated state
2025-04-17 19:11:08.287 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:03:75:85:ed:14-1-1794-summation_delivered: polling current state
2025-04-17 19:11:08.287 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: async_update
2025-04-17 19:11:08.287 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:11:08.287 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=195, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:11:08.287 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:11:08.288 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 11, 8, 288088, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), dst_ep=1, source_route=None, extended_timeout=False, tsn=195, profile_id=260, cluster_id=1794, data=Serialized[b'\x00\xc3\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:11:08.288 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x6CCC), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=195, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xC3\x00\x00\x00\x00\x02')
2025-04-17 19:11:08.300 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:11:08.304 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=195)
2025-04-17 19:11:08.327 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0x6CCC, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=99, SecurityUse=<Bool.false: 0>, TimeStamp=5975187, TSN=0, Data=b'\x18\xC3\x01\x00\x00\x00\x25\x1D\x04\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x6CCC, MsgResultRadius=29)
2025-04-17 19:11:08.327 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 11, 8, 327391, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x6CCC), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18\xc3\x01\x00\x00\x00%\x1d\x04\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=99, rssi=None)
2025-04-17 19:11:08.327 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Received ZCL frame: b'\x18\xc3\x01\x00\x00\x00%\x1d\x04\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:11:08.327 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=195, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:11:08.328 DEBUG (MainThread) [zigpy.zcl] [0x6CCC:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=1053)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:11:08.328 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[1053]
2025-04-17 19:11:08.328 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=1053, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:11:08.328 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:11:08.328 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:03:75:85:ed:14:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:11:08.328 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x6CCC:1:0x0702]: Got attributes: {'current_summ_delivered': 1053, 'status': <bitmap8: 0>}
2025-04-17 19:11:10.121 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:61:22:f9:ad:05-1-1794-summation_delivered_PolledSmartEnergySummation' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:11:10.121 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-1794-summation_delivered: polling for updated state
2025-04-17 19:11:10.121 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:61:22:f9:ad:05-1-1794-summation_delivered: polling current state
2025-04-17 19:11:10.121 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: async_update
2025-04-17 19:11:10.121 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: Reading attributes in chunks: ['current_summ_delivered', 'status']
2025-04-17 19:11:10.121 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=69, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:11:10.121 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Sending request: Read_Attributes(attribute_ids=[0, 512])
2025-04-17 19:11:10.122 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 11, 10, 122076, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), dst_ep=1, source_route=None, extended_timeout=False, tsn=69, profile_id=260, cluster_id=1794, data=Serialized[b'\x00E\x00\x00\x00\x00\x02'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:11:10.122 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0x689F), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=1794, TSN=69, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\x45\x00\x00\x00\x00\x02')
2025-04-17 19:11:10.134 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:11:10.138 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=69)
2025-04-17 19:11:10.160 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=1794, SrcAddr=0x689F, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=117, SecurityUse=<Bool.false: 0>, TimeStamp=6089804, TSN=0, Data=b'\x18\x45\x01\x00\x00\x00\x25\xC7\x02\x00\x00\x00\x00\x00\x02\x00\x18\x00', MacSrcAddr=0x689F, MsgResultRadius=29)
2025-04-17 19:11:10.161 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 11, 10, 160990, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x689F), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=1794, data=Serialized[b'\x18E\x01\x00\x00\x00%\xc7\x02\x00\x00\x00\x00\x00\x02\x00\x18\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=117, rssi=None)
2025-04-17 19:11:10.161 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Received ZCL frame: b'\x18E\x01\x00\x00\x00%\xc7\x02\x00\x00\x00\x00\x00\x02\x00\x18\x00'
2025-04-17 19:11:10.161 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=69, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:11:10.161 DEBUG (MainThread) [zigpy.zcl] [0x689F:1:0x0702] Decoded ZCL frame: TuyaZBMeteringCluster:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=0, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint48_t, value=711)), ReadAttributeRecord(attrid=512, status=<Status.SUCCESS: 0>, value=TypeValue(type=bitmap8, value=<bitmap8: 0>))])
2025-04-17 19:11:10.162 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[current_summ_delivered] value[711]
2025-04-17 19:11:10.162 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=0, attribute_name='current_summ_delivered', attribute_value=711, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:11:10.162 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: cluster_handler[smartenergy_metering] attribute_updated - cluster[TuyaZBMeteringCluster] attr[status] value[0]
2025-04-17 19:11:10.162 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=512, attribute_name='status', attribute_value=<bitmap8: 0>, cluster_handler_unique_id='a4:c1:38:61:22:f9:ad:05:1:0x0702', cluster_id=1794, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (1 listeners)
2025-04-17 19:11:10.162 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0x689F:1:0x0702]: Got attributes: {'current_summ_delivered': 711, 'status': <bitmap8: 0>}
2025-04-17 19:11:11.489 DEBUG (MainThread) [zha.decorators] [<Task pending name='sensor_state_poller_a4:c1:38:55:8b:3b:3e:9b-1-2820_PolledElectricalMeasurement' coro=<periodic.<locals>.scheduler.<locals>.wrapper() running at /usr/local/lib/python3.13/site-packages/zha/decorators.py:78> cb=[set.remove()]>] executing periodic task [zha.application.platforms.sensor::PollableSensor._refresh]
2025-04-17 19:11:11.490 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:55:8b:3b:3e:9b-1-2820: polling for updated state
2025-04-17 19:11:11.490 DEBUG (MainThread) [zha.application.platforms] a4:c1:38:55:8b:3b:3e:9b-1-2820: polling current state
2025-04-17 19:11:11.490 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: async_update
2025-04-17 19:11:11.490 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: Reading attributes in chunks: ['active_power', 'rms_current', 'rms_voltage']
2025-04-17 19:11:11.490 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Sending request header: ZCLHeader(frame_control=FrameControl<0x00>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=False, direction=<Direction.Client_to_Server: 0>, disable_default_response=0, reserved=0, *is_cluster=False, *is_general=True), tsn=217, command_id=<GeneralCommand.Read_Attributes: 0>, *direction=<Direction.Client_to_Server: 0>)
2025-04-17 19:11:11.490 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Sending request: Read_Attributes(attribute_ids=[1291, 1288, 1285])
2025-04-17 19:11:11.490 DEBUG (MainThread) [zigpy_znp.zigbee.application] Sending packet ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 11, 11, 490833, tzinfo=datetime.timezone.utc), priority=<PacketPriority.NORMAL: 0>, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB6F6), dst_ep=1, source_route=None, extended_timeout=False, tsn=217, profile_id=260, cluster_id=2820, data=Serialized[b'\x00\xd9\x00\x0b\x05\x08\x05\x05\x05'], tx_options=<TransmitOptions.NONE: 0>, radius=0, non_member_radius=0, lqi=None, rssi=None)
2025-04-17 19:11:11.491 DEBUG (MainThread) [zigpy_znp.api] Sending request: AF.DataRequestExt.Req(DstAddrModeAddress=AddrModeAddress(mode=<AddrMode.NWK: 2>, address=0xB6F6), DstEndpoint=1, DstPanId=0x0000, SrcEndpoint=1, ClusterId=2820, TSN=217, Options=<TransmitOptions.SUPPRESS_ROUTE_DISC_NETWORK: 32>, Radius=0, Data=b'\x00\xD9\x00\x0B\x05\x08\x05\x05\x05')
2025-04-17 19:11:11.505 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataRequestExt.Rsp(Status=<Status.SUCCESS: 0>)
2025-04-17 19:11:11.509 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.DataConfirm.Callback(Status=<Status.SUCCESS: 0>, Endpoint=1, TSN=217)
2025-04-17 19:11:11.537 DEBUG (MainThread) [zigpy_znp.api] Received command: AF.IncomingMsg.Callback(GroupId=0x0000, ClusterId=2820, SrcAddr=0xB6F6, SrcEndpoint=1, DstEndpoint=1, WasBroadcast=<Bool.false: 0>, LQI=51, SecurityUse=<Bool.false: 0>, TimeStamp=6175828, TSN=0, Data=b'\x18\xD9\x01\x0B\x05\x00\x29\x00\x00\x08\x05\x00\x21\x00\x00\x05\x05\x00\x21\xEC\x00', MacSrcAddr=0xB6F6, MsgResultRadius=29)
2025-04-17 19:11:11.537 DEBUG (MainThread) [zigpy.application] Received a packet: ZigbeePacket(timestamp=datetime.datetime(2025, 4, 17, 17, 11, 11, 537836, tzinfo=datetime.timezone.utc), priority=0, src=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0xB6F6), src_ep=1, dst=AddrModeAddress(addr_mode=<AddrMode.NWK: 2>, address=0x0000), dst_ep=1, source_route=None, extended_timeout=False, tsn=0, profile_id=260, cluster_id=2820, data=Serialized[b'\x18\xd9\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'], tx_options=<TransmitOptions.NONE: 0>, radius=29, non_member_radius=0, lqi=51, rssi=None)
2025-04-17 19:11:11.538 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Received ZCL frame: b'\x18\xd9\x01\x0b\x05\x00)\x00\x00\x08\x05\x00!\x00\x00\x05\x05\x00!\xec\x00'
2025-04-17 19:11:11.538 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Decoded ZCL frame header: ZCLHeader(frame_control=FrameControl<0x18>(frame_type=<FrameType.GLOBAL_COMMAND: 0>, is_manufacturer_specific=0, direction=<Direction.Server_to_Client: 1>, disable_default_response=1, reserved=0, *is_cluster=False, *is_general=True), tsn=217, command_id=1, *direction=<Direction.Server_to_Client: 1>)
2025-04-17 19:11:11.538 DEBUG (MainThread) [zigpy.zcl] [0xB6F6:1:0x0b04] Decoded ZCL frame: TuyaZBElectricalMeasurement:Read_Attributes_rsp(status_records=[ReadAttributeRecord(attrid=1291, status=<Status.SUCCESS: 0>, value=TypeValue(type=int16s, value=0)), ReadAttributeRecord(attrid=1288, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=0)), ReadAttributeRecord(attrid=1285, status=<Status.SUCCESS: 0>, value=TypeValue(type=uint16_t, value=236))])
2025-04-17 19:11:11.538 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[active_power] value[0]
2025-04-17 19:11:11.538 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1291, attribute_name='active_power', attribute_value=0, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:11:11.539 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_current] value[0]
2025-04-17 19:11:11.539 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1288, attribute_name='rms_current', attribute_value=0, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:11:11.539 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: cluster_handler[electrical_measurement] attribute_updated - cluster[Electrical Measurement] attr[rms_voltage] value[236]
2025-04-17 19:11:11.539 DEBUG (MainThread) [zha] Emitting event cluster_handler_attribute_updated with data ClusterAttributeUpdatedEvent(attribute_id=1285, attribute_name='rms_voltage', attribute_value=236, cluster_handler_unique_id='a4:c1:38:55:8b:3b:3e:9b:1:0x0b04', cluster_id=2820, event_type='cluster_handler_event', event='cluster_handler_attribute_updated') (3 listeners)
2025-04-17 19:11:11.539 DEBUG (MainThread) [zha] Emitting event state_changed with data EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:55:8b:3b:3e:9b-1-2820-rms_voltage', device_ieee=a4:c1:38:55:8b:3b:3e:9b, endpoint_id=1, group_id=None) (1 listeners)
2025-04-17 19:11:11.539 DEBUG (MainThread) [homeassistant.components.zha.entity] sensor.salon_lampe_rouge_voltage: Handling event from entity: EntityStateChangedEvent(event_type='entity', event='state_changed', platform=<Platform.SENSOR: 'sensor'>, unique_id='a4:c1:38:55:8b:3b:3e:9b-1-2820-rms_voltage', device_ieee=a4:c1:38:55:8b:3b:3e:9b, endpoint_id=1, group_id=None)
2025-04-17 19:11:11.539 DEBUG (MainThread) [zha.zigbee.cluster_handlers] [0xB6F6:1:0x0b04]: Got attributes: {'active_power': 0, 'rms_current': 0, 'rms_voltage': 236}
2025-04-17 19:11:44.784 WARNING (Recorder) [homeassistant.components.recorder.entity_registry] Cannot migrate history for entity_id `sensor.ikea_of_sweden_rodret_dimmer_battery` to `sensor.cuisine_telecommande_battery` because the new entity_id is already in use
2025-04-17 19:11:44.792 WARNING (Recorder) [homeassistant.components.recorder.entity_registry] Cannot migrate history for entity_id `update.ikea_of_sweden_rodret_dimmer_firmware` to `update.cuisine_telecommande_firmware` because the new entity_id is already in use
2025-04-17 19:11:44.801 WARNING (Recorder) [homeassistant.components.recorder.entity_registry] Cannot migrate history for entity_id `button.ikea_of_sweden_rodret_dimmer_identify` to `button.cuisine_telecommande_identify` because the new entity_id is already in use
2025-04-17 19:11:44.807 WARNING (Recorder) [homeassistant.components.recorder.entity_registry] Cannot migrate history for entity_id `sensor.ikea_of_sweden_rodret_dimmer_lqi` to `sensor.cuisine_telecommande_lqi` because the new entity_id is already in use
2025-04-17 19:11:44.812 WARNING (Recorder) [homeassistant.components.recorder.entity_registry] Cannot migrate history for entity_id `sensor.ikea_of_sweden_rodret_dimmer_rssi` to `sensor.cuisine_telecommande_rssi` because the new entity_id is already in use
2025-04-17 19:12:21.802 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:12:23.058 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:12:53.728 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:12:53.864 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:13:01.597 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:13:01.601 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:13:08.048 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:13:08.704 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:13:59.139 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:14:02.215 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:14:04.023 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:14:05.208 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:14:07.870 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:14:09.321 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:14:38.233 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=50>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:14:38.235 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=46>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:14:41.035 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=54>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:14:41.036 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=50>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:14:47.009 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:14:50.645 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:15:25.865 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=58>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:15:25.866 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=54>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:16:15.511 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=204>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 19:16:15.513 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=204>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 19:16:15.515 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.) renders=156>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified
2025-04-17 19:16:15.517 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = state_attr("sensor.tz3000_2putqrmw_ts011f_summation_delivered_2", "consumption").0 %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 19:16:15.518 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified
2025-04-17 19:16:15.520 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 19:16:15.522 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=110>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 19:16:15.524 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=114>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 19:16:15.526 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 19:16:15.527 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=114>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 19:16:15.528 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=138>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 19:16:15.530 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
TypeError: float() argument must be a string or a real number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 19:16:15.531 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=114>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 19:16:15.533 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set wh = state_attr("sensor.lava_lampe_rouge_cons", "consumption").0 %} {% set cost_today = 0.1979 * wh / 1000 %} Today used {{ wh / 1000 }} kWh and cost €{{ cost_today | round(2) }}.) renders=224>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 19:16:30.353 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=62>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:17:01.343 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=66>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:17:01.345 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=58>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:17:36.045 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=70>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:17:36.047 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=62>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:18:40.921 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=74>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:18:40.923 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=66>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:19:06.145 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=78>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:19:06.147 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=70>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:19:07.552 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=82>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:19:07.553 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=74>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:20:26.162 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=86>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:20:26.163 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=78>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:20:28.342 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=90>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:20:28.343 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=82>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:21:08.245 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=94>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:21:08.246 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=86>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:21:48.393 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=98>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:21:48.394 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=90>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:34:48.093 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:36:49.007 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=102>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:36:49.009 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=94>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:36:53.716 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=106>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:36:53.719 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=98>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:36:54.916 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=110>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:36:54.918 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=102>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 19:50:09.482 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:50:11.482 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:50:12.757 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:50:13.995 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:50:14.880 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 19:50:19.806 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=114>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 19:50:19.809 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=106>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 20:02:35.970 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=118>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 20:02:35.971 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=110>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 20:02:46.670 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=122>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 20:02:46.672 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=114>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 20:03:05.019 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=126>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 20:03:05.025 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=118>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 20:08:01.864 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=222>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 20:08:01.867 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=222>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 20:08:01.869 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.) renders=178>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified
2025-04-17 20:08:01.870 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=18>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}' but no default was specified
2025-04-17 20:08:01.872 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = state_attr("sensor.tz3000_2putqrmw_ts011f_summation_delivered_2", "consumption").0 %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=26>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 20:08:01.876 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=34>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified
2025-04-17 20:08:01.879 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.) renders=34>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 20:08:01.882 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=114>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 20:08:01.884 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=118>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 20:08:01.885 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.) renders=34>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 20:08:01.886 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=118>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 20:08:01.888 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=142>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 20:08:01.890 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.) renders=34>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
TypeError: float() argument must be a string or a real number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 20:08:01.892 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=118>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 20:26:29.932 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=130>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 20:26:29.934 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=122>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 20:31:44.406 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 20:49:35.016 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=228>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.dishwasher_off")) %} {% if states("binary_sensor.dishwasher") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 20:49:35.018 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}) renders=228>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2148, in forgiving_as_timestamp
    return dt_util.as_timestamp(value)
           ~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/src/homeassistant/homeassistant/util/dt.py", line 155, in as_timestamp
    raise ValueError("not a valid date/time.")
ValueError: not a valid date/time.

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/local/lib/python3.13/site-packages/jinja2/sandbox.py", line 401, in call
    return __context.call(__obj, *args, **kwargs)
           ~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2151, in forgiving_as_timestamp
    raise_no_default("as_timestamp", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: as_timestamp got invalid input 'unknown' when rendering template '{% set on_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_on")) %} {% set off_for = as_timestamp(now()) - as_timestamp(states("input_datetime.washing_machine_off")) %} {% if states("binary_sensor.washing_machine") == "on" %}
  Has been on for {{ (on_for / 60)|round(0) }} minutes.
{% else %}
  Has been off for {{ (off_for / 3600)|round(1) }} hours.
{% endif %}' but no default was specified
2025-04-17 20:49:35.020 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.) renders=186>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Today {{ states("sensor.daily_power")|round(2) }} kWh and {{ states("sensor.daily_gas")|round(2) }} m³ gas.' but no default was specified
2025-04-17 20:49:35.022 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}) renders=22>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}' but no default was specified
2025-04-17 20:49:35.024 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = state_attr("sensor.tz3000_2putqrmw_ts011f_summation_delivered_2", "consumption").0 %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=30>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
jinja2.exceptions.UndefinedError: None has no element 0

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: UndefinedError: None has no element 0
2025-04-17 20:49:35.027 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.) renders=38>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '{% set kwh = states("sensor.washing_machine_daily_energy") | float %} {% set cost_today = 0.1979 * kwh %} Today used {{ kwh }} kWh and cost €{{ cost_today | round(2) }}.' but no default was specified
2025-04-17 20:49:35.028 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.) renders=38>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.daily_gas")|round(2) }} m³ gas → €{{ states("sensor.daily_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 20:49:35.030 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.) renders=118>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.daily_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float)|round(2)}} = €{{ (states("sensor.daily_gas_cost")|float + states("sensor.daily_power_cost")|float + states("sensor.daily_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 20:49:35.031 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.) renders=122>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost")|float|round(2) }}.' but no default was specified
2025-04-17 20:49:35.033 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.) renders=38>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_gas")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost")|float|round(2) }}.' but no default was specified
2025-04-17 20:49:35.034 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.) renders=122>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost")|float + states("sensor.monthly_power_cost")|float + states("sensor.monthly_energy_fixed_cost")|float)|round(2) }}.' but no default was specified
2025-04-17 20:49:35.035 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.) renders=146>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template '{{ states("sensor.monthly_power_last_period")|round(2) }} kWh power → €{{ states("sensor.monthly_power_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 20:49:35.037 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=({{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.) renders=38>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
TypeError: float() argument must be a string or a real number, not 'NoneType'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'None' when rendering template '{{ state_attr("sensor.monthly_gas", "last_period")|round(2) }} m³ gas → €{{ states("sensor.monthly_gas_cost_last_period")|float|round(2) }}.' but no default was specified
2025-04-17 20:49:35.038 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.) renders=122>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2385, in forgiving_float_filter
    return float(value)
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2388, in forgiving_float_filter
    raise_no_default("float", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: float got invalid input 'unknown' when rendering template '€{{ states("sensor.monthly_energy_fixed_cost_last_period")|float|round(2) }} (fixed) + €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float)|round(2)}} = €{{ (states("sensor.monthly_gas_cost_last_period")|float + states("sensor.monthly_power_cost_last_period")|float + states("sensor.monthly_energy_fixed_cost_last_period")|float)|round(2) }}.' but no default was specified
2025-04-17 20:49:37.469 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=134>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 20:49:37.470 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=126>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 21:00:31.906 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 21:40:09.398 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 21:40:28.748 WARNING (MainThread) [homeassistant.helpers.template] Template variable warning: 'dict object' has no attribute 'topic' when rendering '{{ trigger.topic }}'
2025-04-17 22:51:50.400 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}) renders=138>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois : {{ states("sensor.monthly_power") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost") | float | round(2) }}' but no default was specified
2025-04-17 22:51:50.403 ERROR (MainThread) [homeassistant.helpers.event] Error while processing template: Template<template=(Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.) renders=130>
Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1961, in forgiving_round
    value = round(float(value), precision)
                  ~~~~~^^^^^^^
ValueError: could not convert string to float: 'unknown'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 644, in async_render
    render_result = _render_with_context(self.template, compiled, **kwargs)
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 2904, in _render_with_context
    return template.render(**kwargs)
           ~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 1295, in render
    self.environment.handle_exception()
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/local/lib/python3.13/site-packages/jinja2/environment.py", line 942, in handle_exception
    raise rewrite_traceback_stack(source=source)
  File "<template>", line 1, in top-level template code
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1966, in forgiving_round
    raise_no_default("round", value)
    ~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 1942, in raise_no_default
    raise ValueError(
    ...<2 lines>...
    )
ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 761, in async_render_to_info
    render_info._result = self.async_render(  # noqa: SLF001
                          ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^
        variables, strict=strict, log_fn=log_fn, **kwargs
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/usr/src/homeassistant/homeassistant/helpers/template.py", line 646, in async_render
    raise TemplateError(err) from err
homeassistant.exceptions.TemplateError: ValueError: Template error: round got invalid input 'unknown' when rendering template 'Conso du mois dernier : {{ states("sensor.monthly_power_last_period") | round(2) }} Wh power → €{{ states("sensor.monthly_power_cost_last_period") | float | round(2) }}.' but no default was specified
2025-04-17 22:54:24.694 WARNING (MainThread) [homeassistant.components.input_boolean.yaml_collection] Duplicate ID 'dark_mode' detected, skipping
2025-04-17 22:54:24.694 WARNING (MainThread) [homeassistant.components.input_boolean.yaml_collection] Duplicate ID 'theme_alternative' detected, skipping
2025-04-17 23:25:25.778 WARNING (SyncWorker_3) [homeassistant.loader] We found a custom integration dyson_local which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2025-04-17 23:25:25.778 WARNING (SyncWorker_3) [homeassistant.loader] We found a custom integration hacs which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2025-04-17 23:25:25.779 WARNING (SyncWorker_3) [homeassistant.loader] We found a custom integration nordpool which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2025-04-17 23:25:25.779 WARNING (SyncWorker_3) [homeassistant.loader] We found a custom integration pyscript which has not been tested by Home Assistant. This component might cause stability problems, be sure to disable it if you experience issues with Home Assistant
2025-04-17 23:25:42.284 WARNING (MainThread) [homeassistant.core] Task <Task pending name='service call background homeassistant.restart' coro=<ServiceRegistry._run_service_call_catch_exceptions() running at /usr/src/homeassistant/homeassistant/core.py:2814> wait_for=<Task pending name='admin service homeassistant.restart' coro=<async_setup.<locals>.async_handle_core_service() running at /usr/src/homeassistant/homeassistant/components/homeassistant/__init__.py:213> wait_for=<Future pending cb=[Task.task_wakeup()]> cb=[set.remove(), Task.task_wakeup()]> cb=[set.remove()]> was still running after final writes shutdown stage; Integrations should cancel non-critical tasks when receiving the stop event to prevent delaying shutdown
